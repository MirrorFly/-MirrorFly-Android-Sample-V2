// Generated by view binder compiler. Do not edit!
package com.contusfly.mediapicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.mediapicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FolderListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView firstImage;

  @NonNull
  public final TextView folderContentsCount;

  @NonNull
  public final ImageView folderImage;

  @NonNull
  public final ConstraintLayout folderLayout;

  @NonNull
  public final TextView folderName;

  private FolderListItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView firstImage,
      @NonNull TextView folderContentsCount, @NonNull ImageView folderImage,
      @NonNull ConstraintLayout folderLayout, @NonNull TextView folderName) {
    this.rootView = rootView;
    this.firstImage = firstImage;
    this.folderContentsCount = folderContentsCount;
    this.folderImage = folderImage;
    this.folderLayout = folderLayout;
    this.folderName = folderName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FolderListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FolderListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.folder_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FolderListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.first_image;
      ImageView firstImage = ViewBindings.findChildViewById(rootView, id);
      if (firstImage == null) {
        break missingId;
      }

      id = R.id.folder_contents_count;
      TextView folderContentsCount = ViewBindings.findChildViewById(rootView, id);
      if (folderContentsCount == null) {
        break missingId;
      }

      id = R.id.folder_image;
      ImageView folderImage = ViewBindings.findChildViewById(rootView, id);
      if (folderImage == null) {
        break missingId;
      }

      ConstraintLayout folderLayout = (ConstraintLayout) rootView;

      id = R.id.folder_name;
      TextView folderName = ViewBindings.findChildViewById(rootView, id);
      if (folderName == null) {
        break missingId;
      }

      return new FolderListItemBinding((ConstraintLayout) rootView, firstImage, folderContentsCount,
          folderImage, folderLayout, folderName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
