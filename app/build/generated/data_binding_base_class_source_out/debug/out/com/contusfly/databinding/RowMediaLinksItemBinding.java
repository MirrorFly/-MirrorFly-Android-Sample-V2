// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMediaLinksItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView imageLinkNavigation;

  @NonNull
  public final ShapeableImageView imageLinkPreview;

  @NonNull
  public final AppCompatImageView imageMeet;

  @NonNull
  public final ConstraintLayout layoutLink;

  @NonNull
  public final ConstraintLayout layoutLinkContent;

  @NonNull
  public final ConstraintLayout layoutLinkNavigation;

  @NonNull
  public final View linksSeparator;

  @NonNull
  public final ConstraintLayout mediaViewItem;

  @NonNull
  public final AppCompatTextView textLinkContent;

  @NonNull
  public final AppCompatTextView textLinkDescription;

  @NonNull
  public final AppCompatTextView textLinkHost;

  @NonNull
  public final AppCompatTextView textLinkTitle;

  private RowMediaLinksItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView imageLinkNavigation, @NonNull ShapeableImageView imageLinkPreview,
      @NonNull AppCompatImageView imageMeet, @NonNull ConstraintLayout layoutLink,
      @NonNull ConstraintLayout layoutLinkContent, @NonNull ConstraintLayout layoutLinkNavigation,
      @NonNull View linksSeparator, @NonNull ConstraintLayout mediaViewItem,
      @NonNull AppCompatTextView textLinkContent, @NonNull AppCompatTextView textLinkDescription,
      @NonNull AppCompatTextView textLinkHost, @NonNull AppCompatTextView textLinkTitle) {
    this.rootView = rootView;
    this.imageLinkNavigation = imageLinkNavigation;
    this.imageLinkPreview = imageLinkPreview;
    this.imageMeet = imageMeet;
    this.layoutLink = layoutLink;
    this.layoutLinkContent = layoutLinkContent;
    this.layoutLinkNavigation = layoutLinkNavigation;
    this.linksSeparator = linksSeparator;
    this.mediaViewItem = mediaViewItem;
    this.textLinkContent = textLinkContent;
    this.textLinkDescription = textLinkDescription;
    this.textLinkHost = textLinkHost;
    this.textLinkTitle = textLinkTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMediaLinksItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMediaLinksItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_media_links_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMediaLinksItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_link_navigation;
      AppCompatImageView imageLinkNavigation = ViewBindings.findChildViewById(rootView, id);
      if (imageLinkNavigation == null) {
        break missingId;
      }

      id = R.id.image_link_preview;
      ShapeableImageView imageLinkPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageLinkPreview == null) {
        break missingId;
      }

      id = R.id.image_meet;
      AppCompatImageView imageMeet = ViewBindings.findChildViewById(rootView, id);
      if (imageMeet == null) {
        break missingId;
      }

      id = R.id.layout_link;
      ConstraintLayout layoutLink = ViewBindings.findChildViewById(rootView, id);
      if (layoutLink == null) {
        break missingId;
      }

      id = R.id.layout_link_content;
      ConstraintLayout layoutLinkContent = ViewBindings.findChildViewById(rootView, id);
      if (layoutLinkContent == null) {
        break missingId;
      }

      id = R.id.layout_link_navigation;
      ConstraintLayout layoutLinkNavigation = ViewBindings.findChildViewById(rootView, id);
      if (layoutLinkNavigation == null) {
        break missingId;
      }

      id = R.id.links_separator;
      View linksSeparator = ViewBindings.findChildViewById(rootView, id);
      if (linksSeparator == null) {
        break missingId;
      }

      ConstraintLayout mediaViewItem = (ConstraintLayout) rootView;

      id = R.id.text_link_content;
      AppCompatTextView textLinkContent = ViewBindings.findChildViewById(rootView, id);
      if (textLinkContent == null) {
        break missingId;
      }

      id = R.id.text_link_description;
      AppCompatTextView textLinkDescription = ViewBindings.findChildViewById(rootView, id);
      if (textLinkDescription == null) {
        break missingId;
      }

      id = R.id.text_link_host;
      AppCompatTextView textLinkHost = ViewBindings.findChildViewById(rootView, id);
      if (textLinkHost == null) {
        break missingId;
      }

      id = R.id.text_link_title;
      AppCompatTextView textLinkTitle = ViewBindings.findChildViewById(rootView, id);
      if (textLinkTitle == null) {
        break missingId;
      }

      return new RowMediaLinksItemBinding((ConstraintLayout) rootView, imageLinkNavigation,
          imageLinkPreview, imageMeet, layoutLink, layoutLinkContent, layoutLinkNavigation,
          linksSeparator, mediaViewItem, textLinkContent, textLinkDescription, textLinkHost,
          textLinkTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
