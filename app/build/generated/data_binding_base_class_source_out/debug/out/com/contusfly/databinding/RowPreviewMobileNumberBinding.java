// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowPreviewMobileNumberBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox checkSelection;

  @NonNull
  public final AppCompatTextView mobileNumber;

  @NonNull
  public final AppCompatTextView numberType;

  @NonNull
  public final AppCompatImageView phoneIcon;

  @NonNull
  public final ConstraintLayout rootLayout;

  private RowPreviewMobileNumberBinding(@NonNull ConstraintLayout rootView,
      @NonNull CheckBox checkSelection, @NonNull AppCompatTextView mobileNumber,
      @NonNull AppCompatTextView numberType, @NonNull AppCompatImageView phoneIcon,
      @NonNull ConstraintLayout rootLayout) {
    this.rootView = rootView;
    this.checkSelection = checkSelection;
    this.mobileNumber = mobileNumber;
    this.numberType = numberType;
    this.phoneIcon = phoneIcon;
    this.rootLayout = rootLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPreviewMobileNumberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPreviewMobileNumberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_preview_mobile_number, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPreviewMobileNumberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_selection;
      CheckBox checkSelection = ViewBindings.findChildViewById(rootView, id);
      if (checkSelection == null) {
        break missingId;
      }

      id = R.id.mobile_number;
      AppCompatTextView mobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (mobileNumber == null) {
        break missingId;
      }

      id = R.id.number_type;
      AppCompatTextView numberType = ViewBindings.findChildViewById(rootView, id);
      if (numberType == null) {
        break missingId;
      }

      id = R.id.phone_icon;
      AppCompatImageView phoneIcon = ViewBindings.findChildViewById(rootView, id);
      if (phoneIcon == null) {
        break missingId;
      }

      ConstraintLayout rootLayout = (ConstraintLayout) rootView;

      return new RowPreviewMobileNumberBinding((ConstraintLayout) rootView, checkSelection,
          mobileNumber, numberType, phoneIcon, rootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
