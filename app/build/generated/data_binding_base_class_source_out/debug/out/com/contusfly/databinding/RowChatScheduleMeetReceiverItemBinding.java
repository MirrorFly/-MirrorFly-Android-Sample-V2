// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.emoji.widget.EmojiAppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatScheduleMeetReceiverItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView editTxtId;

  @NonNull
  public final RowStarredMessageHeaderReceiverBinding headerStarredMessageSender;

  @NonNull
  public final ImageView icStarReceived;

  @NonNull
  public final ImageView imageReceivedRecall;

  @NonNull
  public final LinearLayout llChatReceiverView;

  @NonNull
  public final LinearLayout meetLinkTxtViewLl;

  @NonNull
  public final RelativeLayout rlHeaderReceiver;

  @NonNull
  public final RelativeLayout rowChatMeet;

  @NonNull
  public final ImageView scheduleMeetLinkLogo;

  @NonNull
  public final LinearLayout scheduleMeetLinkView;

  @NonNull
  public final AppCompatTextView scheduledDateTimeTxtView;

  @NonNull
  public final AppCompatTextView scheduledOnTxtView;

  @NonNull
  public final ImageView sendImgForward;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final TextView textRevChat;

  @NonNull
  public final EmojiAppCompatTextView textRevChatTranslated;

  @NonNull
  public final AppCompatTextView textRevTextTime;

  @NonNull
  public final LinearLayout translatedLayout;

  @NonNull
  public final FrameLayout viewChatRevMeet;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final ViewStub viewSenderName;

  @NonNull
  public final View viewTranslated;

  private RowChatScheduleMeetReceiverItemBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView editTxtId,
      @NonNull RowStarredMessageHeaderReceiverBinding headerStarredMessageSender,
      @NonNull ImageView icStarReceived, @NonNull ImageView imageReceivedRecall,
      @NonNull LinearLayout llChatReceiverView, @NonNull LinearLayout meetLinkTxtViewLl,
      @NonNull RelativeLayout rlHeaderReceiver, @NonNull RelativeLayout rowChatMeet,
      @NonNull ImageView scheduleMeetLinkLogo, @NonNull LinearLayout scheduleMeetLinkView,
      @NonNull AppCompatTextView scheduledDateTimeTxtView,
      @NonNull AppCompatTextView scheduledOnTxtView, @NonNull ImageView sendImgForward,
      @NonNull AppCompatTextView textChatDate, @NonNull TextView textRevChat,
      @NonNull EmojiAppCompatTextView textRevChatTranslated,
      @NonNull AppCompatTextView textRevTextTime, @NonNull LinearLayout translatedLayout,
      @NonNull FrameLayout viewChatRevMeet, @NonNull View viewDivider,
      @NonNull ViewStub viewMessageDate, @NonNull ViewStub viewSenderName,
      @NonNull View viewTranslated) {
    this.rootView = rootView;
    this.editTxtId = editTxtId;
    this.headerStarredMessageSender = headerStarredMessageSender;
    this.icStarReceived = icStarReceived;
    this.imageReceivedRecall = imageReceivedRecall;
    this.llChatReceiverView = llChatReceiverView;
    this.meetLinkTxtViewLl = meetLinkTxtViewLl;
    this.rlHeaderReceiver = rlHeaderReceiver;
    this.rowChatMeet = rowChatMeet;
    this.scheduleMeetLinkLogo = scheduleMeetLinkLogo;
    this.scheduleMeetLinkView = scheduleMeetLinkView;
    this.scheduledDateTimeTxtView = scheduledDateTimeTxtView;
    this.scheduledOnTxtView = scheduledOnTxtView;
    this.sendImgForward = sendImgForward;
    this.textChatDate = textChatDate;
    this.textRevChat = textRevChat;
    this.textRevChatTranslated = textRevChatTranslated;
    this.textRevTextTime = textRevTextTime;
    this.translatedLayout = translatedLayout;
    this.viewChatRevMeet = viewChatRevMeet;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewSenderName = viewSenderName;
    this.viewTranslated = viewTranslated;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatScheduleMeetReceiverItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatScheduleMeetReceiverItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_schedule_meet_receiver_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatScheduleMeetReceiverItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_txt_id;
      AppCompatTextView editTxtId = ViewBindings.findChildViewById(rootView, id);
      if (editTxtId == null) {
        break missingId;
      }

      id = R.id.header_starred_message_sender;
      View headerStarredMessageSender = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageSender == null) {
        break missingId;
      }
      RowStarredMessageHeaderReceiverBinding binding_headerStarredMessageSender = RowStarredMessageHeaderReceiverBinding.bind(headerStarredMessageSender);

      id = R.id.ic_star_received;
      ImageView icStarReceived = ViewBindings.findChildViewById(rootView, id);
      if (icStarReceived == null) {
        break missingId;
      }

      id = R.id.image_received_recall;
      ImageView imageReceivedRecall = ViewBindings.findChildViewById(rootView, id);
      if (imageReceivedRecall == null) {
        break missingId;
      }

      id = R.id.ll_chat_receiver_view;
      LinearLayout llChatReceiverView = ViewBindings.findChildViewById(rootView, id);
      if (llChatReceiverView == null) {
        break missingId;
      }

      id = R.id.meet_link_txt_view_ll;
      LinearLayout meetLinkTxtViewLl = ViewBindings.findChildViewById(rootView, id);
      if (meetLinkTxtViewLl == null) {
        break missingId;
      }

      id = R.id.rl_header_receiver;
      RelativeLayout rlHeaderReceiver = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderReceiver == null) {
        break missingId;
      }

      id = R.id.row_chat_meet;
      RelativeLayout rowChatMeet = ViewBindings.findChildViewById(rootView, id);
      if (rowChatMeet == null) {
        break missingId;
      }

      id = R.id.schedule_meet_link_logo;
      ImageView scheduleMeetLinkLogo = ViewBindings.findChildViewById(rootView, id);
      if (scheduleMeetLinkLogo == null) {
        break missingId;
      }

      id = R.id.schedule_meet_link_view;
      LinearLayout scheduleMeetLinkView = ViewBindings.findChildViewById(rootView, id);
      if (scheduleMeetLinkView == null) {
        break missingId;
      }

      id = R.id.scheduled_date_time_txt_view;
      AppCompatTextView scheduledDateTimeTxtView = ViewBindings.findChildViewById(rootView, id);
      if (scheduledDateTimeTxtView == null) {
        break missingId;
      }

      id = R.id.scheduled_on_txt_view;
      AppCompatTextView scheduledOnTxtView = ViewBindings.findChildViewById(rootView, id);
      if (scheduledOnTxtView == null) {
        break missingId;
      }

      id = R.id.send_img_forward;
      ImageView sendImgForward = ViewBindings.findChildViewById(rootView, id);
      if (sendImgForward == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_rev_chat;
      TextView textRevChat = ViewBindings.findChildViewById(rootView, id);
      if (textRevChat == null) {
        break missingId;
      }

      id = R.id.text_rev_chat_translated;
      EmojiAppCompatTextView textRevChatTranslated = ViewBindings.findChildViewById(rootView, id);
      if (textRevChatTranslated == null) {
        break missingId;
      }

      id = R.id.text_rev_text_time;
      AppCompatTextView textRevTextTime = ViewBindings.findChildViewById(rootView, id);
      if (textRevTextTime == null) {
        break missingId;
      }

      id = R.id.translated_layout;
      LinearLayout translatedLayout = ViewBindings.findChildViewById(rootView, id);
      if (translatedLayout == null) {
        break missingId;
      }

      id = R.id.view_chat_rev_meet;
      FrameLayout viewChatRevMeet = ViewBindings.findChildViewById(rootView, id);
      if (viewChatRevMeet == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_sender_name;
      ViewStub viewSenderName = ViewBindings.findChildViewById(rootView, id);
      if (viewSenderName == null) {
        break missingId;
      }

      id = R.id.view_translated;
      View viewTranslated = ViewBindings.findChildViewById(rootView, id);
      if (viewTranslated == null) {
        break missingId;
      }

      return new RowChatScheduleMeetReceiverItemBinding((LinearLayout) rootView, editTxtId,
          binding_headerStarredMessageSender, icStarReceived, imageReceivedRecall,
          llChatReceiverView, meetLinkTxtViewLl, rlHeaderReceiver, rowChatMeet,
          scheduleMeetLinkLogo, scheduleMeetLinkView, scheduledDateTimeTxtView, scheduledOnTxtView,
          sendImgForward, textChatDate, textRevChat, textRevChatTranslated, textRevTextTime,
          translatedLayout, viewChatRevMeet, viewDivider, viewMessageDate, viewSenderName,
          viewTranslated);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
