// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.groupmention.MentionEditGroupText;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewChatFooterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView actionAttachment;

  @NonNull
  public final View chatFooterBottomDivider;

  @NonNull
  public final View chatFooterDivider;

  @NonNull
  public final MentionEditGroupText editChatMsg;

  @NonNull
  public final RecyclerView groupTagNameRecycler;

  @NonNull
  public final LinearLayout groupUserTagLayout;

  @NonNull
  public final ImageView imageActionAttachVoice;

  @NonNull
  public final ImageView imageAudioRecord;

  @NonNull
  public final ImageView imageAudioRecordDelete;

  @NonNull
  public final AppCompatImageView imageChatSend;

  @NonNull
  public final ImageView imageChatSmiley;

  @NonNull
  public final AppCompatImageView imageViewAudio;

  @NonNull
  public final RelativeLayout layoutViewAudio;

  @NonNull
  public final TextView textAudioRecordCancel;

  @NonNull
  public final TextView textAudioRecordTimer;

  @NonNull
  public final TextView textAudioSlideToCancel;

  @NonNull
  public final CustomTextView textNoMsg;

  @NonNull
  public final View viewAudioRecordSpace;

  @NonNull
  public final LinearLayout viewChat;

  @NonNull
  public final LinearLayout viewChildFooter;

  @NonNull
  public final LinearLayout viewFooter;

  @NonNull
  public final ReplyViewBinding viewTextReplyLayout;

  private ViewChatFooterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView actionAttachment, @NonNull View chatFooterBottomDivider,
      @NonNull View chatFooterDivider, @NonNull MentionEditGroupText editChatMsg,
      @NonNull RecyclerView groupTagNameRecycler, @NonNull LinearLayout groupUserTagLayout,
      @NonNull ImageView imageActionAttachVoice, @NonNull ImageView imageAudioRecord,
      @NonNull ImageView imageAudioRecordDelete, @NonNull AppCompatImageView imageChatSend,
      @NonNull ImageView imageChatSmiley, @NonNull AppCompatImageView imageViewAudio,
      @NonNull RelativeLayout layoutViewAudio, @NonNull TextView textAudioRecordCancel,
      @NonNull TextView textAudioRecordTimer, @NonNull TextView textAudioSlideToCancel,
      @NonNull CustomTextView textNoMsg, @NonNull View viewAudioRecordSpace,
      @NonNull LinearLayout viewChat, @NonNull LinearLayout viewChildFooter,
      @NonNull LinearLayout viewFooter, @NonNull ReplyViewBinding viewTextReplyLayout) {
    this.rootView = rootView;
    this.actionAttachment = actionAttachment;
    this.chatFooterBottomDivider = chatFooterBottomDivider;
    this.chatFooterDivider = chatFooterDivider;
    this.editChatMsg = editChatMsg;
    this.groupTagNameRecycler = groupTagNameRecycler;
    this.groupUserTagLayout = groupUserTagLayout;
    this.imageActionAttachVoice = imageActionAttachVoice;
    this.imageAudioRecord = imageAudioRecord;
    this.imageAudioRecordDelete = imageAudioRecordDelete;
    this.imageChatSend = imageChatSend;
    this.imageChatSmiley = imageChatSmiley;
    this.imageViewAudio = imageViewAudio;
    this.layoutViewAudio = layoutViewAudio;
    this.textAudioRecordCancel = textAudioRecordCancel;
    this.textAudioRecordTimer = textAudioRecordTimer;
    this.textAudioSlideToCancel = textAudioSlideToCancel;
    this.textNoMsg = textNoMsg;
    this.viewAudioRecordSpace = viewAudioRecordSpace;
    this.viewChat = viewChat;
    this.viewChildFooter = viewChildFooter;
    this.viewFooter = viewFooter;
    this.viewTextReplyLayout = viewTextReplyLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewChatFooterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewChatFooterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_chat_footer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewChatFooterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_attachment;
      ImageView actionAttachment = ViewBindings.findChildViewById(rootView, id);
      if (actionAttachment == null) {
        break missingId;
      }

      id = R.id.chat_footer_bottom_divider;
      View chatFooterBottomDivider = ViewBindings.findChildViewById(rootView, id);
      if (chatFooterBottomDivider == null) {
        break missingId;
      }

      id = R.id.chat_footer_divider;
      View chatFooterDivider = ViewBindings.findChildViewById(rootView, id);
      if (chatFooterDivider == null) {
        break missingId;
      }

      id = R.id.edit_chat_msg;
      MentionEditGroupText editChatMsg = ViewBindings.findChildViewById(rootView, id);
      if (editChatMsg == null) {
        break missingId;
      }

      id = R.id.group_tag_name_recycler;
      RecyclerView groupTagNameRecycler = ViewBindings.findChildViewById(rootView, id);
      if (groupTagNameRecycler == null) {
        break missingId;
      }

      id = R.id.group_user_tag_layout;
      LinearLayout groupUserTagLayout = ViewBindings.findChildViewById(rootView, id);
      if (groupUserTagLayout == null) {
        break missingId;
      }

      id = R.id.image_action_attach_voice;
      ImageView imageActionAttachVoice = ViewBindings.findChildViewById(rootView, id);
      if (imageActionAttachVoice == null) {
        break missingId;
      }

      id = R.id.image_audio_record;
      ImageView imageAudioRecord = ViewBindings.findChildViewById(rootView, id);
      if (imageAudioRecord == null) {
        break missingId;
      }

      id = R.id.image_audio_record_delete;
      ImageView imageAudioRecordDelete = ViewBindings.findChildViewById(rootView, id);
      if (imageAudioRecordDelete == null) {
        break missingId;
      }

      id = R.id.image_chat_send;
      AppCompatImageView imageChatSend = ViewBindings.findChildViewById(rootView, id);
      if (imageChatSend == null) {
        break missingId;
      }

      id = R.id.image_chat_smiley;
      ImageView imageChatSmiley = ViewBindings.findChildViewById(rootView, id);
      if (imageChatSmiley == null) {
        break missingId;
      }

      id = R.id.imageViewAudio;
      AppCompatImageView imageViewAudio = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAudio == null) {
        break missingId;
      }

      id = R.id.layoutViewAudio;
      RelativeLayout layoutViewAudio = ViewBindings.findChildViewById(rootView, id);
      if (layoutViewAudio == null) {
        break missingId;
      }

      id = R.id.text_audio_record_cancel;
      TextView textAudioRecordCancel = ViewBindings.findChildViewById(rootView, id);
      if (textAudioRecordCancel == null) {
        break missingId;
      }

      id = R.id.text_audio_record_timer;
      TextView textAudioRecordTimer = ViewBindings.findChildViewById(rootView, id);
      if (textAudioRecordTimer == null) {
        break missingId;
      }

      id = R.id.text_audio_slide_to_cancel;
      TextView textAudioSlideToCancel = ViewBindings.findChildViewById(rootView, id);
      if (textAudioSlideToCancel == null) {
        break missingId;
      }

      id = R.id.text_no_msg;
      CustomTextView textNoMsg = ViewBindings.findChildViewById(rootView, id);
      if (textNoMsg == null) {
        break missingId;
      }

      id = R.id.view_audio_record_space;
      View viewAudioRecordSpace = ViewBindings.findChildViewById(rootView, id);
      if (viewAudioRecordSpace == null) {
        break missingId;
      }

      id = R.id.view_chat;
      LinearLayout viewChat = ViewBindings.findChildViewById(rootView, id);
      if (viewChat == null) {
        break missingId;
      }

      id = R.id.view_child_footer;
      LinearLayout viewChildFooter = ViewBindings.findChildViewById(rootView, id);
      if (viewChildFooter == null) {
        break missingId;
      }

      id = R.id.view_footer;
      LinearLayout viewFooter = ViewBindings.findChildViewById(rootView, id);
      if (viewFooter == null) {
        break missingId;
      }

      id = R.id.view_text_reply_layout;
      View viewTextReplyLayout = ViewBindings.findChildViewById(rootView, id);
      if (viewTextReplyLayout == null) {
        break missingId;
      }
      ReplyViewBinding binding_viewTextReplyLayout = ReplyViewBinding.bind(viewTextReplyLayout);

      return new ViewChatFooterBinding((ConstraintLayout) rootView, actionAttachment,
          chatFooterBottomDivider, chatFooterDivider, editChatMsg, groupTagNameRecycler,
          groupUserTagLayout, imageActionAttachVoice, imageAudioRecord, imageAudioRecordDelete,
          imageChatSend, imageChatSmiley, imageViewAudio, layoutViewAudio, textAudioRecordCancel,
          textAudioRecordTimer, textAudioSlideToCancel, textNoMsg, viewAudioRecordSpace, viewChat,
          viewChildFooter, viewFooter, binding_viewTextReplyLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
