// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBackUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout accountBox;

  @NonNull
  public final AppCompatTextView autoBackupTitle;

  @NonNull
  public final LinearLayout autoBox;

  @NonNull
  public final SwitchCompat autoSwitch;

  @NonNull
  public final AppCompatImageView backBtn;

  @NonNull
  public final AppCompatButton backup;

  @NonNull
  public final AppCompatTextView backupInfoText;

  @NonNull
  public final RelativeLayout backupOverBox;

  @NonNull
  public final CustomTextView backupOverTitle;

  @NonNull
  public final AppCompatImageView cancelBackup;

  @NonNull
  public final CustomTextView connectivityText;

  @NonNull
  public final LinearLayout dateBox;

  @NonNull
  public final View dividerFive;

  @NonNull
  public final View dividerFour;

  @NonNull
  public final View dividerOne;

  @NonNull
  public final View dividerTwo;

  @NonNull
  public final CustomTextView downloadBackup;

  @NonNull
  public final ConstraintLayout driveBox;

  @NonNull
  public final CustomTextView driveEmail;

  @NonNull
  public final AppCompatTextView driveSettingsTextview;

  @NonNull
  public final AppCompatTextView frequencyText;

  @NonNull
  public final RelativeLayout functionalBox;

  @NonNull
  public final CustomTextView googleAccountTitle;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView imageBackupOver;

  @NonNull
  public final ImageView imageGoogleAccount;

  @NonNull
  public final AppCompatTextView lastBackupDate;

  @NonNull
  public final AppCompatTextView lastBackupSize;

  @NonNull
  public final AppCompatTextView lastBackupTextview;

  @NonNull
  public final AppCompatTextView localBackupRestoreInfoText;

  @NonNull
  public final AppCompatTextView localBackupRestoreText;

  @NonNull
  public final AppCompatImageView localCancelBackup;

  @NonNull
  public final LinearLayout localProgressBox;

  @NonNull
  public final AppCompatTextView localProgressText;

  @NonNull
  public final ProgressBar localWorkProgress;

  @NonNull
  public final ConstraintLayout mainBox;

  @NonNull
  public final LinearLayout progressBox;

  @NonNull
  public final CustomTextView restoreData;

  @NonNull
  public final LinearLayout scheduleBox;

  @NonNull
  public final ConstraintLayout serverBox;

  @NonNull
  public final LinearLayout sizeBox;

  @NonNull
  public final CustomTextView textTitle;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final AppCompatTextView uploadingProgressText;

  @NonNull
  public final ProgressBar workProgress;

  private ActivityBackUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout accountBox, @NonNull AppCompatTextView autoBackupTitle,
      @NonNull LinearLayout autoBox, @NonNull SwitchCompat autoSwitch,
      @NonNull AppCompatImageView backBtn, @NonNull AppCompatButton backup,
      @NonNull AppCompatTextView backupInfoText, @NonNull RelativeLayout backupOverBox,
      @NonNull CustomTextView backupOverTitle, @NonNull AppCompatImageView cancelBackup,
      @NonNull CustomTextView connectivityText, @NonNull LinearLayout dateBox,
      @NonNull View dividerFive, @NonNull View dividerFour, @NonNull View dividerOne,
      @NonNull View dividerTwo, @NonNull CustomTextView downloadBackup,
      @NonNull ConstraintLayout driveBox, @NonNull CustomTextView driveEmail,
      @NonNull AppCompatTextView driveSettingsTextview, @NonNull AppCompatTextView frequencyText,
      @NonNull RelativeLayout functionalBox, @NonNull CustomTextView googleAccountTitle,
      @NonNull Guideline guideline, @NonNull ImageView imageBackupOver,
      @NonNull ImageView imageGoogleAccount, @NonNull AppCompatTextView lastBackupDate,
      @NonNull AppCompatTextView lastBackupSize, @NonNull AppCompatTextView lastBackupTextview,
      @NonNull AppCompatTextView localBackupRestoreInfoText,
      @NonNull AppCompatTextView localBackupRestoreText,
      @NonNull AppCompatImageView localCancelBackup, @NonNull LinearLayout localProgressBox,
      @NonNull AppCompatTextView localProgressText, @NonNull ProgressBar localWorkProgress,
      @NonNull ConstraintLayout mainBox, @NonNull LinearLayout progressBox,
      @NonNull CustomTextView restoreData, @NonNull LinearLayout scheduleBox,
      @NonNull ConstraintLayout serverBox, @NonNull LinearLayout sizeBox,
      @NonNull CustomTextView textTitle, @NonNull Toolbar toolbar,
      @NonNull AppCompatTextView uploadingProgressText, @NonNull ProgressBar workProgress) {
    this.rootView = rootView;
    this.accountBox = accountBox;
    this.autoBackupTitle = autoBackupTitle;
    this.autoBox = autoBox;
    this.autoSwitch = autoSwitch;
    this.backBtn = backBtn;
    this.backup = backup;
    this.backupInfoText = backupInfoText;
    this.backupOverBox = backupOverBox;
    this.backupOverTitle = backupOverTitle;
    this.cancelBackup = cancelBackup;
    this.connectivityText = connectivityText;
    this.dateBox = dateBox;
    this.dividerFive = dividerFive;
    this.dividerFour = dividerFour;
    this.dividerOne = dividerOne;
    this.dividerTwo = dividerTwo;
    this.downloadBackup = downloadBackup;
    this.driveBox = driveBox;
    this.driveEmail = driveEmail;
    this.driveSettingsTextview = driveSettingsTextview;
    this.frequencyText = frequencyText;
    this.functionalBox = functionalBox;
    this.googleAccountTitle = googleAccountTitle;
    this.guideline = guideline;
    this.imageBackupOver = imageBackupOver;
    this.imageGoogleAccount = imageGoogleAccount;
    this.lastBackupDate = lastBackupDate;
    this.lastBackupSize = lastBackupSize;
    this.lastBackupTextview = lastBackupTextview;
    this.localBackupRestoreInfoText = localBackupRestoreInfoText;
    this.localBackupRestoreText = localBackupRestoreText;
    this.localCancelBackup = localCancelBackup;
    this.localProgressBox = localProgressBox;
    this.localProgressText = localProgressText;
    this.localWorkProgress = localWorkProgress;
    this.mainBox = mainBox;
    this.progressBox = progressBox;
    this.restoreData = restoreData;
    this.scheduleBox = scheduleBox;
    this.serverBox = serverBox;
    this.sizeBox = sizeBox;
    this.textTitle = textTitle;
    this.toolbar = toolbar;
    this.uploadingProgressText = uploadingProgressText;
    this.workProgress = workProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBackUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBackUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_back_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBackUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountBox;
      RelativeLayout accountBox = ViewBindings.findChildViewById(rootView, id);
      if (accountBox == null) {
        break missingId;
      }

      id = R.id.autoBackupTitle;
      AppCompatTextView autoBackupTitle = ViewBindings.findChildViewById(rootView, id);
      if (autoBackupTitle == null) {
        break missingId;
      }

      id = R.id.auto_box;
      LinearLayout autoBox = ViewBindings.findChildViewById(rootView, id);
      if (autoBox == null) {
        break missingId;
      }

      id = R.id.auto_switch;
      SwitchCompat autoSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoSwitch == null) {
        break missingId;
      }

      id = R.id.backBtn;
      AppCompatImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.backup;
      AppCompatButton backup = ViewBindings.findChildViewById(rootView, id);
      if (backup == null) {
        break missingId;
      }

      id = R.id.backupInfoText;
      AppCompatTextView backupInfoText = ViewBindings.findChildViewById(rootView, id);
      if (backupInfoText == null) {
        break missingId;
      }

      id = R.id.backupOverBox;
      RelativeLayout backupOverBox = ViewBindings.findChildViewById(rootView, id);
      if (backupOverBox == null) {
        break missingId;
      }

      id = R.id.backup_over_title;
      CustomTextView backupOverTitle = ViewBindings.findChildViewById(rootView, id);
      if (backupOverTitle == null) {
        break missingId;
      }

      id = R.id.cancelBackup;
      AppCompatImageView cancelBackup = ViewBindings.findChildViewById(rootView, id);
      if (cancelBackup == null) {
        break missingId;
      }

      id = R.id.connectivityText;
      CustomTextView connectivityText = ViewBindings.findChildViewById(rootView, id);
      if (connectivityText == null) {
        break missingId;
      }

      id = R.id.date_box;
      LinearLayout dateBox = ViewBindings.findChildViewById(rootView, id);
      if (dateBox == null) {
        break missingId;
      }

      id = R.id.dividerFive;
      View dividerFive = ViewBindings.findChildViewById(rootView, id);
      if (dividerFive == null) {
        break missingId;
      }

      id = R.id.dividerFour;
      View dividerFour = ViewBindings.findChildViewById(rootView, id);
      if (dividerFour == null) {
        break missingId;
      }

      id = R.id.dividerOne;
      View dividerOne = ViewBindings.findChildViewById(rootView, id);
      if (dividerOne == null) {
        break missingId;
      }

      id = R.id.dividerTwo;
      View dividerTwo = ViewBindings.findChildViewById(rootView, id);
      if (dividerTwo == null) {
        break missingId;
      }

      id = R.id.downloadBackup;
      CustomTextView downloadBackup = ViewBindings.findChildViewById(rootView, id);
      if (downloadBackup == null) {
        break missingId;
      }

      id = R.id.driveBox;
      ConstraintLayout driveBox = ViewBindings.findChildViewById(rootView, id);
      if (driveBox == null) {
        break missingId;
      }

      id = R.id.driveEmail;
      CustomTextView driveEmail = ViewBindings.findChildViewById(rootView, id);
      if (driveEmail == null) {
        break missingId;
      }

      id = R.id.drive_settings_textview;
      AppCompatTextView driveSettingsTextview = ViewBindings.findChildViewById(rootView, id);
      if (driveSettingsTextview == null) {
        break missingId;
      }

      id = R.id.frequencyText;
      AppCompatTextView frequencyText = ViewBindings.findChildViewById(rootView, id);
      if (frequencyText == null) {
        break missingId;
      }

      id = R.id.functionalBox;
      RelativeLayout functionalBox = ViewBindings.findChildViewById(rootView, id);
      if (functionalBox == null) {
        break missingId;
      }

      id = R.id.google_account_title;
      CustomTextView googleAccountTitle = ViewBindings.findChildViewById(rootView, id);
      if (googleAccountTitle == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.image_backup_over;
      ImageView imageBackupOver = ViewBindings.findChildViewById(rootView, id);
      if (imageBackupOver == null) {
        break missingId;
      }

      id = R.id.image_google_account;
      ImageView imageGoogleAccount = ViewBindings.findChildViewById(rootView, id);
      if (imageGoogleAccount == null) {
        break missingId;
      }

      id = R.id.last_backup_date;
      AppCompatTextView lastBackupDate = ViewBindings.findChildViewById(rootView, id);
      if (lastBackupDate == null) {
        break missingId;
      }

      id = R.id.last_backup_size;
      AppCompatTextView lastBackupSize = ViewBindings.findChildViewById(rootView, id);
      if (lastBackupSize == null) {
        break missingId;
      }

      id = R.id.last_backup_textview;
      AppCompatTextView lastBackupTextview = ViewBindings.findChildViewById(rootView, id);
      if (lastBackupTextview == null) {
        break missingId;
      }

      id = R.id.localBackupRestoreInfoText;
      AppCompatTextView localBackupRestoreInfoText = ViewBindings.findChildViewById(rootView, id);
      if (localBackupRestoreInfoText == null) {
        break missingId;
      }

      id = R.id.localBackupRestoreText;
      AppCompatTextView localBackupRestoreText = ViewBindings.findChildViewById(rootView, id);
      if (localBackupRestoreText == null) {
        break missingId;
      }

      id = R.id.localCancelBackup;
      AppCompatImageView localCancelBackup = ViewBindings.findChildViewById(rootView, id);
      if (localCancelBackup == null) {
        break missingId;
      }

      id = R.id.localProgressBox;
      LinearLayout localProgressBox = ViewBindings.findChildViewById(rootView, id);
      if (localProgressBox == null) {
        break missingId;
      }

      id = R.id.localProgressText;
      AppCompatTextView localProgressText = ViewBindings.findChildViewById(rootView, id);
      if (localProgressText == null) {
        break missingId;
      }

      id = R.id.localWorkProgress;
      ProgressBar localWorkProgress = ViewBindings.findChildViewById(rootView, id);
      if (localWorkProgress == null) {
        break missingId;
      }

      id = R.id.mainBox;
      ConstraintLayout mainBox = ViewBindings.findChildViewById(rootView, id);
      if (mainBox == null) {
        break missingId;
      }

      id = R.id.progressBox;
      LinearLayout progressBox = ViewBindings.findChildViewById(rootView, id);
      if (progressBox == null) {
        break missingId;
      }

      id = R.id.restoreData;
      CustomTextView restoreData = ViewBindings.findChildViewById(rootView, id);
      if (restoreData == null) {
        break missingId;
      }

      id = R.id.scheduleBox;
      LinearLayout scheduleBox = ViewBindings.findChildViewById(rootView, id);
      if (scheduleBox == null) {
        break missingId;
      }

      id = R.id.server_box;
      ConstraintLayout serverBox = ViewBindings.findChildViewById(rootView, id);
      if (serverBox == null) {
        break missingId;
      }

      id = R.id.size_box;
      LinearLayout sizeBox = ViewBindings.findChildViewById(rootView, id);
      if (sizeBox == null) {
        break missingId;
      }

      id = R.id.text_title;
      CustomTextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.uploadingProgressText;
      AppCompatTextView uploadingProgressText = ViewBindings.findChildViewById(rootView, id);
      if (uploadingProgressText == null) {
        break missingId;
      }

      id = R.id.workProgress;
      ProgressBar workProgress = ViewBindings.findChildViewById(rootView, id);
      if (workProgress == null) {
        break missingId;
      }

      return new ActivityBackUpBinding((ConstraintLayout) rootView, accountBox, autoBackupTitle,
          autoBox, autoSwitch, backBtn, backup, backupInfoText, backupOverBox, backupOverTitle,
          cancelBackup, connectivityText, dateBox, dividerFive, dividerFour, dividerOne, dividerTwo,
          downloadBackup, driveBox, driveEmail, driveSettingsTextview, frequencyText, functionalBox,
          googleAccountTitle, guideline, imageBackupOver, imageGoogleAccount, lastBackupDate,
          lastBackupSize, lastBackupTextview, localBackupRestoreInfoText, localBackupRestoreText,
          localCancelBackup, localProgressBox, localProgressText, localWorkProgress, mainBox,
          progressBox, restoreData, scheduleBox, serverBox, sizeBox, textTitle, toolbar,
          uploadingProgressText, workProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
