// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowLayoutArchivedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatImageView imageArchiveChat;

  @NonNull
  public final RelativeLayout rootLayout;

  @NonNull
  public final CustomTextView textUnreadChatCount;

  @NonNull
  public final View viewSpace;

  private RowLayoutArchivedBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatImageView imageArchiveChat, @NonNull RelativeLayout rootLayout,
      @NonNull CustomTextView textUnreadChatCount, @NonNull View viewSpace) {
    this.rootView = rootView;
    this.imageArchiveChat = imageArchiveChat;
    this.rootLayout = rootLayout;
    this.textUnreadChatCount = textUnreadChatCount;
    this.viewSpace = viewSpace;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowLayoutArchivedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowLayoutArchivedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_layout_archived, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowLayoutArchivedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_archive_chat;
      AppCompatImageView imageArchiveChat = ViewBindings.findChildViewById(rootView, id);
      if (imageArchiveChat == null) {
        break missingId;
      }

      id = R.id.root_layout;
      RelativeLayout rootLayout = ViewBindings.findChildViewById(rootView, id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.text_unread_chat_count;
      CustomTextView textUnreadChatCount = ViewBindings.findChildViewById(rootView, id);
      if (textUnreadChatCount == null) {
        break missingId;
      }

      id = R.id.view_space;
      View viewSpace = ViewBindings.findChildViewById(rootView, id);
      if (viewSpace == null) {
        break missingId;
      }

      return new RowLayoutArchivedBinding((RelativeLayout) rootView, imageArchiveChat, rootLayout,
          textUnreadChatCount, viewSpace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
