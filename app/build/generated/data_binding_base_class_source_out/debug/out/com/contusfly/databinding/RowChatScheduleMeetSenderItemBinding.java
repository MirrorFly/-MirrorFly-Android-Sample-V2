// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatScheduleMeetSenderItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView editTxtId;

  @NonNull
  public final RowStarredMessageHeaderSenderBinding headerStarredMessageReceiver;

  @NonNull
  public final ImageView icStar;

  @NonNull
  public final ImageView imageMessageStatus;

  @NonNull
  public final ImageView imageSentRecall;

  @NonNull
  public final LinearLayout meetLinkTxtViewLl;

  @NonNull
  public final RelativeLayout rlHeaderSender;

  @NonNull
  public final RelativeLayout rowChatMeet;

  @NonNull
  public final ImageView scheduleMeetLinkLogo;

  @NonNull
  public final LinearLayout scheduleMeetLinkView;

  @NonNull
  public final AppCompatTextView scheduledDateTimeTxtView;

  @NonNull
  public final AppCompatTextView scheduledOnTxtView;

  @NonNull
  public final ImageView sendImgForward;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final AppCompatTextView textMessageSentTime;

  @NonNull
  public final TextView textSendChat;

  @NonNull
  public final FrameLayout viewChatSenderTxt;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final ConstraintLayout viewTextSender;

  @NonNull
  public final ListChatReplySentItemBinding viewTextSentReply;

  private RowChatScheduleMeetSenderItemBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView editTxtId,
      @NonNull RowStarredMessageHeaderSenderBinding headerStarredMessageReceiver,
      @NonNull ImageView icStar, @NonNull ImageView imageMessageStatus,
      @NonNull ImageView imageSentRecall, @NonNull LinearLayout meetLinkTxtViewLl,
      @NonNull RelativeLayout rlHeaderSender, @NonNull RelativeLayout rowChatMeet,
      @NonNull ImageView scheduleMeetLinkLogo, @NonNull LinearLayout scheduleMeetLinkView,
      @NonNull AppCompatTextView scheduledDateTimeTxtView,
      @NonNull AppCompatTextView scheduledOnTxtView, @NonNull ImageView sendImgForward,
      @NonNull AppCompatTextView textChatDate, @NonNull AppCompatTextView textMessageSentTime,
      @NonNull TextView textSendChat, @NonNull FrameLayout viewChatSenderTxt,
      @NonNull View viewDivider, @NonNull ViewStub viewMessageDate,
      @NonNull ConstraintLayout viewTextSender,
      @NonNull ListChatReplySentItemBinding viewTextSentReply) {
    this.rootView = rootView;
    this.editTxtId = editTxtId;
    this.headerStarredMessageReceiver = headerStarredMessageReceiver;
    this.icStar = icStar;
    this.imageMessageStatus = imageMessageStatus;
    this.imageSentRecall = imageSentRecall;
    this.meetLinkTxtViewLl = meetLinkTxtViewLl;
    this.rlHeaderSender = rlHeaderSender;
    this.rowChatMeet = rowChatMeet;
    this.scheduleMeetLinkLogo = scheduleMeetLinkLogo;
    this.scheduleMeetLinkView = scheduleMeetLinkView;
    this.scheduledDateTimeTxtView = scheduledDateTimeTxtView;
    this.scheduledOnTxtView = scheduledOnTxtView;
    this.sendImgForward = sendImgForward;
    this.textChatDate = textChatDate;
    this.textMessageSentTime = textMessageSentTime;
    this.textSendChat = textSendChat;
    this.viewChatSenderTxt = viewChatSenderTxt;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewTextSender = viewTextSender;
    this.viewTextSentReply = viewTextSentReply;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatScheduleMeetSenderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatScheduleMeetSenderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_schedule_meet_sender_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatScheduleMeetSenderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_txt_id;
      AppCompatTextView editTxtId = ViewBindings.findChildViewById(rootView, id);
      if (editTxtId == null) {
        break missingId;
      }

      id = R.id.header_starred_message_receiver;
      View headerStarredMessageReceiver = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageReceiver == null) {
        break missingId;
      }
      RowStarredMessageHeaderSenderBinding binding_headerStarredMessageReceiver = RowStarredMessageHeaderSenderBinding.bind(headerStarredMessageReceiver);

      id = R.id.ic_star;
      ImageView icStar = ViewBindings.findChildViewById(rootView, id);
      if (icStar == null) {
        break missingId;
      }

      id = R.id.image_message_status;
      ImageView imageMessageStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageMessageStatus == null) {
        break missingId;
      }

      id = R.id.image_sent_recall;
      ImageView imageSentRecall = ViewBindings.findChildViewById(rootView, id);
      if (imageSentRecall == null) {
        break missingId;
      }

      id = R.id.meet_link_txt_view_ll;
      LinearLayout meetLinkTxtViewLl = ViewBindings.findChildViewById(rootView, id);
      if (meetLinkTxtViewLl == null) {
        break missingId;
      }

      id = R.id.rl_header_sender;
      RelativeLayout rlHeaderSender = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderSender == null) {
        break missingId;
      }

      id = R.id.row_chat_meet;
      RelativeLayout rowChatMeet = ViewBindings.findChildViewById(rootView, id);
      if (rowChatMeet == null) {
        break missingId;
      }

      id = R.id.schedule_meet_link_logo;
      ImageView scheduleMeetLinkLogo = ViewBindings.findChildViewById(rootView, id);
      if (scheduleMeetLinkLogo == null) {
        break missingId;
      }

      id = R.id.schedule_meet_link_view;
      LinearLayout scheduleMeetLinkView = ViewBindings.findChildViewById(rootView, id);
      if (scheduleMeetLinkView == null) {
        break missingId;
      }

      id = R.id.scheduled_date_time_txt_view;
      AppCompatTextView scheduledDateTimeTxtView = ViewBindings.findChildViewById(rootView, id);
      if (scheduledDateTimeTxtView == null) {
        break missingId;
      }

      id = R.id.scheduled_on_txt_view;
      AppCompatTextView scheduledOnTxtView = ViewBindings.findChildViewById(rootView, id);
      if (scheduledOnTxtView == null) {
        break missingId;
      }

      id = R.id.send_img_forward;
      ImageView sendImgForward = ViewBindings.findChildViewById(rootView, id);
      if (sendImgForward == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_message_sent_time;
      AppCompatTextView textMessageSentTime = ViewBindings.findChildViewById(rootView, id);
      if (textMessageSentTime == null) {
        break missingId;
      }

      id = R.id.text_send_chat;
      TextView textSendChat = ViewBindings.findChildViewById(rootView, id);
      if (textSendChat == null) {
        break missingId;
      }

      id = R.id.view_chat_sender_txt;
      FrameLayout viewChatSenderTxt = ViewBindings.findChildViewById(rootView, id);
      if (viewChatSenderTxt == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_text_sender;
      ConstraintLayout viewTextSender = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSender == null) {
        break missingId;
      }

      id = R.id.view_text_sent_reply;
      View viewTextSentReply = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSentReply == null) {
        break missingId;
      }
      ListChatReplySentItemBinding binding_viewTextSentReply = ListChatReplySentItemBinding.bind(viewTextSentReply);

      return new RowChatScheduleMeetSenderItemBinding((LinearLayout) rootView, editTxtId,
          binding_headerStarredMessageReceiver, icStar, imageMessageStatus, imageSentRecall,
          meetLinkTxtViewLl, rlHeaderSender, rowChatMeet, scheduleMeetLinkLogo,
          scheduleMeetLinkView, scheduledDateTimeTxtView, scheduledOnTxtView, sendImgForward,
          textChatDate, textMessageSentTime, textSendChat, viewChatSenderTxt, viewDivider,
          viewMessageDate, viewTextSender, binding_viewTextSentReply);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
