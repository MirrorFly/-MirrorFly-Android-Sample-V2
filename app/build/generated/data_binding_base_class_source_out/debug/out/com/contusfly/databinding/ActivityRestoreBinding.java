// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRestoreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout accountBox;

  @NonNull
  public final AppCompatButton actionNext;

  @NonNull
  public final AppCompatTextView addAccount;

  @NonNull
  public final AppCompatImageView animationBox;

  @NonNull
  public final AppCompatTextView autoBackupTitle;

  @NonNull
  public final LinearLayout autoBox;

  @NonNull
  public final SwitchCompat autoSwitch;

  @NonNull
  public final AppCompatImageView backBtn;

  @NonNull
  public final ConstraintLayout databaseImageLayout;

  @NonNull
  public final View divider;

  @NonNull
  public final View dividerAccount;

  @NonNull
  public final View dividerOne;

  @NonNull
  public final View dividerTwo;

  @NonNull
  public final CustomTextView driveEmail;

  @NonNull
  public final AppCompatTextView errorInfoText;

  @NonNull
  public final ConstraintLayout finalBox;

  @NonNull
  public final AppCompatButton finalSkip;

  @NonNull
  public final AppCompatTextView frequencyText;

  @NonNull
  public final CustomTextView googleAccountTitle;

  @NonNull
  public final AppCompatImageView icDatabase;

  @NonNull
  public final AppCompatImageView icRestore1;

  @NonNull
  public final AppCompatImageView icRestore2;

  @NonNull
  public final AppCompatImageView icRestore3;

  @NonNull
  public final AppCompatImageView icRestore4;

  @NonNull
  public final AppCompatImageView icSmartphone;

  @NonNull
  public final AppCompatImageView icTimer;

  @NonNull
  public final ImageView imageGoogleAccount;

  @NonNull
  public final AppCompatTextView infoText;

  @NonNull
  public final ConstraintLayout initialBox;

  @NonNull
  public final Barrier labelBarrier;

  @NonNull
  public final AppCompatTextView lastBackupDate;

  @NonNull
  public final AppCompatTextView lastBackupSize;

  @NonNull
  public final AppCompatTextView mainTitle;

  @NonNull
  public final RelativeLayout newAccountBox;

  @NonNull
  public final ConstraintLayout newUserBox;

  @NonNull
  public final AppCompatButton newUserSkip;

  @NonNull
  public final LinearLayout progressBox;

  @NonNull
  public final AppCompatTextView progressText;

  @NonNull
  public final AppCompatButton restore;

  @NonNull
  public final LinearLayout scheduleBox;

  @NonNull
  public final AppCompatButton skip;

  @NonNull
  public final ConstraintLayout smartphoneImageLayout;

  @NonNull
  public final CustomTextView textTitle;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final ConstraintLayout viewRestoreAnimationImage;

  @NonNull
  public final ProgressBar workProgress;

  private ActivityRestoreBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout accountBox, @NonNull AppCompatButton actionNext,
      @NonNull AppCompatTextView addAccount, @NonNull AppCompatImageView animationBox,
      @NonNull AppCompatTextView autoBackupTitle, @NonNull LinearLayout autoBox,
      @NonNull SwitchCompat autoSwitch, @NonNull AppCompatImageView backBtn,
      @NonNull ConstraintLayout databaseImageLayout, @NonNull View divider,
      @NonNull View dividerAccount, @NonNull View dividerOne, @NonNull View dividerTwo,
      @NonNull CustomTextView driveEmail, @NonNull AppCompatTextView errorInfoText,
      @NonNull ConstraintLayout finalBox, @NonNull AppCompatButton finalSkip,
      @NonNull AppCompatTextView frequencyText, @NonNull CustomTextView googleAccountTitle,
      @NonNull AppCompatImageView icDatabase, @NonNull AppCompatImageView icRestore1,
      @NonNull AppCompatImageView icRestore2, @NonNull AppCompatImageView icRestore3,
      @NonNull AppCompatImageView icRestore4, @NonNull AppCompatImageView icSmartphone,
      @NonNull AppCompatImageView icTimer, @NonNull ImageView imageGoogleAccount,
      @NonNull AppCompatTextView infoText, @NonNull ConstraintLayout initialBox,
      @NonNull Barrier labelBarrier, @NonNull AppCompatTextView lastBackupDate,
      @NonNull AppCompatTextView lastBackupSize, @NonNull AppCompatTextView mainTitle,
      @NonNull RelativeLayout newAccountBox, @NonNull ConstraintLayout newUserBox,
      @NonNull AppCompatButton newUserSkip, @NonNull LinearLayout progressBox,
      @NonNull AppCompatTextView progressText, @NonNull AppCompatButton restore,
      @NonNull LinearLayout scheduleBox, @NonNull AppCompatButton skip,
      @NonNull ConstraintLayout smartphoneImageLayout, @NonNull CustomTextView textTitle,
      @NonNull Toolbar toolbar, @NonNull ConstraintLayout viewRestoreAnimationImage,
      @NonNull ProgressBar workProgress) {
    this.rootView = rootView;
    this.accountBox = accountBox;
    this.actionNext = actionNext;
    this.addAccount = addAccount;
    this.animationBox = animationBox;
    this.autoBackupTitle = autoBackupTitle;
    this.autoBox = autoBox;
    this.autoSwitch = autoSwitch;
    this.backBtn = backBtn;
    this.databaseImageLayout = databaseImageLayout;
    this.divider = divider;
    this.dividerAccount = dividerAccount;
    this.dividerOne = dividerOne;
    this.dividerTwo = dividerTwo;
    this.driveEmail = driveEmail;
    this.errorInfoText = errorInfoText;
    this.finalBox = finalBox;
    this.finalSkip = finalSkip;
    this.frequencyText = frequencyText;
    this.googleAccountTitle = googleAccountTitle;
    this.icDatabase = icDatabase;
    this.icRestore1 = icRestore1;
    this.icRestore2 = icRestore2;
    this.icRestore3 = icRestore3;
    this.icRestore4 = icRestore4;
    this.icSmartphone = icSmartphone;
    this.icTimer = icTimer;
    this.imageGoogleAccount = imageGoogleAccount;
    this.infoText = infoText;
    this.initialBox = initialBox;
    this.labelBarrier = labelBarrier;
    this.lastBackupDate = lastBackupDate;
    this.lastBackupSize = lastBackupSize;
    this.mainTitle = mainTitle;
    this.newAccountBox = newAccountBox;
    this.newUserBox = newUserBox;
    this.newUserSkip = newUserSkip;
    this.progressBox = progressBox;
    this.progressText = progressText;
    this.restore = restore;
    this.scheduleBox = scheduleBox;
    this.skip = skip;
    this.smartphoneImageLayout = smartphoneImageLayout;
    this.textTitle = textTitle;
    this.toolbar = toolbar;
    this.viewRestoreAnimationImage = viewRestoreAnimationImage;
    this.workProgress = workProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_restore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountBox;
      RelativeLayout accountBox = ViewBindings.findChildViewById(rootView, id);
      if (accountBox == null) {
        break missingId;
      }

      id = R.id.action_next;
      AppCompatButton actionNext = ViewBindings.findChildViewById(rootView, id);
      if (actionNext == null) {
        break missingId;
      }

      id = R.id.add_account;
      AppCompatTextView addAccount = ViewBindings.findChildViewById(rootView, id);
      if (addAccount == null) {
        break missingId;
      }

      id = R.id.animationBox;
      AppCompatImageView animationBox = ViewBindings.findChildViewById(rootView, id);
      if (animationBox == null) {
        break missingId;
      }

      id = R.id.autoBackupTitle;
      AppCompatTextView autoBackupTitle = ViewBindings.findChildViewById(rootView, id);
      if (autoBackupTitle == null) {
        break missingId;
      }

      id = R.id.auto_box;
      LinearLayout autoBox = ViewBindings.findChildViewById(rootView, id);
      if (autoBox == null) {
        break missingId;
      }

      id = R.id.auto_switch;
      SwitchCompat autoSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoSwitch == null) {
        break missingId;
      }

      id = R.id.backBtn;
      AppCompatImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.database_image_layout;
      ConstraintLayout databaseImageLayout = ViewBindings.findChildViewById(rootView, id);
      if (databaseImageLayout == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.divider_account;
      View dividerAccount = ViewBindings.findChildViewById(rootView, id);
      if (dividerAccount == null) {
        break missingId;
      }

      id = R.id.dividerOne;
      View dividerOne = ViewBindings.findChildViewById(rootView, id);
      if (dividerOne == null) {
        break missingId;
      }

      id = R.id.dividerTwo;
      View dividerTwo = ViewBindings.findChildViewById(rootView, id);
      if (dividerTwo == null) {
        break missingId;
      }

      id = R.id.driveEmail;
      CustomTextView driveEmail = ViewBindings.findChildViewById(rootView, id);
      if (driveEmail == null) {
        break missingId;
      }

      id = R.id.errorInfoText;
      AppCompatTextView errorInfoText = ViewBindings.findChildViewById(rootView, id);
      if (errorInfoText == null) {
        break missingId;
      }

      id = R.id.finalBox;
      ConstraintLayout finalBox = ViewBindings.findChildViewById(rootView, id);
      if (finalBox == null) {
        break missingId;
      }

      id = R.id.finalSkip;
      AppCompatButton finalSkip = ViewBindings.findChildViewById(rootView, id);
      if (finalSkip == null) {
        break missingId;
      }

      id = R.id.frequencyText;
      AppCompatTextView frequencyText = ViewBindings.findChildViewById(rootView, id);
      if (frequencyText == null) {
        break missingId;
      }

      id = R.id.google_account_title;
      CustomTextView googleAccountTitle = ViewBindings.findChildViewById(rootView, id);
      if (googleAccountTitle == null) {
        break missingId;
      }

      id = R.id.ic_database;
      AppCompatImageView icDatabase = ViewBindings.findChildViewById(rootView, id);
      if (icDatabase == null) {
        break missingId;
      }

      id = R.id.ic_restore1;
      AppCompatImageView icRestore1 = ViewBindings.findChildViewById(rootView, id);
      if (icRestore1 == null) {
        break missingId;
      }

      id = R.id.ic_restore2;
      AppCompatImageView icRestore2 = ViewBindings.findChildViewById(rootView, id);
      if (icRestore2 == null) {
        break missingId;
      }

      id = R.id.ic_restore3;
      AppCompatImageView icRestore3 = ViewBindings.findChildViewById(rootView, id);
      if (icRestore3 == null) {
        break missingId;
      }

      id = R.id.ic_restore4;
      AppCompatImageView icRestore4 = ViewBindings.findChildViewById(rootView, id);
      if (icRestore4 == null) {
        break missingId;
      }

      id = R.id.ic_smartphone;
      AppCompatImageView icSmartphone = ViewBindings.findChildViewById(rootView, id);
      if (icSmartphone == null) {
        break missingId;
      }

      id = R.id.ic_timer;
      AppCompatImageView icTimer = ViewBindings.findChildViewById(rootView, id);
      if (icTimer == null) {
        break missingId;
      }

      id = R.id.image_google_account;
      ImageView imageGoogleAccount = ViewBindings.findChildViewById(rootView, id);
      if (imageGoogleAccount == null) {
        break missingId;
      }

      id = R.id.infoText;
      AppCompatTextView infoText = ViewBindings.findChildViewById(rootView, id);
      if (infoText == null) {
        break missingId;
      }

      id = R.id.initialBox;
      ConstraintLayout initialBox = ViewBindings.findChildViewById(rootView, id);
      if (initialBox == null) {
        break missingId;
      }

      id = R.id.labelBarrier;
      Barrier labelBarrier = ViewBindings.findChildViewById(rootView, id);
      if (labelBarrier == null) {
        break missingId;
      }

      id = R.id.lastBackupDate;
      AppCompatTextView lastBackupDate = ViewBindings.findChildViewById(rootView, id);
      if (lastBackupDate == null) {
        break missingId;
      }

      id = R.id.lastBackupSize;
      AppCompatTextView lastBackupSize = ViewBindings.findChildViewById(rootView, id);
      if (lastBackupSize == null) {
        break missingId;
      }

      id = R.id.mainTitle;
      AppCompatTextView mainTitle = ViewBindings.findChildViewById(rootView, id);
      if (mainTitle == null) {
        break missingId;
      }

      id = R.id.newAccountBox;
      RelativeLayout newAccountBox = ViewBindings.findChildViewById(rootView, id);
      if (newAccountBox == null) {
        break missingId;
      }

      id = R.id.newUserBox;
      ConstraintLayout newUserBox = ViewBindings.findChildViewById(rootView, id);
      if (newUserBox == null) {
        break missingId;
      }

      id = R.id.newUserSkip;
      AppCompatButton newUserSkip = ViewBindings.findChildViewById(rootView, id);
      if (newUserSkip == null) {
        break missingId;
      }

      id = R.id.progressBox;
      LinearLayout progressBox = ViewBindings.findChildViewById(rootView, id);
      if (progressBox == null) {
        break missingId;
      }

      id = R.id.progressText;
      AppCompatTextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.restore;
      AppCompatButton restore = ViewBindings.findChildViewById(rootView, id);
      if (restore == null) {
        break missingId;
      }

      id = R.id.scheduleBox;
      LinearLayout scheduleBox = ViewBindings.findChildViewById(rootView, id);
      if (scheduleBox == null) {
        break missingId;
      }

      id = R.id.skip;
      AppCompatButton skip = ViewBindings.findChildViewById(rootView, id);
      if (skip == null) {
        break missingId;
      }

      id = R.id.smartphone_image_layout;
      ConstraintLayout smartphoneImageLayout = ViewBindings.findChildViewById(rootView, id);
      if (smartphoneImageLayout == null) {
        break missingId;
      }

      id = R.id.text_title;
      CustomTextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.viewRestoreAnimationImage;
      ConstraintLayout viewRestoreAnimationImage = ViewBindings.findChildViewById(rootView, id);
      if (viewRestoreAnimationImage == null) {
        break missingId;
      }

      id = R.id.workProgress;
      ProgressBar workProgress = ViewBindings.findChildViewById(rootView, id);
      if (workProgress == null) {
        break missingId;
      }

      return new ActivityRestoreBinding((ConstraintLayout) rootView, accountBox, actionNext,
          addAccount, animationBox, autoBackupTitle, autoBox, autoSwitch, backBtn,
          databaseImageLayout, divider, dividerAccount, dividerOne, dividerTwo, driveEmail,
          errorInfoText, finalBox, finalSkip, frequencyText, googleAccountTitle, icDatabase,
          icRestore1, icRestore2, icRestore3, icRestore4, icSmartphone, icTimer, imageGoogleAccount,
          infoText, initialBox, labelBarrier, lastBackupDate, lastBackupSize, mainTitle,
          newAccountBox, newUserBox, newUserSkip, progressBox, progressText, restore, scheduleBox,
          skip, smartphoneImageLayout, textTitle, toolbar, viewRestoreAnimationImage, workProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
