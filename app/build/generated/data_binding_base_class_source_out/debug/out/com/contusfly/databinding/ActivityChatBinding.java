// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView_;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnBlock;

  @NonNull
  public final RelativeLayout chatXmppConnectionStatusLayout;

  @NonNull
  public final TextView chatXmppConnectionText;

  @NonNull
  public final FrameLayout emojicons;

  @NonNull
  public final FloatingActionButton fabAddScheduleMeet;

  @NonNull
  public final ImageView fbRedirectBottom;

  @NonNull
  public final SwipeRefreshLayout itemsSwipeToRefresh;

  @NonNull
  public final LinearLayout layoutRedirectMessage;

  @NonNull
  public final LinearLayout llBlock;

  @NonNull
  public final ImageView replyClose;

  @NonNull
  public final RelativeLayout rootView;

  @NonNull
  public final LinearLayout suggestionLayout;

  @NonNull
  public final RecyclerView suggestionRecycler;

  @NonNull
  public final ChatToolbarBinding toolBar;

  @NonNull
  public final TextView unreadCount;

  @NonNull
  public final ViewChatFooterBinding viewChatFooter;

  @NonNull
  public final LinearLayout viewChatFooterLayout;

  @NonNull
  public final RecyclerView viewChatList;

  @NonNull
  public final LinearLayout viewFooter1;

  @NonNull
  public final View viewOverlay;

  private ActivityChatBinding(@NonNull RelativeLayout rootView_, @NonNull Button btnAdd,
      @NonNull Button btnBlock, @NonNull RelativeLayout chatXmppConnectionStatusLayout,
      @NonNull TextView chatXmppConnectionText, @NonNull FrameLayout emojicons,
      @NonNull FloatingActionButton fabAddScheduleMeet, @NonNull ImageView fbRedirectBottom,
      @NonNull SwipeRefreshLayout itemsSwipeToRefresh, @NonNull LinearLayout layoutRedirectMessage,
      @NonNull LinearLayout llBlock, @NonNull ImageView replyClose,
      @NonNull RelativeLayout rootView, @NonNull LinearLayout suggestionLayout,
      @NonNull RecyclerView suggestionRecycler, @NonNull ChatToolbarBinding toolBar,
      @NonNull TextView unreadCount, @NonNull ViewChatFooterBinding viewChatFooter,
      @NonNull LinearLayout viewChatFooterLayout, @NonNull RecyclerView viewChatList,
      @NonNull LinearLayout viewFooter1, @NonNull View viewOverlay) {
    this.rootView_ = rootView_;
    this.btnAdd = btnAdd;
    this.btnBlock = btnBlock;
    this.chatXmppConnectionStatusLayout = chatXmppConnectionStatusLayout;
    this.chatXmppConnectionText = chatXmppConnectionText;
    this.emojicons = emojicons;
    this.fabAddScheduleMeet = fabAddScheduleMeet;
    this.fbRedirectBottom = fbRedirectBottom;
    this.itemsSwipeToRefresh = itemsSwipeToRefresh;
    this.layoutRedirectMessage = layoutRedirectMessage;
    this.llBlock = llBlock;
    this.replyClose = replyClose;
    this.rootView = rootView;
    this.suggestionLayout = suggestionLayout;
    this.suggestionRecycler = suggestionRecycler;
    this.toolBar = toolBar;
    this.unreadCount = unreadCount;
    this.viewChatFooter = viewChatFooter;
    this.viewChatFooterLayout = viewChatFooterLayout;
    this.viewChatList = viewChatList;
    this.viewFooter1 = viewFooter1;
    this.viewOverlay = viewOverlay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btn_block;
      Button btnBlock = ViewBindings.findChildViewById(rootView, id);
      if (btnBlock == null) {
        break missingId;
      }

      id = R.id.chat_xmpp_connection_status_layout;
      RelativeLayout chatXmppConnectionStatusLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatXmppConnectionStatusLayout == null) {
        break missingId;
      }

      id = R.id.chat_xmpp_connection_text;
      TextView chatXmppConnectionText = ViewBindings.findChildViewById(rootView, id);
      if (chatXmppConnectionText == null) {
        break missingId;
      }

      id = R.id.emojicons;
      FrameLayout emojicons = ViewBindings.findChildViewById(rootView, id);
      if (emojicons == null) {
        break missingId;
      }

      id = R.id.fab_add_schedule_meet;
      FloatingActionButton fabAddScheduleMeet = ViewBindings.findChildViewById(rootView, id);
      if (fabAddScheduleMeet == null) {
        break missingId;
      }

      id = R.id.fb_redirect_bottom;
      ImageView fbRedirectBottom = ViewBindings.findChildViewById(rootView, id);
      if (fbRedirectBottom == null) {
        break missingId;
      }

      id = R.id.items_swipe_to_refresh;
      SwipeRefreshLayout itemsSwipeToRefresh = ViewBindings.findChildViewById(rootView, id);
      if (itemsSwipeToRefresh == null) {
        break missingId;
      }

      id = R.id.layout_redirect_message;
      LinearLayout layoutRedirectMessage = ViewBindings.findChildViewById(rootView, id);
      if (layoutRedirectMessage == null) {
        break missingId;
      }

      id = R.id.ll_block;
      LinearLayout llBlock = ViewBindings.findChildViewById(rootView, id);
      if (llBlock == null) {
        break missingId;
      }

      id = R.id.reply_close;
      ImageView replyClose = ViewBindings.findChildViewById(rootView, id);
      if (replyClose == null) {
        break missingId;
      }

      RelativeLayout rootView_ = (RelativeLayout) rootView;

      id = R.id.suggestion_layout;
      LinearLayout suggestionLayout = ViewBindings.findChildViewById(rootView, id);
      if (suggestionLayout == null) {
        break missingId;
      }

      id = R.id.suggestion_recycler;
      RecyclerView suggestionRecycler = ViewBindings.findChildViewById(rootView, id);
      if (suggestionRecycler == null) {
        break missingId;
      }

      id = R.id.tool_bar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      ChatToolbarBinding binding_toolBar = ChatToolbarBinding.bind(toolBar);

      id = R.id.unread_count;
      TextView unreadCount = ViewBindings.findChildViewById(rootView, id);
      if (unreadCount == null) {
        break missingId;
      }

      id = R.id.view_chat_footer;
      View viewChatFooter = ViewBindings.findChildViewById(rootView, id);
      if (viewChatFooter == null) {
        break missingId;
      }
      ViewChatFooterBinding binding_viewChatFooter = ViewChatFooterBinding.bind(viewChatFooter);

      id = R.id.view_chat_footer_layout;
      LinearLayout viewChatFooterLayout = ViewBindings.findChildViewById(rootView, id);
      if (viewChatFooterLayout == null) {
        break missingId;
      }

      id = R.id.view_chat_list;
      RecyclerView viewChatList = ViewBindings.findChildViewById(rootView, id);
      if (viewChatList == null) {
        break missingId;
      }

      id = R.id.view_footer1;
      LinearLayout viewFooter1 = ViewBindings.findChildViewById(rootView, id);
      if (viewFooter1 == null) {
        break missingId;
      }

      id = R.id.view_overlay;
      View viewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (viewOverlay == null) {
        break missingId;
      }

      return new ActivityChatBinding((RelativeLayout) rootView, btnAdd, btnBlock,
          chatXmppConnectionStatusLayout, chatXmppConnectionText, emojicons, fabAddScheduleMeet,
          fbRedirectBottom, itemsSwipeToRefresh, layoutRedirectMessage, llBlock, replyClose,
          rootView_, suggestionLayout, suggestionRecycler, binding_toolBar, unreadCount,
          binding_viewChatFooter, viewChatFooterLayout, viewChatList, viewFooter1, viewOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
