// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import com.contusfly.views.MessageTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatInfoTxtItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icStar;

  @NonNull
  public final ImageView imageSentRecall;

  @NonNull
  public final ImageView imgTxtStatus;

  @NonNull
  public final MessageTextView txtSendChat;

  @NonNull
  public final CustomTextView txtSendTxtTime;

  @NonNull
  public final FrameLayout viewChatSenderTxt;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final LinearLayout viewTextSender;

  @NonNull
  public final ListChatReplySentItemBinding viewTextSentReply;

  private ChatInfoTxtItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView icStar,
      @NonNull ImageView imageSentRecall, @NonNull ImageView imgTxtStatus,
      @NonNull MessageTextView txtSendChat, @NonNull CustomTextView txtSendTxtTime,
      @NonNull FrameLayout viewChatSenderTxt, @NonNull ViewStub viewMessageDate,
      @NonNull LinearLayout viewTextSender,
      @NonNull ListChatReplySentItemBinding viewTextSentReply) {
    this.rootView = rootView;
    this.icStar = icStar;
    this.imageSentRecall = imageSentRecall;
    this.imgTxtStatus = imgTxtStatus;
    this.txtSendChat = txtSendChat;
    this.txtSendTxtTime = txtSendTxtTime;
    this.viewChatSenderTxt = viewChatSenderTxt;
    this.viewMessageDate = viewMessageDate;
    this.viewTextSender = viewTextSender;
    this.viewTextSentReply = viewTextSentReply;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatInfoTxtItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatInfoTxtItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_info_txt_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatInfoTxtItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_star;
      ImageView icStar = ViewBindings.findChildViewById(rootView, id);
      if (icStar == null) {
        break missingId;
      }

      id = R.id.image_sent_recall;
      ImageView imageSentRecall = ViewBindings.findChildViewById(rootView, id);
      if (imageSentRecall == null) {
        break missingId;
      }

      id = R.id.img_txt_status;
      ImageView imgTxtStatus = ViewBindings.findChildViewById(rootView, id);
      if (imgTxtStatus == null) {
        break missingId;
      }

      id = R.id.txt_send_chat;
      MessageTextView txtSendChat = ViewBindings.findChildViewById(rootView, id);
      if (txtSendChat == null) {
        break missingId;
      }

      id = R.id.txt_send_txt_time;
      CustomTextView txtSendTxtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtSendTxtTime == null) {
        break missingId;
      }

      id = R.id.view_chat_sender_txt;
      FrameLayout viewChatSenderTxt = ViewBindings.findChildViewById(rootView, id);
      if (viewChatSenderTxt == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_text_sender;
      LinearLayout viewTextSender = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSender == null) {
        break missingId;
      }

      id = R.id.view_text_sent_reply;
      View viewTextSentReply = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSentReply == null) {
        break missingId;
      }
      ListChatReplySentItemBinding binding_viewTextSentReply = ListChatReplySentItemBinding.bind(viewTextSentReply);

      return new ChatInfoTxtItemBinding((LinearLayout) rootView, icStar, imageSentRecall,
          imgTxtStatus, txtSendChat, txtSendTxtTime, viewChatSenderTxt, viewMessageDate,
          viewTextSender, binding_viewTextSentReply);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
