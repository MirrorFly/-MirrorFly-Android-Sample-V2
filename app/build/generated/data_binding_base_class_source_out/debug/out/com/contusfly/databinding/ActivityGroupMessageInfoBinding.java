// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import com.mirrorflysdk.views.NonScrollExpandableListView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupMessageInfoBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ViewStub audioItem;

  @NonNull
  public final ViewStub contactItem;

  @NonNull
  public final ImageView emptyImg;

  @NonNull
  public final ImageView emptyImgRead;

  @NonNull
  public final NonScrollExpandableListView expandDeliverlist;

  @NonNull
  public final NonScrollExpandableListView expandReadlist;

  @NonNull
  public final ViewStub fileItem;

  @NonNull
  public final ViewStub imageItem;

  @NonNull
  public final ViewStub locationItem;

  @NonNull
  public final ViewStub meetItem;

  @NonNull
  public final TextView nomsgTxt;

  @NonNull
  public final TextView nomsgTxtRead;

  @NonNull
  public final CustomTextView textDate;

  @NonNull
  public final ViewStub textItem;

  @NonNull
  public final ViewStub videoItem;

  private ActivityGroupMessageInfoBinding(@NonNull NestedScrollView rootView,
      @NonNull ViewStub audioItem, @NonNull ViewStub contactItem, @NonNull ImageView emptyImg,
      @NonNull ImageView emptyImgRead, @NonNull NonScrollExpandableListView expandDeliverlist,
      @NonNull NonScrollExpandableListView expandReadlist, @NonNull ViewStub fileItem,
      @NonNull ViewStub imageItem, @NonNull ViewStub locationItem, @NonNull ViewStub meetItem,
      @NonNull TextView nomsgTxt, @NonNull TextView nomsgTxtRead, @NonNull CustomTextView textDate,
      @NonNull ViewStub textItem, @NonNull ViewStub videoItem) {
    this.rootView = rootView;
    this.audioItem = audioItem;
    this.contactItem = contactItem;
    this.emptyImg = emptyImg;
    this.emptyImgRead = emptyImgRead;
    this.expandDeliverlist = expandDeliverlist;
    this.expandReadlist = expandReadlist;
    this.fileItem = fileItem;
    this.imageItem = imageItem;
    this.locationItem = locationItem;
    this.meetItem = meetItem;
    this.nomsgTxt = nomsgTxt;
    this.nomsgTxtRead = nomsgTxtRead;
    this.textDate = textDate;
    this.textItem = textItem;
    this.videoItem = videoItem;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupMessageInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupMessageInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_message_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupMessageInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audio_item;
      ViewStub audioItem = ViewBindings.findChildViewById(rootView, id);
      if (audioItem == null) {
        break missingId;
      }

      id = R.id.contact_item;
      ViewStub contactItem = ViewBindings.findChildViewById(rootView, id);
      if (contactItem == null) {
        break missingId;
      }

      id = R.id.empty_img;
      ImageView emptyImg = ViewBindings.findChildViewById(rootView, id);
      if (emptyImg == null) {
        break missingId;
      }

      id = R.id.empty_img_read;
      ImageView emptyImgRead = ViewBindings.findChildViewById(rootView, id);
      if (emptyImgRead == null) {
        break missingId;
      }

      id = R.id.expand_Deliverlist;
      NonScrollExpandableListView expandDeliverlist = ViewBindings.findChildViewById(rootView, id);
      if (expandDeliverlist == null) {
        break missingId;
      }

      id = R.id.expand_readlist;
      NonScrollExpandableListView expandReadlist = ViewBindings.findChildViewById(rootView, id);
      if (expandReadlist == null) {
        break missingId;
      }

      id = R.id.file_item;
      ViewStub fileItem = ViewBindings.findChildViewById(rootView, id);
      if (fileItem == null) {
        break missingId;
      }

      id = R.id.image_item;
      ViewStub imageItem = ViewBindings.findChildViewById(rootView, id);
      if (imageItem == null) {
        break missingId;
      }

      id = R.id.location_item;
      ViewStub locationItem = ViewBindings.findChildViewById(rootView, id);
      if (locationItem == null) {
        break missingId;
      }

      id = R.id.meet_item;
      ViewStub meetItem = ViewBindings.findChildViewById(rootView, id);
      if (meetItem == null) {
        break missingId;
      }

      id = R.id.nomsg_txt;
      TextView nomsgTxt = ViewBindings.findChildViewById(rootView, id);
      if (nomsgTxt == null) {
        break missingId;
      }

      id = R.id.nomsg_txt_read;
      TextView nomsgTxtRead = ViewBindings.findChildViewById(rootView, id);
      if (nomsgTxtRead == null) {
        break missingId;
      }

      id = R.id.text_date;
      CustomTextView textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_item;
      ViewStub textItem = ViewBindings.findChildViewById(rootView, id);
      if (textItem == null) {
        break missingId;
      }

      id = R.id.video_item;
      ViewStub videoItem = ViewBindings.findChildViewById(rootView, id);
      if (videoItem == null) {
        break missingId;
      }

      return new ActivityGroupMessageInfoBinding((NestedScrollView) rootView, audioItem,
          contactItem, emptyImg, emptyImgRead, expandDeliverlist, expandReadlist, fileItem,
          imageItem, locationItem, meetItem, nomsgTxt, nomsgTxtRead, textDate, textItem, videoItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
