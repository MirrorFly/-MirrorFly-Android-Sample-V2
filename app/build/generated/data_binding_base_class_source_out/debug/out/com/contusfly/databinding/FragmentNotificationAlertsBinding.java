// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationAlertsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imageMuteNotification;

  @NonNull
  public final ImageView imageNotificationPopup;

  @NonNull
  public final ImageView imageNotificationSound;

  @NonNull
  public final ImageView imageVibration;

  @NonNull
  public final RelativeLayout layoutMuteNotification;

  @NonNull
  public final RelativeLayout layoutNotificationPopup;

  @NonNull
  public final RelativeLayout layoutNotificationSound;

  @NonNull
  public final RelativeLayout layoutVibration;

  @NonNull
  public final CustomTextView textMuteNotification;

  @NonNull
  public final CustomTextView textNotificationPopup;

  @NonNull
  public final CustomTextView textNotificationSound;

  @NonNull
  public final CustomTextView textVibration;

  private FragmentNotificationAlertsBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imageMuteNotification, @NonNull ImageView imageNotificationPopup,
      @NonNull ImageView imageNotificationSound, @NonNull ImageView imageVibration,
      @NonNull RelativeLayout layoutMuteNotification,
      @NonNull RelativeLayout layoutNotificationPopup,
      @NonNull RelativeLayout layoutNotificationSound, @NonNull RelativeLayout layoutVibration,
      @NonNull CustomTextView textMuteNotification, @NonNull CustomTextView textNotificationPopup,
      @NonNull CustomTextView textNotificationSound, @NonNull CustomTextView textVibration) {
    this.rootView = rootView;
    this.imageMuteNotification = imageMuteNotification;
    this.imageNotificationPopup = imageNotificationPopup;
    this.imageNotificationSound = imageNotificationSound;
    this.imageVibration = imageVibration;
    this.layoutMuteNotification = layoutMuteNotification;
    this.layoutNotificationPopup = layoutNotificationPopup;
    this.layoutNotificationSound = layoutNotificationSound;
    this.layoutVibration = layoutVibration;
    this.textMuteNotification = textMuteNotification;
    this.textNotificationPopup = textNotificationPopup;
    this.textNotificationSound = textNotificationSound;
    this.textVibration = textVibration;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationAlertsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationAlertsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notification_alerts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationAlertsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_mute_notification;
      ImageView imageMuteNotification = ViewBindings.findChildViewById(rootView, id);
      if (imageMuteNotification == null) {
        break missingId;
      }

      id = R.id.image_notification_popup;
      ImageView imageNotificationPopup = ViewBindings.findChildViewById(rootView, id);
      if (imageNotificationPopup == null) {
        break missingId;
      }

      id = R.id.image_notification_sound;
      ImageView imageNotificationSound = ViewBindings.findChildViewById(rootView, id);
      if (imageNotificationSound == null) {
        break missingId;
      }

      id = R.id.image_vibration;
      ImageView imageVibration = ViewBindings.findChildViewById(rootView, id);
      if (imageVibration == null) {
        break missingId;
      }

      id = R.id.layout_mute_notification;
      RelativeLayout layoutMuteNotification = ViewBindings.findChildViewById(rootView, id);
      if (layoutMuteNotification == null) {
        break missingId;
      }

      id = R.id.layout_notification_popup;
      RelativeLayout layoutNotificationPopup = ViewBindings.findChildViewById(rootView, id);
      if (layoutNotificationPopup == null) {
        break missingId;
      }

      id = R.id.layout_notification_sound;
      RelativeLayout layoutNotificationSound = ViewBindings.findChildViewById(rootView, id);
      if (layoutNotificationSound == null) {
        break missingId;
      }

      id = R.id.layout_vibration;
      RelativeLayout layoutVibration = ViewBindings.findChildViewById(rootView, id);
      if (layoutVibration == null) {
        break missingId;
      }

      id = R.id.text_mute_notification;
      CustomTextView textMuteNotification = ViewBindings.findChildViewById(rootView, id);
      if (textMuteNotification == null) {
        break missingId;
      }

      id = R.id.text_notification_popup;
      CustomTextView textNotificationPopup = ViewBindings.findChildViewById(rootView, id);
      if (textNotificationPopup == null) {
        break missingId;
      }

      id = R.id.text_notification_sound;
      CustomTextView textNotificationSound = ViewBindings.findChildViewById(rootView, id);
      if (textNotificationSound == null) {
        break missingId;
      }

      id = R.id.text_vibration;
      CustomTextView textVibration = ViewBindings.findChildViewById(rootView, id);
      if (textVibration == null) {
        break missingId;
      }

      return new FragmentNotificationAlertsBinding((LinearLayout) rootView, imageMuteNotification,
          imageNotificationPopup, imageNotificationSound, imageVibration, layoutMuteNotification,
          layoutNotificationPopup, layoutNotificationSound, layoutVibration, textMuteNotification,
          textNotificationPopup, textNotificationSound, textVibration);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
