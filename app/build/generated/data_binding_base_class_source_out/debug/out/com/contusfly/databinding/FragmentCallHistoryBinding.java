// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomRecyclerView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCallHistoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton fabAddCall;

  @NonNull
  public final FloatingActionButton fabMakeVideoCall;

  @NonNull
  public final FloatingActionButton fabMakeVoiceCall;

  @NonNull
  public final CustomRecyclerView listCallHistory;

  @NonNull
  public final TextView recentCall;

  @NonNull
  public final ViewCreateCallLinkBinding viewCreateCallLink;

  @NonNull
  public final ViewNoCallHistoryBinding viewNoCallHistory;

  private FragmentCallHistoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton fabAddCall, @NonNull FloatingActionButton fabMakeVideoCall,
      @NonNull FloatingActionButton fabMakeVoiceCall, @NonNull CustomRecyclerView listCallHistory,
      @NonNull TextView recentCall, @NonNull ViewCreateCallLinkBinding viewCreateCallLink,
      @NonNull ViewNoCallHistoryBinding viewNoCallHistory) {
    this.rootView = rootView;
    this.fabAddCall = fabAddCall;
    this.fabMakeVideoCall = fabMakeVideoCall;
    this.fabMakeVoiceCall = fabMakeVoiceCall;
    this.listCallHistory = listCallHistory;
    this.recentCall = recentCall;
    this.viewCreateCallLink = viewCreateCallLink;
    this.viewNoCallHistory = viewNoCallHistory;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCallHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCallHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_call_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCallHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab_add_call;
      FloatingActionButton fabAddCall = ViewBindings.findChildViewById(rootView, id);
      if (fabAddCall == null) {
        break missingId;
      }

      id = R.id.fab_make_video_call;
      FloatingActionButton fabMakeVideoCall = ViewBindings.findChildViewById(rootView, id);
      if (fabMakeVideoCall == null) {
        break missingId;
      }

      id = R.id.fab_make_voice_call;
      FloatingActionButton fabMakeVoiceCall = ViewBindings.findChildViewById(rootView, id);
      if (fabMakeVoiceCall == null) {
        break missingId;
      }

      id = R.id.list_call_history;
      CustomRecyclerView listCallHistory = ViewBindings.findChildViewById(rootView, id);
      if (listCallHistory == null) {
        break missingId;
      }

      id = R.id.recent_call;
      TextView recentCall = ViewBindings.findChildViewById(rootView, id);
      if (recentCall == null) {
        break missingId;
      }

      id = R.id.view_create_call_link;
      View viewCreateCallLink = ViewBindings.findChildViewById(rootView, id);
      if (viewCreateCallLink == null) {
        break missingId;
      }
      ViewCreateCallLinkBinding binding_viewCreateCallLink = ViewCreateCallLinkBinding.bind(viewCreateCallLink);

      id = R.id.view_no_call_history;
      View viewNoCallHistory = ViewBindings.findChildViewById(rootView, id);
      if (viewNoCallHistory == null) {
        break missingId;
      }
      ViewNoCallHistoryBinding binding_viewNoCallHistory = ViewNoCallHistoryBinding.bind(viewNoCallHistory);

      return new FragmentCallHistoryBinding((CoordinatorLayout) rootView, fabAddCall,
          fabMakeVideoCall, fabMakeVoiceCall, listCallHistory, recentCall,
          binding_viewCreateCallLink, binding_viewNoCallHistory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
