// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.groupmention.MentionEditGroupText;
import com.contusfly.views.CircularImageView;
import com.contusfly.views.CustomViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMediaPreviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addMoreMedia;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final ConstraintLayout bottomLayout;

  @NonNull
  public final TextView captionCount;

  @NonNull
  public final ImageView deleteMedia;

  @NonNull
  public final ImageView emoji;

  @NonNull
  public final FrameLayout emojicons;

  @NonNull
  public final Group groupAddMore;

  @NonNull
  public final RecyclerView groupTagNameRecycler;

  @NonNull
  public final Group groupToUser;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final MentionEditGroupText imageCaption;

  @NonNull
  public final CircularImageView imageChatPicture;

  @NonNull
  public final ImageView imageRightArrow;

  @NonNull
  public final RecyclerView imagesPreviewList;

  @NonNull
  public final Guideline leftGuideline;

  @NonNull
  public final CustomViewPager mediaList;

  @NonNull
  public final ProgressViewBinding previewProgress;

  @NonNull
  public final Guideline rightGuideline;

  @NonNull
  public final AppCompatImageView sendMedia;

  @NonNull
  public final View separatorView;

  @NonNull
  public final TextView toUserTextView;

  @NonNull
  public final RelativeLayout toolbarLayout;

  @NonNull
  public final View viewOverlay;

  private ActivityMediaPreviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addMoreMedia, @NonNull ImageView backArrow,
      @NonNull ConstraintLayout bottomLayout, @NonNull TextView captionCount,
      @NonNull ImageView deleteMedia, @NonNull ImageView emoji, @NonNull FrameLayout emojicons,
      @NonNull Group groupAddMore, @NonNull RecyclerView groupTagNameRecycler,
      @NonNull Group groupToUser, @NonNull Guideline guidelineLeft,
      @NonNull Guideline guidelineRight, @NonNull MentionEditGroupText imageCaption,
      @NonNull CircularImageView imageChatPicture, @NonNull ImageView imageRightArrow,
      @NonNull RecyclerView imagesPreviewList, @NonNull Guideline leftGuideline,
      @NonNull CustomViewPager mediaList, @NonNull ProgressViewBinding previewProgress,
      @NonNull Guideline rightGuideline, @NonNull AppCompatImageView sendMedia,
      @NonNull View separatorView, @NonNull TextView toUserTextView,
      @NonNull RelativeLayout toolbarLayout, @NonNull View viewOverlay) {
    this.rootView = rootView;
    this.addMoreMedia = addMoreMedia;
    this.backArrow = backArrow;
    this.bottomLayout = bottomLayout;
    this.captionCount = captionCount;
    this.deleteMedia = deleteMedia;
    this.emoji = emoji;
    this.emojicons = emojicons;
    this.groupAddMore = groupAddMore;
    this.groupTagNameRecycler = groupTagNameRecycler;
    this.groupToUser = groupToUser;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.imageCaption = imageCaption;
    this.imageChatPicture = imageChatPicture;
    this.imageRightArrow = imageRightArrow;
    this.imagesPreviewList = imagesPreviewList;
    this.leftGuideline = leftGuideline;
    this.mediaList = mediaList;
    this.previewProgress = previewProgress;
    this.rightGuideline = rightGuideline;
    this.sendMedia = sendMedia;
    this.separatorView = separatorView;
    this.toUserTextView = toUserTextView;
    this.toolbarLayout = toolbarLayout;
    this.viewOverlay = viewOverlay;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMediaPreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMediaPreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_media_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMediaPreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_more_media;
      ImageView addMoreMedia = ViewBindings.findChildViewById(rootView, id);
      if (addMoreMedia == null) {
        break missingId;
      }

      id = R.id.back_arrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.bottom_layout;
      ConstraintLayout bottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.caption_count;
      TextView captionCount = ViewBindings.findChildViewById(rootView, id);
      if (captionCount == null) {
        break missingId;
      }

      id = R.id.delete_media;
      ImageView deleteMedia = ViewBindings.findChildViewById(rootView, id);
      if (deleteMedia == null) {
        break missingId;
      }

      id = R.id.emoji;
      ImageView emoji = ViewBindings.findChildViewById(rootView, id);
      if (emoji == null) {
        break missingId;
      }

      id = R.id.emojicons;
      FrameLayout emojicons = ViewBindings.findChildViewById(rootView, id);
      if (emojicons == null) {
        break missingId;
      }

      id = R.id.group_add_more;
      Group groupAddMore = ViewBindings.findChildViewById(rootView, id);
      if (groupAddMore == null) {
        break missingId;
      }

      id = R.id.group_tag_name_recycler;
      RecyclerView groupTagNameRecycler = ViewBindings.findChildViewById(rootView, id);
      if (groupTagNameRecycler == null) {
        break missingId;
      }

      id = R.id.group_to_user;
      Group groupToUser = ViewBindings.findChildViewById(rootView, id);
      if (groupToUser == null) {
        break missingId;
      }

      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.image_caption;
      MentionEditGroupText imageCaption = ViewBindings.findChildViewById(rootView, id);
      if (imageCaption == null) {
        break missingId;
      }

      id = R.id.image_chat_picture;
      CircularImageView imageChatPicture = ViewBindings.findChildViewById(rootView, id);
      if (imageChatPicture == null) {
        break missingId;
      }

      id = R.id.image_right_arrow;
      ImageView imageRightArrow = ViewBindings.findChildViewById(rootView, id);
      if (imageRightArrow == null) {
        break missingId;
      }

      id = R.id.images_preview_list;
      RecyclerView imagesPreviewList = ViewBindings.findChildViewById(rootView, id);
      if (imagesPreviewList == null) {
        break missingId;
      }

      id = R.id.left_guideline;
      Guideline leftGuideline = ViewBindings.findChildViewById(rootView, id);
      if (leftGuideline == null) {
        break missingId;
      }

      id = R.id.media_list;
      CustomViewPager mediaList = ViewBindings.findChildViewById(rootView, id);
      if (mediaList == null) {
        break missingId;
      }

      id = R.id.preview_progress;
      View previewProgress = ViewBindings.findChildViewById(rootView, id);
      if (previewProgress == null) {
        break missingId;
      }
      ProgressViewBinding binding_previewProgress = ProgressViewBinding.bind(previewProgress);

      id = R.id.right_guideline;
      Guideline rightGuideline = ViewBindings.findChildViewById(rootView, id);
      if (rightGuideline == null) {
        break missingId;
      }

      id = R.id.send_media;
      AppCompatImageView sendMedia = ViewBindings.findChildViewById(rootView, id);
      if (sendMedia == null) {
        break missingId;
      }

      id = R.id.separator_view;
      View separatorView = ViewBindings.findChildViewById(rootView, id);
      if (separatorView == null) {
        break missingId;
      }

      id = R.id.to_user_text_view;
      TextView toUserTextView = ViewBindings.findChildViewById(rootView, id);
      if (toUserTextView == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      RelativeLayout toolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLayout == null) {
        break missingId;
      }

      id = R.id.view_overlay;
      View viewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (viewOverlay == null) {
        break missingId;
      }

      return new ActivityMediaPreviewBinding((ConstraintLayout) rootView, addMoreMedia, backArrow,
          bottomLayout, captionCount, deleteMedia, emoji, emojicons, groupAddMore,
          groupTagNameRecycler, groupToUser, guidelineLeft, guidelineRight, imageCaption,
          imageChatPicture, imageRightArrow, imagesPreviewList, leftGuideline, mediaList,
          binding_previewProgress, rightGuideline, sendMedia, separatorView, toUserTextView,
          toolbarLayout, viewOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
