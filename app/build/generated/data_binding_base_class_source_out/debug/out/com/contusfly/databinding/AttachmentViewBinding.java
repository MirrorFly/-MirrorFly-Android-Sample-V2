// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttachmentViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout camera;

  @NonNull
  public final ImageView cameraAttach;

  @NonNull
  public final LinearLayout gallery;

  @NonNull
  public final ImageView galleryAttach;

  @NonNull
  public final LinearLayout location;

  @NonNull
  public final ImageView locationAttach;

  @NonNull
  public final TextView textChatCamera;

  @NonNull
  public final TextView textChatGallery;

  @NonNull
  public final TextView textChatLocation;

  @NonNull
  public final TextView textChatVideo;

  @NonNull
  public final LinearLayout video;

  @NonNull
  public final ImageView videoAttach;

  private AttachmentViewBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout camera,
      @NonNull ImageView cameraAttach, @NonNull LinearLayout gallery,
      @NonNull ImageView galleryAttach, @NonNull LinearLayout location,
      @NonNull ImageView locationAttach, @NonNull TextView textChatCamera,
      @NonNull TextView textChatGallery, @NonNull TextView textChatLocation,
      @NonNull TextView textChatVideo, @NonNull LinearLayout video,
      @NonNull ImageView videoAttach) {
    this.rootView = rootView;
    this.camera = camera;
    this.cameraAttach = cameraAttach;
    this.gallery = gallery;
    this.galleryAttach = galleryAttach;
    this.location = location;
    this.locationAttach = locationAttach;
    this.textChatCamera = textChatCamera;
    this.textChatGallery = textChatGallery;
    this.textChatLocation = textChatLocation;
    this.textChatVideo = textChatVideo;
    this.video = video;
    this.videoAttach = videoAttach;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttachmentViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttachmentViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attachment_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttachmentViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera;
      LinearLayout camera = ViewBindings.findChildViewById(rootView, id);
      if (camera == null) {
        break missingId;
      }

      id = R.id.camera_attach;
      ImageView cameraAttach = ViewBindings.findChildViewById(rootView, id);
      if (cameraAttach == null) {
        break missingId;
      }

      id = R.id.gallery;
      LinearLayout gallery = ViewBindings.findChildViewById(rootView, id);
      if (gallery == null) {
        break missingId;
      }

      id = R.id.gallery_attach;
      ImageView galleryAttach = ViewBindings.findChildViewById(rootView, id);
      if (galleryAttach == null) {
        break missingId;
      }

      id = R.id.location;
      LinearLayout location = ViewBindings.findChildViewById(rootView, id);
      if (location == null) {
        break missingId;
      }

      id = R.id.location_attach;
      ImageView locationAttach = ViewBindings.findChildViewById(rootView, id);
      if (locationAttach == null) {
        break missingId;
      }

      id = R.id.text_chat_camera;
      TextView textChatCamera = ViewBindings.findChildViewById(rootView, id);
      if (textChatCamera == null) {
        break missingId;
      }

      id = R.id.text_chat_gallery;
      TextView textChatGallery = ViewBindings.findChildViewById(rootView, id);
      if (textChatGallery == null) {
        break missingId;
      }

      id = R.id.text_chat_location;
      TextView textChatLocation = ViewBindings.findChildViewById(rootView, id);
      if (textChatLocation == null) {
        break missingId;
      }

      id = R.id.text_chat_video;
      TextView textChatVideo = ViewBindings.findChildViewById(rootView, id);
      if (textChatVideo == null) {
        break missingId;
      }

      id = R.id.video;
      LinearLayout video = ViewBindings.findChildViewById(rootView, id);
      if (video == null) {
        break missingId;
      }

      id = R.id.video_attach;
      ImageView videoAttach = ViewBindings.findChildViewById(rootView, id);
      if (videoAttach == null) {
        break missingId;
      }

      return new AttachmentViewBinding((LinearLayout) rootView, camera, cameraAttach, gallery,
          galleryAttach, location, locationAttach, textChatCamera, textChatGallery,
          textChatLocation, textChatVideo, video, videoAttach);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
