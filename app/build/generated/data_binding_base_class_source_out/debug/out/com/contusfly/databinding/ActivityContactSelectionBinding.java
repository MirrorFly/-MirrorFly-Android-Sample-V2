// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactSelectionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatImageView buttonSendContact;

  @NonNull
  public final CustomRecyclerView contactsRecyclerView;

  @NonNull
  public final RecyclerView selectedContactsRecyclerView;

  @NonNull
  public final ContactSelectionToolbarBinding toolBar;

  @NonNull
  public final ViewEmptyDataBinding txt;

  @NonNull
  public final View viewDivider;

  private ActivityContactSelectionBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatImageView buttonSendContact,
      @NonNull CustomRecyclerView contactsRecyclerView,
      @NonNull RecyclerView selectedContactsRecyclerView,
      @NonNull ContactSelectionToolbarBinding toolBar, @NonNull ViewEmptyDataBinding txt,
      @NonNull View viewDivider) {
    this.rootView = rootView;
    this.buttonSendContact = buttonSendContact;
    this.contactsRecyclerView = contactsRecyclerView;
    this.selectedContactsRecyclerView = selectedContactsRecyclerView;
    this.toolBar = toolBar;
    this.txt = txt;
    this.viewDivider = viewDivider;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_send_contact;
      AppCompatImageView buttonSendContact = ViewBindings.findChildViewById(rootView, id);
      if (buttonSendContact == null) {
        break missingId;
      }

      id = R.id.contacts_recycler_view;
      CustomRecyclerView contactsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (contactsRecyclerView == null) {
        break missingId;
      }

      id = R.id.selected_contacts_recycler_view;
      RecyclerView selectedContactsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (selectedContactsRecyclerView == null) {
        break missingId;
      }

      id = R.id.tool_bar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      ContactSelectionToolbarBinding binding_toolBar = ContactSelectionToolbarBinding.bind(toolBar);

      id = R.id.txt;
      View txt = ViewBindings.findChildViewById(rootView, id);
      if (txt == null) {
        break missingId;
      }
      ViewEmptyDataBinding binding_txt = ViewEmptyDataBinding.bind(txt);

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      return new ActivityContactSelectionBinding((RelativeLayout) rootView, buttonSendContact,
          contactsRecyclerView, selectedContactsRecyclerView, binding_toolBar, binding_txt,
          viewDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
