// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.emoji.widget.EmojiAppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import com.contusfly.views.CustomShapeableImageView;
import com.contusfly.views.CustomTextView;
import io.github.rockerhieu.emojicon.EmojiconTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowRecentChatItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout containerLayout;

  @NonNull
  public final CircularImageView emailContactIcon;

  @NonNull
  public final CustomShapeableImageView imageChatPicture;

  @NonNull
  public final ImageView imageChatStatus;

  @NonNull
  public final ImageView imageMediaType;

  @NonNull
  public final ImageView mute;

  @NonNull
  public final ImageView pin;

  @NonNull
  public final EmojiconTextView textChatMessage;

  @NonNull
  public final EmojiAppCompatTextView textChatName;

  @NonNull
  public final CustomTextView textChatPerson;

  @NonNull
  public final CustomTextView textChatTime;

  @NonNull
  public final CustomTextView textUnseenCount;

  @NonNull
  public final View viewDivider;

  private RowRecentChatItemBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout containerLayout, @NonNull CircularImageView emailContactIcon,
      @NonNull CustomShapeableImageView imageChatPicture, @NonNull ImageView imageChatStatus,
      @NonNull ImageView imageMediaType, @NonNull ImageView mute, @NonNull ImageView pin,
      @NonNull EmojiconTextView textChatMessage, @NonNull EmojiAppCompatTextView textChatName,
      @NonNull CustomTextView textChatPerson, @NonNull CustomTextView textChatTime,
      @NonNull CustomTextView textUnseenCount, @NonNull View viewDivider) {
    this.rootView = rootView;
    this.containerLayout = containerLayout;
    this.emailContactIcon = emailContactIcon;
    this.imageChatPicture = imageChatPicture;
    this.imageChatStatus = imageChatStatus;
    this.imageMediaType = imageMediaType;
    this.mute = mute;
    this.pin = pin;
    this.textChatMessage = textChatMessage;
    this.textChatName = textChatName;
    this.textChatPerson = textChatPerson;
    this.textChatTime = textChatTime;
    this.textUnseenCount = textUnseenCount;
    this.viewDivider = viewDivider;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowRecentChatItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowRecentChatItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_recent_chat_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowRecentChatItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_layout;
      ConstraintLayout containerLayout = ViewBindings.findChildViewById(rootView, id);
      if (containerLayout == null) {
        break missingId;
      }

      id = R.id.email_contact_icon;
      CircularImageView emailContactIcon = ViewBindings.findChildViewById(rootView, id);
      if (emailContactIcon == null) {
        break missingId;
      }

      id = R.id.image_chat_picture;
      CustomShapeableImageView imageChatPicture = ViewBindings.findChildViewById(rootView, id);
      if (imageChatPicture == null) {
        break missingId;
      }

      id = R.id.image_chat_status;
      ImageView imageChatStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageChatStatus == null) {
        break missingId;
      }

      id = R.id.image_media_type;
      ImageView imageMediaType = ViewBindings.findChildViewById(rootView, id);
      if (imageMediaType == null) {
        break missingId;
      }

      id = R.id.mute;
      ImageView mute = ViewBindings.findChildViewById(rootView, id);
      if (mute == null) {
        break missingId;
      }

      id = R.id.pin;
      ImageView pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.text_chat_message;
      EmojiconTextView textChatMessage = ViewBindings.findChildViewById(rootView, id);
      if (textChatMessage == null) {
        break missingId;
      }

      id = R.id.text_chat_name;
      EmojiAppCompatTextView textChatName = ViewBindings.findChildViewById(rootView, id);
      if (textChatName == null) {
        break missingId;
      }

      id = R.id.text_chat_person;
      CustomTextView textChatPerson = ViewBindings.findChildViewById(rootView, id);
      if (textChatPerson == null) {
        break missingId;
      }

      id = R.id.text_chat_time;
      CustomTextView textChatTime = ViewBindings.findChildViewById(rootView, id);
      if (textChatTime == null) {
        break missingId;
      }

      id = R.id.text_unseen_count;
      CustomTextView textUnseenCount = ViewBindings.findChildViewById(rootView, id);
      if (textUnseenCount == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      return new RowRecentChatItemBinding((LinearLayout) rootView, containerLayout,
          emailContactIcon, imageChatPicture, imageChatStatus, imageMediaType, mute, pin,
          textChatMessage, textChatName, textChatPerson, textChatTime, textUnseenCount,
          viewDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
