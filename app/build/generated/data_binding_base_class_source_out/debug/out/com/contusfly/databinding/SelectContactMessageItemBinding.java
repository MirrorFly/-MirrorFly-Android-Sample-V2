// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectContactMessageItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatImageView imageAudioCall;

  @NonNull
  public final CircularImageView imageProfilePicture;

  @NonNull
  public final AppCompatImageView imageVideoCall;

  @NonNull
  public final AppCompatTextView mobileNumber;

  @NonNull
  public final LinearLayout mobileNumberLayout;

  @NonNull
  public final AppCompatTextView numberType;

  @NonNull
  public final AppCompatImageView phoneIcon;

  @NonNull
  public final ConstraintLayout rootLayout;

  @NonNull
  public final AppCompatTextView textAddContact;

  @NonNull
  public final AppCompatTextView textContactName;

  @NonNull
  public final AppCompatTextView textInviteContact;

  @NonNull
  public final View viewDivider;

  private SelectContactMessageItemBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatImageView imageAudioCall, @NonNull CircularImageView imageProfilePicture,
      @NonNull AppCompatImageView imageVideoCall, @NonNull AppCompatTextView mobileNumber,
      @NonNull LinearLayout mobileNumberLayout, @NonNull AppCompatTextView numberType,
      @NonNull AppCompatImageView phoneIcon, @NonNull ConstraintLayout rootLayout,
      @NonNull AppCompatTextView textAddContact, @NonNull AppCompatTextView textContactName,
      @NonNull AppCompatTextView textInviteContact, @NonNull View viewDivider) {
    this.rootView = rootView;
    this.imageAudioCall = imageAudioCall;
    this.imageProfilePicture = imageProfilePicture;
    this.imageVideoCall = imageVideoCall;
    this.mobileNumber = mobileNumber;
    this.mobileNumberLayout = mobileNumberLayout;
    this.numberType = numberType;
    this.phoneIcon = phoneIcon;
    this.rootLayout = rootLayout;
    this.textAddContact = textAddContact;
    this.textContactName = textContactName;
    this.textInviteContact = textInviteContact;
    this.viewDivider = viewDivider;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectContactMessageItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectContactMessageItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.select_contact_message_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectContactMessageItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_audio_call;
      AppCompatImageView imageAudioCall = ViewBindings.findChildViewById(rootView, id);
      if (imageAudioCall == null) {
        break missingId;
      }

      id = R.id.image_profile_picture;
      CircularImageView imageProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (imageProfilePicture == null) {
        break missingId;
      }

      id = R.id.image_video_call;
      AppCompatImageView imageVideoCall = ViewBindings.findChildViewById(rootView, id);
      if (imageVideoCall == null) {
        break missingId;
      }

      id = R.id.mobile_number;
      AppCompatTextView mobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (mobileNumber == null) {
        break missingId;
      }

      id = R.id.mobile_number_layout;
      LinearLayout mobileNumberLayout = ViewBindings.findChildViewById(rootView, id);
      if (mobileNumberLayout == null) {
        break missingId;
      }

      id = R.id.number_type;
      AppCompatTextView numberType = ViewBindings.findChildViewById(rootView, id);
      if (numberType == null) {
        break missingId;
      }

      id = R.id.phone_icon;
      AppCompatImageView phoneIcon = ViewBindings.findChildViewById(rootView, id);
      if (phoneIcon == null) {
        break missingId;
      }

      id = R.id.root_layout;
      ConstraintLayout rootLayout = ViewBindings.findChildViewById(rootView, id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.text_add_contact;
      AppCompatTextView textAddContact = ViewBindings.findChildViewById(rootView, id);
      if (textAddContact == null) {
        break missingId;
      }

      id = R.id.text_contact_name;
      AppCompatTextView textContactName = ViewBindings.findChildViewById(rootView, id);
      if (textContactName == null) {
        break missingId;
      }

      id = R.id.text_invite_contact;
      AppCompatTextView textInviteContact = ViewBindings.findChildViewById(rootView, id);
      if (textInviteContact == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      return new SelectContactMessageItemBinding((RelativeLayout) rootView, imageAudioCall,
          imageProfilePicture, imageVideoCall, mobileNumber, mobileNumberLayout, numberType,
          phoneIcon, rootLayout, textAddContact, textContactName, textInviteContact, viewDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
