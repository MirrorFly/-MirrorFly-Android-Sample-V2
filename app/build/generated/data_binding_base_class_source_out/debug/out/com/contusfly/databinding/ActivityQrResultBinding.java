// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQrResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLogoutAllWebchat;

  @NonNull
  public final ImageView imageViewScannerResult;

  @NonNull
  public final RecyclerView recyclerViewWebChatLogin;

  @NonNull
  public final ScannerToolbarBinding scannerToolBar;

  @NonNull
  public final TextView textLoggedInComputers;

  @NonNull
  public final TextView txtWebUrl;

  private ActivityQrResultBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnLogoutAllWebchat, @NonNull ImageView imageViewScannerResult,
      @NonNull RecyclerView recyclerViewWebChatLogin, @NonNull ScannerToolbarBinding scannerToolBar,
      @NonNull TextView textLoggedInComputers, @NonNull TextView txtWebUrl) {
    this.rootView = rootView;
    this.btnLogoutAllWebchat = btnLogoutAllWebchat;
    this.imageViewScannerResult = imageViewScannerResult;
    this.recyclerViewWebChatLogin = recyclerViewWebChatLogin;
    this.scannerToolBar = scannerToolBar;
    this.textLoggedInComputers = textLoggedInComputers;
    this.txtWebUrl = txtWebUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQrResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQrResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_qr_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQrResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_logout_all_webchat;
      Button btnLogoutAllWebchat = ViewBindings.findChildViewById(rootView, id);
      if (btnLogoutAllWebchat == null) {
        break missingId;
      }

      id = R.id.image_view_scanner_result;
      ImageView imageViewScannerResult = ViewBindings.findChildViewById(rootView, id);
      if (imageViewScannerResult == null) {
        break missingId;
      }

      id = R.id.recyclerView_web_chat_login;
      RecyclerView recyclerViewWebChatLogin = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewWebChatLogin == null) {
        break missingId;
      }

      id = R.id.scanner_tool_bar;
      View scannerToolBar = ViewBindings.findChildViewById(rootView, id);
      if (scannerToolBar == null) {
        break missingId;
      }
      ScannerToolbarBinding binding_scannerToolBar = ScannerToolbarBinding.bind(scannerToolBar);

      id = R.id.text_logged_in_computers;
      TextView textLoggedInComputers = ViewBindings.findChildViewById(rootView, id);
      if (textLoggedInComputers == null) {
        break missingId;
      }

      id = R.id.txt_web_url;
      TextView txtWebUrl = ViewBindings.findChildViewById(rootView, id);
      if (txtWebUrl == null) {
        break missingId;
      }

      return new ActivityQrResultBinding((LinearLayout) rootView, btnLogoutAllWebchat,
          imageViewScannerResult, recyclerViewWebChatLogin, binding_scannerToolBar,
          textLoggedInComputers, txtWebUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
