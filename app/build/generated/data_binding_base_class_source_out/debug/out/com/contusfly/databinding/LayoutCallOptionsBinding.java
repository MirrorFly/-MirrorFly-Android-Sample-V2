// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCallOptionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton imageEndCall;

  @NonNull
  public final ImageButton imageMuteAudio;

  @NonNull
  public final ImageButton imageMuteVideo;

  @NonNull
  public final ImageButton imageSwitchCamera;

  @NonNull
  public final ImageButton imgSpeaker;

  @NonNull
  public final LinearLayout layoutCallOptions;

  private LayoutCallOptionsBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton imageEndCall, @NonNull ImageButton imageMuteAudio,
      @NonNull ImageButton imageMuteVideo, @NonNull ImageButton imageSwitchCamera,
      @NonNull ImageButton imgSpeaker, @NonNull LinearLayout layoutCallOptions) {
    this.rootView = rootView;
    this.imageEndCall = imageEndCall;
    this.imageMuteAudio = imageMuteAudio;
    this.imageMuteVideo = imageMuteVideo;
    this.imageSwitchCamera = imageSwitchCamera;
    this.imgSpeaker = imgSpeaker;
    this.layoutCallOptions = layoutCallOptions;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCallOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCallOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_call_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCallOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_end_call;
      ImageButton imageEndCall = ViewBindings.findChildViewById(rootView, id);
      if (imageEndCall == null) {
        break missingId;
      }

      id = R.id.image_mute_audio;
      ImageButton imageMuteAudio = ViewBindings.findChildViewById(rootView, id);
      if (imageMuteAudio == null) {
        break missingId;
      }

      id = R.id.image_mute_video;
      ImageButton imageMuteVideo = ViewBindings.findChildViewById(rootView, id);
      if (imageMuteVideo == null) {
        break missingId;
      }

      id = R.id.image_switch_camera;
      ImageButton imageSwitchCamera = ViewBindings.findChildViewById(rootView, id);
      if (imageSwitchCamera == null) {
        break missingId;
      }

      id = R.id.img_speaker;
      ImageButton imgSpeaker = ViewBindings.findChildViewById(rootView, id);
      if (imgSpeaker == null) {
        break missingId;
      }

      LinearLayout layoutCallOptions = (LinearLayout) rootView;

      return new LayoutCallOptionsBinding((LinearLayout) rootView, imageEndCall, imageMuteAudio,
          imageMuteVideo, imageSwitchCamera, imgSpeaker, layoutCallOptions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
