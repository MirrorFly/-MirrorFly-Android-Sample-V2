// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import com.contusfly.views.CustomEditText;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileStartBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView changeProfileImage;

  @NonNull
  public final RelativeLayout circularProfileImageLayout;

  @NonNull
  public final LinearLayout currentMobileNumberView;

  @NonNull
  public final LinearLayout currentStatusView;

  @NonNull
  public final CustomTextView editMobileNumber;

  @NonNull
  public final AppCompatEditText editProfileName;

  @NonNull
  public final CircularImageView imageProfilePicture;

  @NonNull
  public final View mobileLineView;

  @NonNull
  public final View statusDivider;

  @NonNull
  public final CustomTextView textEdit;

  @NonNull
  public final CustomEditText textEmail;

  @NonNull
  public final CustomTextView textSync;

  @NonNull
  public final ToolbarTitleCenterViewBinding toolbar;

  @NonNull
  public final CustomTextView txtCurrentStatus;

  @NonNull
  public final CustomTextView txtEmailView;

  @NonNull
  public final CustomTextView txtMobileNoView;

  @NonNull
  public final LinearLayout viewEmail;

  @NonNull
  public final View viewLineEmail;

  private ActivityProfileStartBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView changeProfileImage, @NonNull RelativeLayout circularProfileImageLayout,
      @NonNull LinearLayout currentMobileNumberView, @NonNull LinearLayout currentStatusView,
      @NonNull CustomTextView editMobileNumber, @NonNull AppCompatEditText editProfileName,
      @NonNull CircularImageView imageProfilePicture, @NonNull View mobileLineView,
      @NonNull View statusDivider, @NonNull CustomTextView textEdit,
      @NonNull CustomEditText textEmail, @NonNull CustomTextView textSync,
      @NonNull ToolbarTitleCenterViewBinding toolbar, @NonNull CustomTextView txtCurrentStatus,
      @NonNull CustomTextView txtEmailView, @NonNull CustomTextView txtMobileNoView,
      @NonNull LinearLayout viewEmail, @NonNull View viewLineEmail) {
    this.rootView = rootView;
    this.changeProfileImage = changeProfileImage;
    this.circularProfileImageLayout = circularProfileImageLayout;
    this.currentMobileNumberView = currentMobileNumberView;
    this.currentStatusView = currentStatusView;
    this.editMobileNumber = editMobileNumber;
    this.editProfileName = editProfileName;
    this.imageProfilePicture = imageProfilePicture;
    this.mobileLineView = mobileLineView;
    this.statusDivider = statusDivider;
    this.textEdit = textEdit;
    this.textEmail = textEmail;
    this.textSync = textSync;
    this.toolbar = toolbar;
    this.txtCurrentStatus = txtCurrentStatus;
    this.txtEmailView = txtEmailView;
    this.txtMobileNoView = txtMobileNoView;
    this.viewEmail = viewEmail;
    this.viewLineEmail = viewLineEmail;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileStartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileStartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile_start, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileStartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.change_profile_image;
      ImageView changeProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (changeProfileImage == null) {
        break missingId;
      }

      id = R.id.circular_profile_image_layout;
      RelativeLayout circularProfileImageLayout = ViewBindings.findChildViewById(rootView, id);
      if (circularProfileImageLayout == null) {
        break missingId;
      }

      id = R.id.current_mobile_number_view;
      LinearLayout currentMobileNumberView = ViewBindings.findChildViewById(rootView, id);
      if (currentMobileNumberView == null) {
        break missingId;
      }

      id = R.id.current_status_view;
      LinearLayout currentStatusView = ViewBindings.findChildViewById(rootView, id);
      if (currentStatusView == null) {
        break missingId;
      }

      id = R.id.edit_mobile_number;
      CustomTextView editMobileNumber = ViewBindings.findChildViewById(rootView, id);
      if (editMobileNumber == null) {
        break missingId;
      }

      id = R.id.edit_profile_name;
      AppCompatEditText editProfileName = ViewBindings.findChildViewById(rootView, id);
      if (editProfileName == null) {
        break missingId;
      }

      id = R.id.image_profile_picture;
      CircularImageView imageProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (imageProfilePicture == null) {
        break missingId;
      }

      id = R.id.mobile_line_view;
      View mobileLineView = ViewBindings.findChildViewById(rootView, id);
      if (mobileLineView == null) {
        break missingId;
      }

      id = R.id.status_divider;
      View statusDivider = ViewBindings.findChildViewById(rootView, id);
      if (statusDivider == null) {
        break missingId;
      }

      id = R.id.text_edit;
      CustomTextView textEdit = ViewBindings.findChildViewById(rootView, id);
      if (textEdit == null) {
        break missingId;
      }

      id = R.id.text_email;
      CustomEditText textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.text_sync;
      CustomTextView textSync = ViewBindings.findChildViewById(rootView, id);
      if (textSync == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarTitleCenterViewBinding binding_toolbar = ToolbarTitleCenterViewBinding.bind(toolbar);

      id = R.id.txt_current_status;
      CustomTextView txtCurrentStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtCurrentStatus == null) {
        break missingId;
      }

      id = R.id.txt_email_view;
      CustomTextView txtEmailView = ViewBindings.findChildViewById(rootView, id);
      if (txtEmailView == null) {
        break missingId;
      }

      id = R.id.txt_mobile_no_view;
      CustomTextView txtMobileNoView = ViewBindings.findChildViewById(rootView, id);
      if (txtMobileNoView == null) {
        break missingId;
      }

      id = R.id.view_email;
      LinearLayout viewEmail = ViewBindings.findChildViewById(rootView, id);
      if (viewEmail == null) {
        break missingId;
      }

      id = R.id.view_line_email;
      View viewLineEmail = ViewBindings.findChildViewById(rootView, id);
      if (viewLineEmail == null) {
        break missingId;
      }

      return new ActivityProfileStartBinding((RelativeLayout) rootView, changeProfileImage,
          circularProfileImageLayout, currentMobileNumberView, currentStatusView, editMobileNumber,
          editProfileName, imageProfilePicture, mobileLineView, statusDivider, textEdit, textEmail,
          textSync, binding_toolbar, txtCurrentStatus, txtEmailView, txtMobileNoView, viewEmail,
          viewLineEmail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
