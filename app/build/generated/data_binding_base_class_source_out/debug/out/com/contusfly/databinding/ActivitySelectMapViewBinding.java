// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectMapViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout addressLayout;

  @NonNull
  public final TextView addressLine1;

  @NonNull
  public final TextView addressLine2;

  @NonNull
  public final ImageView locationSend;

  @NonNull
  public final ViewMapToolbarBinding toolBar;

  private ActivitySelectMapViewBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout addressLayout, @NonNull TextView addressLine1,
      @NonNull TextView addressLine2, @NonNull ImageView locationSend,
      @NonNull ViewMapToolbarBinding toolBar) {
    this.rootView = rootView;
    this.addressLayout = addressLayout;
    this.addressLine1 = addressLine1;
    this.addressLine2 = addressLine2;
    this.locationSend = locationSend;
    this.toolBar = toolBar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectMapViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectMapViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_select_map_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectMapViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_layout;
      LinearLayout addressLayout = ViewBindings.findChildViewById(rootView, id);
      if (addressLayout == null) {
        break missingId;
      }

      id = R.id.address_line_1;
      TextView addressLine1 = ViewBindings.findChildViewById(rootView, id);
      if (addressLine1 == null) {
        break missingId;
      }

      id = R.id.address_line_2;
      TextView addressLine2 = ViewBindings.findChildViewById(rootView, id);
      if (addressLine2 == null) {
        break missingId;
      }

      id = R.id.location_send;
      ImageView locationSend = ViewBindings.findChildViewById(rootView, id);
      if (locationSend == null) {
        break missingId;
      }

      id = R.id.tool_bar;
      View toolBar = ViewBindings.findChildViewById(rootView, id);
      if (toolBar == null) {
        break missingId;
      }
      ViewMapToolbarBinding binding_toolBar = ViewMapToolbarBinding.bind(toolBar);

      return new ActivitySelectMapViewBinding((RelativeLayout) rootView, addressLayout,
          addressLine1, addressLine2, locationSend, binding_toolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
