// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.contusfly.R;
import com.google.android.material.appbar.AppBarLayout;
import io.github.rockerhieu.emojicon.EmojiconEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityImagePreviewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ImageView captionImageSend;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView captionImageSendOld;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final EmojiconEditText editCaptionMsg;

  @NonNull
  public final FrameLayout emojicons;

  @NonNull
  public final AppCompatTextView filesCount;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ImageView imageChatSmiley;

  @NonNull
  public final RecyclerView imagesList;

  @NonNull
  public final ViewPager mediaScroll;

  @NonNull
  public final AppCompatTextView recipientName;

  @NonNull
  public final Toolbar toolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout viewChat;

  @NonNull
  public final LinearLayout viewFooter;

  private ActivityImagePreviewBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appBarLayout, @Nullable ImageView captionImageSend,
      @Nullable ImageView captionImageSendOld, @Nullable EmojiconEditText editCaptionMsg,
      @NonNull FrameLayout emojicons, @NonNull AppCompatTextView filesCount,
      @Nullable ImageView imageChatSmiley, @NonNull RecyclerView imagesList,
      @NonNull ViewPager mediaScroll, @NonNull AppCompatTextView recipientName,
      @NonNull Toolbar toolbar, @Nullable LinearLayout viewChat, @NonNull LinearLayout viewFooter) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.captionImageSend = captionImageSend;
    this.captionImageSendOld = captionImageSendOld;
    this.editCaptionMsg = editCaptionMsg;
    this.emojicons = emojicons;
    this.filesCount = filesCount;
    this.imageChatSmiley = imageChatSmiley;
    this.imagesList = imagesList;
    this.mediaScroll = mediaScroll;
    this.recipientName = recipientName;
    this.toolbar = toolbar;
    this.viewChat = viewChat;
    this.viewFooter = viewFooter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityImagePreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityImagePreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_image_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityImagePreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.caption_image_send;
      ImageView captionImageSend = ViewBindings.findChildViewById(rootView, id);

      id = R.id.caption_image_send_old;
      ImageView captionImageSendOld = ViewBindings.findChildViewById(rootView, id);

      id = R.id.edit_caption_msg;
      EmojiconEditText editCaptionMsg = ViewBindings.findChildViewById(rootView, id);

      id = R.id.emojicons;
      FrameLayout emojicons = ViewBindings.findChildViewById(rootView, id);
      if (emojicons == null) {
        break missingId;
      }

      id = R.id.filesCount;
      AppCompatTextView filesCount = ViewBindings.findChildViewById(rootView, id);
      if (filesCount == null) {
        break missingId;
      }

      id = R.id.image_chat_smiley;
      ImageView imageChatSmiley = ViewBindings.findChildViewById(rootView, id);

      id = R.id.images_list;
      RecyclerView imagesList = ViewBindings.findChildViewById(rootView, id);
      if (imagesList == null) {
        break missingId;
      }

      id = R.id.media_scroll;
      ViewPager mediaScroll = ViewBindings.findChildViewById(rootView, id);
      if (mediaScroll == null) {
        break missingId;
      }

      id = R.id.recipient_name;
      AppCompatTextView recipientName = ViewBindings.findChildViewById(rootView, id);
      if (recipientName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view_chat;
      LinearLayout viewChat = ViewBindings.findChildViewById(rootView, id);

      id = R.id.view_footer;
      LinearLayout viewFooter = ViewBindings.findChildViewById(rootView, id);
      if (viewFooter == null) {
        break missingId;
      }

      return new ActivityImagePreviewBinding((RelativeLayout) rootView, appBarLayout,
          captionImageSend, captionImageSendOld, editCaptionMsg, emojicons, filesCount,
          imageChatSmiley, imagesList, mediaScroll, recipientName, toolbar, viewChat, viewFooter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
