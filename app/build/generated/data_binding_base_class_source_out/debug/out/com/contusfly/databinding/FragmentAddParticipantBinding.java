// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddParticipantBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView addParticipantsIcon;

  @NonNull
  public final RelativeLayout addParticipantsLayout;

  @NonNull
  public final TextView addParticipantsTextView;

  @NonNull
  public final AppCompatTextView callLink;

  @NonNull
  public final ImageView callLinkCopy;

  @NonNull
  public final AppCompatTextView callLinkTitleView;

  @NonNull
  public final LinearLayout callLinkView;

  @NonNull
  public final LinearLayout linkCircularView;

  @NonNull
  public final RelativeLayout rootAddParticipant;

  @NonNull
  public final CustomRecyclerView viewContactList;

  private FragmentAddParticipantBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView addParticipantsIcon, @NonNull RelativeLayout addParticipantsLayout,
      @NonNull TextView addParticipantsTextView, @NonNull AppCompatTextView callLink,
      @NonNull ImageView callLinkCopy, @NonNull AppCompatTextView callLinkTitleView,
      @NonNull LinearLayout callLinkView, @NonNull LinearLayout linkCircularView,
      @NonNull RelativeLayout rootAddParticipant, @NonNull CustomRecyclerView viewContactList) {
    this.rootView = rootView;
    this.addParticipantsIcon = addParticipantsIcon;
    this.addParticipantsLayout = addParticipantsLayout;
    this.addParticipantsTextView = addParticipantsTextView;
    this.callLink = callLink;
    this.callLinkCopy = callLinkCopy;
    this.callLinkTitleView = callLinkTitleView;
    this.callLinkView = callLinkView;
    this.linkCircularView = linkCircularView;
    this.rootAddParticipant = rootAddParticipant;
    this.viewContactList = viewContactList;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddParticipantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddParticipantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_participant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddParticipantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_participants_icon;
      ImageView addParticipantsIcon = ViewBindings.findChildViewById(rootView, id);
      if (addParticipantsIcon == null) {
        break missingId;
      }

      id = R.id.add_participants_layout;
      RelativeLayout addParticipantsLayout = ViewBindings.findChildViewById(rootView, id);
      if (addParticipantsLayout == null) {
        break missingId;
      }

      id = R.id.add_participants_text_view;
      TextView addParticipantsTextView = ViewBindings.findChildViewById(rootView, id);
      if (addParticipantsTextView == null) {
        break missingId;
      }

      id = R.id.call_link;
      AppCompatTextView callLink = ViewBindings.findChildViewById(rootView, id);
      if (callLink == null) {
        break missingId;
      }

      id = R.id.call_link_copy;
      ImageView callLinkCopy = ViewBindings.findChildViewById(rootView, id);
      if (callLinkCopy == null) {
        break missingId;
      }

      id = R.id.call_link_title_view;
      AppCompatTextView callLinkTitleView = ViewBindings.findChildViewById(rootView, id);
      if (callLinkTitleView == null) {
        break missingId;
      }

      id = R.id.call_link_view;
      LinearLayout callLinkView = ViewBindings.findChildViewById(rootView, id);
      if (callLinkView == null) {
        break missingId;
      }

      id = R.id.link_circular_view;
      LinearLayout linkCircularView = ViewBindings.findChildViewById(rootView, id);
      if (linkCircularView == null) {
        break missingId;
      }

      RelativeLayout rootAddParticipant = (RelativeLayout) rootView;

      id = R.id.view_contact_list;
      CustomRecyclerView viewContactList = ViewBindings.findChildViewById(rootView, id);
      if (viewContactList == null) {
        break missingId;
      }

      return new FragmentAddParticipantBinding((RelativeLayout) rootView, addParticipantsIcon,
          addParticipantsLayout, addParticipantsTextView, callLink, callLinkCopy, callLinkTitleView,
          callLinkView, linkCircularView, rootAddParticipant, viewContactList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
