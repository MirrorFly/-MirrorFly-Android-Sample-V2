// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.RoundRectCornerImageView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatLocationSenderItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RowStarredMessageHeaderSenderBinding headerStarredMessageReceiver;

  @NonNull
  public final ShapeableImageView icBalloon;

  @NonNull
  public final ImageView icStar;

  @NonNull
  public final ImageView imageLocSendStatus;

  @NonNull
  public final RoundRectCornerImageView imageLocationSend;

  @NonNull
  public final RelativeLayout rlHeaderSender;

  @NonNull
  public final RelativeLayout rowChatLocation;

  @NonNull
  public final ImageView sendImgForward;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final AppCompatTextView textSendLocTime;

  @NonNull
  public final LinearLayout viewChatSendLoc;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final RelativeLayout viewSendImg;

  @NonNull
  public final ListChatReplySentItemBinding viewTextSentReply;

  private RowChatLocationSenderItemBinding(@NonNull LinearLayout rootView,
      @NonNull RowStarredMessageHeaderSenderBinding headerStarredMessageReceiver,
      @NonNull ShapeableImageView icBalloon, @NonNull ImageView icStar,
      @NonNull ImageView imageLocSendStatus, @NonNull RoundRectCornerImageView imageLocationSend,
      @NonNull RelativeLayout rlHeaderSender, @NonNull RelativeLayout rowChatLocation,
      @NonNull ImageView sendImgForward, @NonNull AppCompatTextView textChatDate,
      @NonNull AppCompatTextView textSendLocTime, @NonNull LinearLayout viewChatSendLoc,
      @NonNull View viewDivider, @NonNull ViewStub viewMessageDate,
      @NonNull RelativeLayout viewSendImg,
      @NonNull ListChatReplySentItemBinding viewTextSentReply) {
    this.rootView = rootView;
    this.headerStarredMessageReceiver = headerStarredMessageReceiver;
    this.icBalloon = icBalloon;
    this.icStar = icStar;
    this.imageLocSendStatus = imageLocSendStatus;
    this.imageLocationSend = imageLocationSend;
    this.rlHeaderSender = rlHeaderSender;
    this.rowChatLocation = rowChatLocation;
    this.sendImgForward = sendImgForward;
    this.textChatDate = textChatDate;
    this.textSendLocTime = textSendLocTime;
    this.viewChatSendLoc = viewChatSendLoc;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewSendImg = viewSendImg;
    this.viewTextSentReply = viewTextSentReply;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatLocationSenderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatLocationSenderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_location_sender_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatLocationSenderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_starred_message_receiver;
      View headerStarredMessageReceiver = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageReceiver == null) {
        break missingId;
      }
      RowStarredMessageHeaderSenderBinding binding_headerStarredMessageReceiver = RowStarredMessageHeaderSenderBinding.bind(headerStarredMessageReceiver);

      id = R.id.ic_balloon;
      ShapeableImageView icBalloon = ViewBindings.findChildViewById(rootView, id);
      if (icBalloon == null) {
        break missingId;
      }

      id = R.id.ic_star;
      ImageView icStar = ViewBindings.findChildViewById(rootView, id);
      if (icStar == null) {
        break missingId;
      }

      id = R.id.image_loc_send_status;
      ImageView imageLocSendStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageLocSendStatus == null) {
        break missingId;
      }

      id = R.id.image_location_send;
      RoundRectCornerImageView imageLocationSend = ViewBindings.findChildViewById(rootView, id);
      if (imageLocationSend == null) {
        break missingId;
      }

      id = R.id.rl_header_sender;
      RelativeLayout rlHeaderSender = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderSender == null) {
        break missingId;
      }

      id = R.id.row_chat_location;
      RelativeLayout rowChatLocation = ViewBindings.findChildViewById(rootView, id);
      if (rowChatLocation == null) {
        break missingId;
      }

      id = R.id.send_img_forward;
      ImageView sendImgForward = ViewBindings.findChildViewById(rootView, id);
      if (sendImgForward == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_send_loc_time;
      AppCompatTextView textSendLocTime = ViewBindings.findChildViewById(rootView, id);
      if (textSendLocTime == null) {
        break missingId;
      }

      id = R.id.view_chat_send_loc;
      LinearLayout viewChatSendLoc = ViewBindings.findChildViewById(rootView, id);
      if (viewChatSendLoc == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_send_img;
      RelativeLayout viewSendImg = ViewBindings.findChildViewById(rootView, id);
      if (viewSendImg == null) {
        break missingId;
      }

      id = R.id.view_text_sent_reply;
      View viewTextSentReply = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSentReply == null) {
        break missingId;
      }
      ListChatReplySentItemBinding binding_viewTextSentReply = ListChatReplySentItemBinding.bind(viewTextSentReply);

      return new RowChatLocationSenderItemBinding((LinearLayout) rootView,
          binding_headerStarredMessageReceiver, icBalloon, icStar, imageLocSendStatus,
          imageLocationSend, rlHeaderSender, rowChatLocation, sendImgForward, textChatDate,
          textSendLocTime, viewChatSendLoc, viewDivider, viewMessageDate, viewSendImg,
          binding_viewTextSentReply);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
