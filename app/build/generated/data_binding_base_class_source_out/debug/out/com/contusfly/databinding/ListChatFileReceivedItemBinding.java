// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListChatFileReceivedItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout fileReceiveView;

  @NonNull
  public final RowStarredMessageHeaderReceiverBinding headerStarredMessageSender;

  @NonNull
  public final ImageView imageFileDownload;

  @NonNull
  public final ImageView imageFileDownloadCancel;

  @NonNull
  public final ImageView imageFileFavorite;

  @NonNull
  public final ImageView imageFilePicture;

  @NonNull
  public final RelativeLayout layoutFileCancel;

  @NonNull
  public final RelativeLayout layoutFileDownload;

  @NonNull
  public final RelativeLayout layoutFileReceivedView;

  @NonNull
  public final ProgressBar progressFileDownload;

  @NonNull
  public final ProgressBar progressFileDownloadBuffer;

  @NonNull
  public final RelativeLayout rlHeaderReceiver;

  @NonNull
  public final ImageView sendImgForward;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final AppCompatTextView textFileName;

  @NonNull
  public final AppCompatTextView textFileReceivedTime;

  @NonNull
  public final AppCompatTextView textFileSize;

  @NonNull
  public final LinearLayout viewChatReceiveFile;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final ViewStub viewSenderName;

  @NonNull
  public final ListChatReplyReceivedItemBinding viewTextSentReply;

  private ListChatFileReceivedItemBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout fileReceiveView,
      @NonNull RowStarredMessageHeaderReceiverBinding headerStarredMessageSender,
      @NonNull ImageView imageFileDownload, @NonNull ImageView imageFileDownloadCancel,
      @NonNull ImageView imageFileFavorite, @NonNull ImageView imageFilePicture,
      @NonNull RelativeLayout layoutFileCancel, @NonNull RelativeLayout layoutFileDownload,
      @NonNull RelativeLayout layoutFileReceivedView, @NonNull ProgressBar progressFileDownload,
      @NonNull ProgressBar progressFileDownloadBuffer, @NonNull RelativeLayout rlHeaderReceiver,
      @NonNull ImageView sendImgForward, @NonNull AppCompatTextView textChatDate,
      @NonNull AppCompatTextView textFileName, @NonNull AppCompatTextView textFileReceivedTime,
      @NonNull AppCompatTextView textFileSize, @NonNull LinearLayout viewChatReceiveFile,
      @NonNull View viewDivider, @NonNull ViewStub viewMessageDate,
      @NonNull ViewStub viewSenderName,
      @NonNull ListChatReplyReceivedItemBinding viewTextSentReply) {
    this.rootView = rootView;
    this.fileReceiveView = fileReceiveView;
    this.headerStarredMessageSender = headerStarredMessageSender;
    this.imageFileDownload = imageFileDownload;
    this.imageFileDownloadCancel = imageFileDownloadCancel;
    this.imageFileFavorite = imageFileFavorite;
    this.imageFilePicture = imageFilePicture;
    this.layoutFileCancel = layoutFileCancel;
    this.layoutFileDownload = layoutFileDownload;
    this.layoutFileReceivedView = layoutFileReceivedView;
    this.progressFileDownload = progressFileDownload;
    this.progressFileDownloadBuffer = progressFileDownloadBuffer;
    this.rlHeaderReceiver = rlHeaderReceiver;
    this.sendImgForward = sendImgForward;
    this.textChatDate = textChatDate;
    this.textFileName = textFileName;
    this.textFileReceivedTime = textFileReceivedTime;
    this.textFileSize = textFileSize;
    this.viewChatReceiveFile = viewChatReceiveFile;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewSenderName = viewSenderName;
    this.viewTextSentReply = viewTextSentReply;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListChatFileReceivedItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListChatFileReceivedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_chat_file_received_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListChatFileReceivedItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.file_receive_view;
      ConstraintLayout fileReceiveView = ViewBindings.findChildViewById(rootView, id);
      if (fileReceiveView == null) {
        break missingId;
      }

      id = R.id.header_starred_message_sender;
      View headerStarredMessageSender = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageSender == null) {
        break missingId;
      }
      RowStarredMessageHeaderReceiverBinding binding_headerStarredMessageSender = RowStarredMessageHeaderReceiverBinding.bind(headerStarredMessageSender);

      id = R.id.image_file_download;
      ImageView imageFileDownload = ViewBindings.findChildViewById(rootView, id);
      if (imageFileDownload == null) {
        break missingId;
      }

      id = R.id.image_file_download_cancel;
      ImageView imageFileDownloadCancel = ViewBindings.findChildViewById(rootView, id);
      if (imageFileDownloadCancel == null) {
        break missingId;
      }

      id = R.id.image_file_favorite;
      ImageView imageFileFavorite = ViewBindings.findChildViewById(rootView, id);
      if (imageFileFavorite == null) {
        break missingId;
      }

      id = R.id.image_file_picture;
      ImageView imageFilePicture = ViewBindings.findChildViewById(rootView, id);
      if (imageFilePicture == null) {
        break missingId;
      }

      id = R.id.layout_file_cancel;
      RelativeLayout layoutFileCancel = ViewBindings.findChildViewById(rootView, id);
      if (layoutFileCancel == null) {
        break missingId;
      }

      id = R.id.layout_file_download;
      RelativeLayout layoutFileDownload = ViewBindings.findChildViewById(rootView, id);
      if (layoutFileDownload == null) {
        break missingId;
      }

      id = R.id.layout_file_received_view;
      RelativeLayout layoutFileReceivedView = ViewBindings.findChildViewById(rootView, id);
      if (layoutFileReceivedView == null) {
        break missingId;
      }

      id = R.id.progress_file_download;
      ProgressBar progressFileDownload = ViewBindings.findChildViewById(rootView, id);
      if (progressFileDownload == null) {
        break missingId;
      }

      id = R.id.progress_file_download_buffer;
      ProgressBar progressFileDownloadBuffer = ViewBindings.findChildViewById(rootView, id);
      if (progressFileDownloadBuffer == null) {
        break missingId;
      }

      id = R.id.rl_header_receiver;
      RelativeLayout rlHeaderReceiver = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderReceiver == null) {
        break missingId;
      }

      id = R.id.send_img_forward;
      ImageView sendImgForward = ViewBindings.findChildViewById(rootView, id);
      if (sendImgForward == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_file_name;
      AppCompatTextView textFileName = ViewBindings.findChildViewById(rootView, id);
      if (textFileName == null) {
        break missingId;
      }

      id = R.id.text_file_received_time;
      AppCompatTextView textFileReceivedTime = ViewBindings.findChildViewById(rootView, id);
      if (textFileReceivedTime == null) {
        break missingId;
      }

      id = R.id.text_file_size;
      AppCompatTextView textFileSize = ViewBindings.findChildViewById(rootView, id);
      if (textFileSize == null) {
        break missingId;
      }

      id = R.id.view_chat_receive_file;
      LinearLayout viewChatReceiveFile = ViewBindings.findChildViewById(rootView, id);
      if (viewChatReceiveFile == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_sender_name;
      ViewStub viewSenderName = ViewBindings.findChildViewById(rootView, id);
      if (viewSenderName == null) {
        break missingId;
      }

      id = R.id.view_text_sent_reply;
      View viewTextSentReply = ViewBindings.findChildViewById(rootView, id);
      if (viewTextSentReply == null) {
        break missingId;
      }
      ListChatReplyReceivedItemBinding binding_viewTextSentReply = ListChatReplyReceivedItemBinding.bind(viewTextSentReply);

      return new ListChatFileReceivedItemBinding((LinearLayout) rootView, fileReceiveView,
          binding_headerStarredMessageSender, imageFileDownload, imageFileDownloadCancel,
          imageFileFavorite, imageFilePicture, layoutFileCancel, layoutFileDownload,
          layoutFileReceivedView, progressFileDownload, progressFileDownloadBuffer,
          rlHeaderReceiver, sendImgForward, textChatDate, textFileName, textFileReceivedTime,
          textFileSize, viewChatReceiveFile, viewDivider, viewMessageDate, viewSenderName,
          binding_viewTextSentReply);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
