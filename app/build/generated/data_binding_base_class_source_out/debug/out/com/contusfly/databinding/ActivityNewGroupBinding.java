// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.emoji.widget.EmojiAppCompatEditText;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewGroupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView_;

  @NonNull
  public final ImageView changeProfileImage;

  @NonNull
  public final RelativeLayout circularProfileImageLayout;

  @NonNull
  public final EmojiAppCompatEditText editNewGroupName;

  @NonNull
  public final FrameLayout emojicons;

  @NonNull
  public final CircularImageView imgGroup;

  @NonNull
  public final ImageView imgSmiley;

  @NonNull
  public final LinearLayout newGroupView;

  @NonNull
  public final RelativeLayout rootView;

  @NonNull
  public final ActionToolbarBinding toolbarInclude;

  @NonNull
  public final CustomTextView txtSize;

  @NonNull
  public final LinearLayout viewEditor;

  private ActivityNewGroupBinding(@NonNull RelativeLayout rootView_,
      @NonNull ImageView changeProfileImage, @NonNull RelativeLayout circularProfileImageLayout,
      @NonNull EmojiAppCompatEditText editNewGroupName, @NonNull FrameLayout emojicons,
      @NonNull CircularImageView imgGroup, @NonNull ImageView imgSmiley,
      @NonNull LinearLayout newGroupView, @NonNull RelativeLayout rootView,
      @NonNull ActionToolbarBinding toolbarInclude, @NonNull CustomTextView txtSize,
      @NonNull LinearLayout viewEditor) {
    this.rootView_ = rootView_;
    this.changeProfileImage = changeProfileImage;
    this.circularProfileImageLayout = circularProfileImageLayout;
    this.editNewGroupName = editNewGroupName;
    this.emojicons = emojicons;
    this.imgGroup = imgGroup;
    this.imgSmiley = imgSmiley;
    this.newGroupView = newGroupView;
    this.rootView = rootView;
    this.toolbarInclude = toolbarInclude;
    this.txtSize = txtSize;
    this.viewEditor = viewEditor;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static ActivityNewGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.change_profile_image;
      ImageView changeProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (changeProfileImage == null) {
        break missingId;
      }

      id = R.id.circular_profile_image_layout;
      RelativeLayout circularProfileImageLayout = ViewBindings.findChildViewById(rootView, id);
      if (circularProfileImageLayout == null) {
        break missingId;
      }

      id = R.id.edit_new_group_name;
      EmojiAppCompatEditText editNewGroupName = ViewBindings.findChildViewById(rootView, id);
      if (editNewGroupName == null) {
        break missingId;
      }

      id = R.id.emojicons;
      FrameLayout emojicons = ViewBindings.findChildViewById(rootView, id);
      if (emojicons == null) {
        break missingId;
      }

      id = R.id.img_group;
      CircularImageView imgGroup = ViewBindings.findChildViewById(rootView, id);
      if (imgGroup == null) {
        break missingId;
      }

      id = R.id.img_smiley;
      ImageView imgSmiley = ViewBindings.findChildViewById(rootView, id);
      if (imgSmiley == null) {
        break missingId;
      }

      id = R.id.new_group_view;
      LinearLayout newGroupView = ViewBindings.findChildViewById(rootView, id);
      if (newGroupView == null) {
        break missingId;
      }

      RelativeLayout rootView_ = (RelativeLayout) rootView;

      id = R.id.toolbarInclude;
      View toolbarInclude = ViewBindings.findChildViewById(rootView, id);
      if (toolbarInclude == null) {
        break missingId;
      }
      ActionToolbarBinding binding_toolbarInclude = ActionToolbarBinding.bind(toolbarInclude);

      id = R.id.txt_size;
      CustomTextView txtSize = ViewBindings.findChildViewById(rootView, id);
      if (txtSize == null) {
        break missingId;
      }

      id = R.id.view_editor;
      LinearLayout viewEditor = ViewBindings.findChildViewById(rootView, id);
      if (viewEditor == null) {
        break missingId;
      }

      return new ActivityNewGroupBinding((RelativeLayout) rootView, changeProfileImage,
          circularProfileImageLayout, editNewGroupName, emojicons, imgGroup, imgSmiley,
          newGroupView, rootView_, binding_toolbarInclude, txtSize, viewEditor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
