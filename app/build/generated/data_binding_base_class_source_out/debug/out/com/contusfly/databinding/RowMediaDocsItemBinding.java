// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMediaDocsItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View docsSeparator;

  @NonNull
  public final AppCompatImageView imageDocsType;

  @NonNull
  public final ConstraintLayout mediaViewItem;

  @NonNull
  public final AppCompatTextView textDocsDate;

  @NonNull
  public final AppCompatTextView textDocsName;

  @NonNull
  public final AppCompatTextView textDocsSize;

  private RowMediaDocsItemBinding(@NonNull ConstraintLayout rootView, @NonNull View docsSeparator,
      @NonNull AppCompatImageView imageDocsType, @NonNull ConstraintLayout mediaViewItem,
      @NonNull AppCompatTextView textDocsDate, @NonNull AppCompatTextView textDocsName,
      @NonNull AppCompatTextView textDocsSize) {
    this.rootView = rootView;
    this.docsSeparator = docsSeparator;
    this.imageDocsType = imageDocsType;
    this.mediaViewItem = mediaViewItem;
    this.textDocsDate = textDocsDate;
    this.textDocsName = textDocsName;
    this.textDocsSize = textDocsSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMediaDocsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMediaDocsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_media_docs_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMediaDocsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.docs_separator;
      View docsSeparator = ViewBindings.findChildViewById(rootView, id);
      if (docsSeparator == null) {
        break missingId;
      }

      id = R.id.image_docs_type;
      AppCompatImageView imageDocsType = ViewBindings.findChildViewById(rootView, id);
      if (imageDocsType == null) {
        break missingId;
      }

      ConstraintLayout mediaViewItem = (ConstraintLayout) rootView;

      id = R.id.text_docs_date;
      AppCompatTextView textDocsDate = ViewBindings.findChildViewById(rootView, id);
      if (textDocsDate == null) {
        break missingId;
      }

      id = R.id.text_docs_name;
      AppCompatTextView textDocsName = ViewBindings.findChildViewById(rootView, id);
      if (textDocsName == null) {
        break missingId;
      }

      id = R.id.text_docs_size;
      AppCompatTextView textDocsSize = ViewBindings.findChildViewById(rootView, id);
      if (textDocsSize == null) {
        break missingId;
      }

      return new RowMediaDocsItemBinding((ConstraintLayout) rootView, docsSeparator, imageDocsType,
          mediaViewItem, textDocsDate, textDocsName, textDocsSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
