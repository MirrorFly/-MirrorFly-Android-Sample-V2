// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contus.call.RippleBackgroundView;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutIncomingCallBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnCallSwipe;

  @NonNull
  public final ImageView imageCallAnswer;

  @NonNull
  public final ImageView imageCallDownArrow1;

  @NonNull
  public final ImageView imageCallDownArrow2;

  @NonNull
  public final ImageView imageCallReject;

  @NonNull
  public final ImageView imageCallUpArrow1;

  @NonNull
  public final ImageView imageCallUpArrow2;

  @NonNull
  public final RelativeLayout layoutCallIncoming;

  @NonNull
  public final RippleBackgroundView rippleBg;

  private LayoutIncomingCallBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView btnCallSwipe, @NonNull ImageView imageCallAnswer,
      @NonNull ImageView imageCallDownArrow1, @NonNull ImageView imageCallDownArrow2,
      @NonNull ImageView imageCallReject, @NonNull ImageView imageCallUpArrow1,
      @NonNull ImageView imageCallUpArrow2, @NonNull RelativeLayout layoutCallIncoming,
      @NonNull RippleBackgroundView rippleBg) {
    this.rootView = rootView;
    this.btnCallSwipe = btnCallSwipe;
    this.imageCallAnswer = imageCallAnswer;
    this.imageCallDownArrow1 = imageCallDownArrow1;
    this.imageCallDownArrow2 = imageCallDownArrow2;
    this.imageCallReject = imageCallReject;
    this.imageCallUpArrow1 = imageCallUpArrow1;
    this.imageCallUpArrow2 = imageCallUpArrow2;
    this.layoutCallIncoming = layoutCallIncoming;
    this.rippleBg = rippleBg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutIncomingCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutIncomingCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_incoming_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutIncomingCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_call_swipe;
      ImageView btnCallSwipe = ViewBindings.findChildViewById(rootView, id);
      if (btnCallSwipe == null) {
        break missingId;
      }

      id = R.id.image_call_answer;
      ImageView imageCallAnswer = ViewBindings.findChildViewById(rootView, id);
      if (imageCallAnswer == null) {
        break missingId;
      }

      id = R.id.image_call_down_arrow1;
      ImageView imageCallDownArrow1 = ViewBindings.findChildViewById(rootView, id);
      if (imageCallDownArrow1 == null) {
        break missingId;
      }

      id = R.id.image_call_down_arrow2;
      ImageView imageCallDownArrow2 = ViewBindings.findChildViewById(rootView, id);
      if (imageCallDownArrow2 == null) {
        break missingId;
      }

      id = R.id.image_call_reject;
      ImageView imageCallReject = ViewBindings.findChildViewById(rootView, id);
      if (imageCallReject == null) {
        break missingId;
      }

      id = R.id.image_call_up_arrow1;
      ImageView imageCallUpArrow1 = ViewBindings.findChildViewById(rootView, id);
      if (imageCallUpArrow1 == null) {
        break missingId;
      }

      id = R.id.image_call_up_arrow2;
      ImageView imageCallUpArrow2 = ViewBindings.findChildViewById(rootView, id);
      if (imageCallUpArrow2 == null) {
        break missingId;
      }

      RelativeLayout layoutCallIncoming = (RelativeLayout) rootView;

      id = R.id.ripple_bg;
      RippleBackgroundView rippleBg = ViewBindings.findChildViewById(rootView, id);
      if (rippleBg == null) {
        break missingId;
      }

      return new LayoutIncomingCallBinding((RelativeLayout) rootView, btnCallSwipe, imageCallAnswer,
          imageCallDownArrow1, imageCallDownArrow2, imageCallReject, imageCallUpArrow1,
          imageCallUpArrow2, layoutCallIncoming, rippleBg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
