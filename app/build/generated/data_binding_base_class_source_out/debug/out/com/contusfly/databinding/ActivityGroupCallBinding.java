// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGroupCallBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView callOptionsUpArrow;

  @NonNull
  public final ImageButton imageMinimizeCall;

  @NonNull
  public final LayoutCallConnectedBinding layoutCallConnected;

  @NonNull
  public final LayoutCallNotConnectedBinding layoutCallNotConnected;

  @NonNull
  public final LayoutCallOptionsBinding layoutCallOptions;

  @NonNull
  public final LayoutCallRetryBinding layoutCallRetry;

  @NonNull
  public final LayoutIncomingCallBinding layoutIncomingCall;

  @NonNull
  public final LayoutPipModeBinding layoutPipMode;

  @NonNull
  public final RelativeLayout rootLayout;

  @NonNull
  public final FrameLayout viewContainer;

  @NonNull
  public final View viewOverlay;

  private ActivityGroupCallBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView callOptionsUpArrow, @NonNull ImageButton imageMinimizeCall,
      @NonNull LayoutCallConnectedBinding layoutCallConnected,
      @NonNull LayoutCallNotConnectedBinding layoutCallNotConnected,
      @NonNull LayoutCallOptionsBinding layoutCallOptions,
      @NonNull LayoutCallRetryBinding layoutCallRetry,
      @NonNull LayoutIncomingCallBinding layoutIncomingCall,
      @NonNull LayoutPipModeBinding layoutPipMode, @NonNull RelativeLayout rootLayout,
      @NonNull FrameLayout viewContainer, @NonNull View viewOverlay) {
    this.rootView = rootView;
    this.callOptionsUpArrow = callOptionsUpArrow;
    this.imageMinimizeCall = imageMinimizeCall;
    this.layoutCallConnected = layoutCallConnected;
    this.layoutCallNotConnected = layoutCallNotConnected;
    this.layoutCallOptions = layoutCallOptions;
    this.layoutCallRetry = layoutCallRetry;
    this.layoutIncomingCall = layoutIncomingCall;
    this.layoutPipMode = layoutPipMode;
    this.rootLayout = rootLayout;
    this.viewContainer = viewContainer;
    this.viewOverlay = viewOverlay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupCallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupCallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_call, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupCallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.call_options_up_arrow;
      ImageView callOptionsUpArrow = ViewBindings.findChildViewById(rootView, id);
      if (callOptionsUpArrow == null) {
        break missingId;
      }

      id = R.id.image_minimize_call;
      ImageButton imageMinimizeCall = ViewBindings.findChildViewById(rootView, id);
      if (imageMinimizeCall == null) {
        break missingId;
      }

      id = R.id.layout_call_connected;
      View layoutCallConnected = ViewBindings.findChildViewById(rootView, id);
      if (layoutCallConnected == null) {
        break missingId;
      }
      LayoutCallConnectedBinding binding_layoutCallConnected = LayoutCallConnectedBinding.bind(layoutCallConnected);

      id = R.id.layout_call_not_connected;
      View layoutCallNotConnected = ViewBindings.findChildViewById(rootView, id);
      if (layoutCallNotConnected == null) {
        break missingId;
      }
      LayoutCallNotConnectedBinding binding_layoutCallNotConnected = LayoutCallNotConnectedBinding.bind(layoutCallNotConnected);

      id = R.id.layout_call_options;
      View layoutCallOptions = ViewBindings.findChildViewById(rootView, id);
      if (layoutCallOptions == null) {
        break missingId;
      }
      LayoutCallOptionsBinding binding_layoutCallOptions = LayoutCallOptionsBinding.bind(layoutCallOptions);

      id = R.id.layout_call_retry;
      View layoutCallRetry = ViewBindings.findChildViewById(rootView, id);
      if (layoutCallRetry == null) {
        break missingId;
      }
      LayoutCallRetryBinding binding_layoutCallRetry = LayoutCallRetryBinding.bind(layoutCallRetry);

      id = R.id.layout_incoming_call;
      View layoutIncomingCall = ViewBindings.findChildViewById(rootView, id);
      if (layoutIncomingCall == null) {
        break missingId;
      }
      LayoutIncomingCallBinding binding_layoutIncomingCall = LayoutIncomingCallBinding.bind(layoutIncomingCall);

      id = R.id.layout_pip_mode;
      View layoutPipMode = ViewBindings.findChildViewById(rootView, id);
      if (layoutPipMode == null) {
        break missingId;
      }
      LayoutPipModeBinding binding_layoutPipMode = LayoutPipModeBinding.bind(layoutPipMode);

      RelativeLayout rootLayout = (RelativeLayout) rootView;

      id = R.id.view_container;
      FrameLayout viewContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewContainer == null) {
        break missingId;
      }

      id = R.id.view_overlay;
      View viewOverlay = ViewBindings.findChildViewById(rootView, id);
      if (viewOverlay == null) {
        break missingId;
      }

      return new ActivityGroupCallBinding((RelativeLayout) rootView, callOptionsUpArrow,
          imageMinimizeCall, binding_layoutCallConnected, binding_layoutCallNotConnected,
          binding_layoutCallOptions, binding_layoutCallRetry, binding_layoutIncomingCall,
          binding_layoutPipMode, rootLayout, viewContainer, viewOverlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
