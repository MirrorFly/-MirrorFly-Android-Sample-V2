// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.emoji.widget.EmojiAppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatTxtReceiverItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RowStarredMessageHeaderReceiverBinding headerStarredMessageSender;

  @NonNull
  public final ImageView icStarReceived;

  @NonNull
  public final ImageView imageReceivedRecall;

  @NonNull
  public final ImageView joinLinkLogo;

  @NonNull
  public final LinearLayout llChatReciverView;

  @NonNull
  public final FrameLayout llChatTxtReceivedView;

  @NonNull
  public final RelativeLayout rlHeaderReceiver;

  @NonNull
  public final LinearLayout rowChatText;

  @NonNull
  public final LinearLayout rowChatTextRcvr;

  @NonNull
  public final LinearLayout rowJoinLinkView;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final TextView textRevChat;

  @NonNull
  public final EmojiAppCompatTextView textRevChatTranslated;

  @NonNull
  public final AppCompatTextView textRevTextTime;

  @NonNull
  public final LinearLayout translatedLayout;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final ViewStub viewSenderName;

  @NonNull
  public final View viewTranslated;

  private RowChatTxtReceiverItemBinding(@NonNull LinearLayout rootView,
      @NonNull RowStarredMessageHeaderReceiverBinding headerStarredMessageSender,
      @NonNull ImageView icStarReceived, @NonNull ImageView imageReceivedRecall,
      @NonNull ImageView joinLinkLogo, @NonNull LinearLayout llChatReciverView,
      @NonNull FrameLayout llChatTxtReceivedView, @NonNull RelativeLayout rlHeaderReceiver,
      @NonNull LinearLayout rowChatText, @NonNull LinearLayout rowChatTextRcvr,
      @NonNull LinearLayout rowJoinLinkView, @NonNull AppCompatTextView textChatDate,
      @NonNull TextView textRevChat, @NonNull EmojiAppCompatTextView textRevChatTranslated,
      @NonNull AppCompatTextView textRevTextTime, @NonNull LinearLayout translatedLayout,
      @NonNull View viewDivider, @NonNull ViewStub viewMessageDate,
      @NonNull ViewStub viewSenderName, @NonNull View viewTranslated) {
    this.rootView = rootView;
    this.headerStarredMessageSender = headerStarredMessageSender;
    this.icStarReceived = icStarReceived;
    this.imageReceivedRecall = imageReceivedRecall;
    this.joinLinkLogo = joinLinkLogo;
    this.llChatReciverView = llChatReciverView;
    this.llChatTxtReceivedView = llChatTxtReceivedView;
    this.rlHeaderReceiver = rlHeaderReceiver;
    this.rowChatText = rowChatText;
    this.rowChatTextRcvr = rowChatTextRcvr;
    this.rowJoinLinkView = rowJoinLinkView;
    this.textChatDate = textChatDate;
    this.textRevChat = textRevChat;
    this.textRevChatTranslated = textRevChatTranslated;
    this.textRevTextTime = textRevTextTime;
    this.translatedLayout = translatedLayout;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewSenderName = viewSenderName;
    this.viewTranslated = viewTranslated;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatTxtReceiverItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatTxtReceiverItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_txt_receiver_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatTxtReceiverItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_starred_message_sender;
      View headerStarredMessageSender = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageSender == null) {
        break missingId;
      }
      RowStarredMessageHeaderReceiverBinding binding_headerStarredMessageSender = RowStarredMessageHeaderReceiverBinding.bind(headerStarredMessageSender);

      id = R.id.ic_star_received;
      ImageView icStarReceived = ViewBindings.findChildViewById(rootView, id);
      if (icStarReceived == null) {
        break missingId;
      }

      id = R.id.image_received_recall;
      ImageView imageReceivedRecall = ViewBindings.findChildViewById(rootView, id);
      if (imageReceivedRecall == null) {
        break missingId;
      }

      id = R.id.join_link_logo;
      ImageView joinLinkLogo = ViewBindings.findChildViewById(rootView, id);
      if (joinLinkLogo == null) {
        break missingId;
      }

      id = R.id.ll_chat_reciver_view;
      LinearLayout llChatReciverView = ViewBindings.findChildViewById(rootView, id);
      if (llChatReciverView == null) {
        break missingId;
      }

      id = R.id.ll_chat_txt_received_view;
      FrameLayout llChatTxtReceivedView = ViewBindings.findChildViewById(rootView, id);
      if (llChatTxtReceivedView == null) {
        break missingId;
      }

      id = R.id.rl_header_receiver;
      RelativeLayout rlHeaderReceiver = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderReceiver == null) {
        break missingId;
      }

      id = R.id.row_chat_text;
      LinearLayout rowChatText = ViewBindings.findChildViewById(rootView, id);
      if (rowChatText == null) {
        break missingId;
      }

      LinearLayout rowChatTextRcvr = (LinearLayout) rootView;

      id = R.id.row_join_link_view;
      LinearLayout rowJoinLinkView = ViewBindings.findChildViewById(rootView, id);
      if (rowJoinLinkView == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_rev_chat;
      TextView textRevChat = ViewBindings.findChildViewById(rootView, id);
      if (textRevChat == null) {
        break missingId;
      }

      id = R.id.text_rev_chat_translated;
      EmojiAppCompatTextView textRevChatTranslated = ViewBindings.findChildViewById(rootView, id);
      if (textRevChatTranslated == null) {
        break missingId;
      }

      id = R.id.text_rev_text_time;
      AppCompatTextView textRevTextTime = ViewBindings.findChildViewById(rootView, id);
      if (textRevTextTime == null) {
        break missingId;
      }

      id = R.id.translated_layout;
      LinearLayout translatedLayout = ViewBindings.findChildViewById(rootView, id);
      if (translatedLayout == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_sender_name;
      ViewStub viewSenderName = ViewBindings.findChildViewById(rootView, id);
      if (viewSenderName == null) {
        break missingId;
      }

      id = R.id.view_translated;
      View viewTranslated = ViewBindings.findChildViewById(rootView, id);
      if (viewTranslated == null) {
        break missingId;
      }

      return new RowChatTxtReceiverItemBinding((LinearLayout) rootView,
          binding_headerStarredMessageSender, icStarReceived, imageReceivedRecall, joinLinkLogo,
          llChatReciverView, llChatTxtReceivedView, rlHeaderReceiver, rowChatText, rowChatTextRcvr,
          rowJoinLinkView, textChatDate, textRevChat, textRevChatTranslated, textRevTextTime,
          translatedLayout, viewDivider, viewMessageDate, viewSenderName, viewTranslated);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
