// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contus.call.RippleBackgroundView;
import com.contus.call.SpeakingIndicatorView;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import com.mirrorflysdk.flycall.webrtc.TextureViewRenderer;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCallConnectedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View backgroundView;

  @NonNull
  public final RecyclerView callGridUsersRecyclerview;

  @NonNull
  public final RecyclerView callUsersRecyclerview;

  @NonNull
  public final CircularImageView callerProfileImage;

  @NonNull
  public final View gridBackgroundView;

  @NonNull
  public final ImageView imageAddUsers;

  @NonNull
  public final AppCompatImageView imageAudioMuted;

  @NonNull
  public final AppCompatImageView imageAudioMutedForVideoCall;

  @NonNull
  public final ImageView imageMenuSwitchCallView;

  @NonNull
  public final AppCompatImageView imageUnpin;

  @NonNull
  public final RelativeLayout layoutCallDetails;

  @NonNull
  public final RelativeLayout layoutOneToOneAudioCall;

  @NonNull
  public final RelativeLayout layoutProfile;

  @NonNull
  public final RelativeLayout layoutTitle;

  @NonNull
  public final CircularImageView localProfileImage;

  @NonNull
  public final RippleBackgroundView rippleBg;

  @NonNull
  public final TextView singleUserTextCallStatus;

  @NonNull
  public final View singleUserViewSpeakingIndicatorHelper;

  @NonNull
  public final TextView textCallDuration;

  @NonNull
  public final TextView textCallStatus;

  @NonNull
  public final TextView textCallUsers;

  @NonNull
  public final AppCompatImageView viewPoorNetworkLocalUser;

  @NonNull
  public final SpeakingIndicatorView viewSpeakingIndicator;

  @NonNull
  public final TextureViewRenderer viewVideoLocal;

  @NonNull
  public final TextureViewRenderer viewVideoPinned;

  private LayoutCallConnectedBinding(@NonNull RelativeLayout rootView, @NonNull View backgroundView,
      @NonNull RecyclerView callGridUsersRecyclerview, @NonNull RecyclerView callUsersRecyclerview,
      @NonNull CircularImageView callerProfileImage, @NonNull View gridBackgroundView,
      @NonNull ImageView imageAddUsers, @NonNull AppCompatImageView imageAudioMuted,
      @NonNull AppCompatImageView imageAudioMutedForVideoCall,
      @NonNull ImageView imageMenuSwitchCallView, @NonNull AppCompatImageView imageUnpin,
      @NonNull RelativeLayout layoutCallDetails, @NonNull RelativeLayout layoutOneToOneAudioCall,
      @NonNull RelativeLayout layoutProfile, @NonNull RelativeLayout layoutTitle,
      @NonNull CircularImageView localProfileImage, @NonNull RippleBackgroundView rippleBg,
      @NonNull TextView singleUserTextCallStatus,
      @NonNull View singleUserViewSpeakingIndicatorHelper, @NonNull TextView textCallDuration,
      @NonNull TextView textCallStatus, @NonNull TextView textCallUsers,
      @NonNull AppCompatImageView viewPoorNetworkLocalUser,
      @NonNull SpeakingIndicatorView viewSpeakingIndicator,
      @NonNull TextureViewRenderer viewVideoLocal, @NonNull TextureViewRenderer viewVideoPinned) {
    this.rootView = rootView;
    this.backgroundView = backgroundView;
    this.callGridUsersRecyclerview = callGridUsersRecyclerview;
    this.callUsersRecyclerview = callUsersRecyclerview;
    this.callerProfileImage = callerProfileImage;
    this.gridBackgroundView = gridBackgroundView;
    this.imageAddUsers = imageAddUsers;
    this.imageAudioMuted = imageAudioMuted;
    this.imageAudioMutedForVideoCall = imageAudioMutedForVideoCall;
    this.imageMenuSwitchCallView = imageMenuSwitchCallView;
    this.imageUnpin = imageUnpin;
    this.layoutCallDetails = layoutCallDetails;
    this.layoutOneToOneAudioCall = layoutOneToOneAudioCall;
    this.layoutProfile = layoutProfile;
    this.layoutTitle = layoutTitle;
    this.localProfileImage = localProfileImage;
    this.rippleBg = rippleBg;
    this.singleUserTextCallStatus = singleUserTextCallStatus;
    this.singleUserViewSpeakingIndicatorHelper = singleUserViewSpeakingIndicatorHelper;
    this.textCallDuration = textCallDuration;
    this.textCallStatus = textCallStatus;
    this.textCallUsers = textCallUsers;
    this.viewPoorNetworkLocalUser = viewPoorNetworkLocalUser;
    this.viewSpeakingIndicator = viewSpeakingIndicator;
    this.viewVideoLocal = viewVideoLocal;
    this.viewVideoPinned = viewVideoPinned;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCallConnectedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCallConnectedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_call_connected, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCallConnectedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background_view;
      View backgroundView = ViewBindings.findChildViewById(rootView, id);
      if (backgroundView == null) {
        break missingId;
      }

      id = R.id.call_grid_users_recyclerview;
      RecyclerView callGridUsersRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (callGridUsersRecyclerview == null) {
        break missingId;
      }

      id = R.id.call_users_recyclerview;
      RecyclerView callUsersRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (callUsersRecyclerview == null) {
        break missingId;
      }

      id = R.id.caller_profile_image;
      CircularImageView callerProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (callerProfileImage == null) {
        break missingId;
      }

      id = R.id.grid_background_view;
      View gridBackgroundView = ViewBindings.findChildViewById(rootView, id);
      if (gridBackgroundView == null) {
        break missingId;
      }

      id = R.id.image_add_users;
      ImageView imageAddUsers = ViewBindings.findChildViewById(rootView, id);
      if (imageAddUsers == null) {
        break missingId;
      }

      id = R.id.image_audio_muted;
      AppCompatImageView imageAudioMuted = ViewBindings.findChildViewById(rootView, id);
      if (imageAudioMuted == null) {
        break missingId;
      }

      id = R.id.image_audio_muted_for_video_call;
      AppCompatImageView imageAudioMutedForVideoCall = ViewBindings.findChildViewById(rootView, id);
      if (imageAudioMutedForVideoCall == null) {
        break missingId;
      }

      id = R.id.image_menu_switch_call_view;
      ImageView imageMenuSwitchCallView = ViewBindings.findChildViewById(rootView, id);
      if (imageMenuSwitchCallView == null) {
        break missingId;
      }

      id = R.id.image_unpin;
      AppCompatImageView imageUnpin = ViewBindings.findChildViewById(rootView, id);
      if (imageUnpin == null) {
        break missingId;
      }

      RelativeLayout layoutCallDetails = (RelativeLayout) rootView;

      id = R.id.layout_one_to_one_audio_call;
      RelativeLayout layoutOneToOneAudioCall = ViewBindings.findChildViewById(rootView, id);
      if (layoutOneToOneAudioCall == null) {
        break missingId;
      }

      id = R.id.layout_profile;
      RelativeLayout layoutProfile = ViewBindings.findChildViewById(rootView, id);
      if (layoutProfile == null) {
        break missingId;
      }

      id = R.id.layout_title;
      RelativeLayout layoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (layoutTitle == null) {
        break missingId;
      }

      id = R.id.local_profile_image;
      CircularImageView localProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (localProfileImage == null) {
        break missingId;
      }

      id = R.id.ripple_bg;
      RippleBackgroundView rippleBg = ViewBindings.findChildViewById(rootView, id);
      if (rippleBg == null) {
        break missingId;
      }

      id = R.id.single_user_text_call_status;
      TextView singleUserTextCallStatus = ViewBindings.findChildViewById(rootView, id);
      if (singleUserTextCallStatus == null) {
        break missingId;
      }

      id = R.id.single_user_view_speaking_indicator_helper;
      View singleUserViewSpeakingIndicatorHelper = ViewBindings.findChildViewById(rootView, id);
      if (singleUserViewSpeakingIndicatorHelper == null) {
        break missingId;
      }

      id = R.id.text_call_duration;
      TextView textCallDuration = ViewBindings.findChildViewById(rootView, id);
      if (textCallDuration == null) {
        break missingId;
      }

      id = R.id.text_call_status;
      TextView textCallStatus = ViewBindings.findChildViewById(rootView, id);
      if (textCallStatus == null) {
        break missingId;
      }

      id = R.id.text_call_users;
      TextView textCallUsers = ViewBindings.findChildViewById(rootView, id);
      if (textCallUsers == null) {
        break missingId;
      }

      id = R.id.view_poor_network_local_user;
      AppCompatImageView viewPoorNetworkLocalUser = ViewBindings.findChildViewById(rootView, id);
      if (viewPoorNetworkLocalUser == null) {
        break missingId;
      }

      id = R.id.view_speaking_indicator;
      SpeakingIndicatorView viewSpeakingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (viewSpeakingIndicator == null) {
        break missingId;
      }

      id = R.id.view_video_local;
      TextureViewRenderer viewVideoLocal = ViewBindings.findChildViewById(rootView, id);
      if (viewVideoLocal == null) {
        break missingId;
      }

      id = R.id.view_video_pinned;
      TextureViewRenderer viewVideoPinned = ViewBindings.findChildViewById(rootView, id);
      if (viewVideoPinned == null) {
        break missingId;
      }

      return new LayoutCallConnectedBinding((RelativeLayout) rootView, backgroundView,
          callGridUsersRecyclerview, callUsersRecyclerview, callerProfileImage, gridBackgroundView,
          imageAddUsers, imageAudioMuted, imageAudioMutedForVideoCall, imageMenuSwitchCallView,
          imageUnpin, layoutCallDetails, layoutOneToOneAudioCall, layoutProfile, layoutTitle,
          localProfileImage, rippleBg, singleUserTextCallStatus,
          singleUserViewSpeakingIndicatorHelper, textCallDuration, textCallStatus, textCallUsers,
          viewPoorNetworkLocalUser, viewSpeakingIndicator, viewVideoLocal, viewVideoPinned);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
