// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomChatTagRecyclerView;
import com.contusfly.views.CustomRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRecentChatBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final CustomChatTagRecyclerView chatTagRecyclerview;

  @NonNull
  public final ViewEmptyDataBinding emptyList;

  @NonNull
  public final SwipeRefreshLayout itemsSwipeToRefresh;

  @NonNull
  public final ViewNoMessagesBinding noMessageView;

  @NonNull
  public final ViewNoSearchMessageLayoutBinding noSearchMessageView;

  @NonNull
  public final PullRefreshPrivateChatViewLayoutBinding privateChatReleaseView;

  @NonNull
  public final PrivateChatEmptyViewRecentScreenLayoutBinding privateChatUnlockView;

  @NonNull
  public final CustomRecyclerView viewListContacts;

  private FragmentRecentChatBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull CustomChatTagRecyclerView chatTagRecyclerview,
      @NonNull ViewEmptyDataBinding emptyList, @NonNull SwipeRefreshLayout itemsSwipeToRefresh,
      @NonNull ViewNoMessagesBinding noMessageView,
      @NonNull ViewNoSearchMessageLayoutBinding noSearchMessageView,
      @NonNull PullRefreshPrivateChatViewLayoutBinding privateChatReleaseView,
      @NonNull PrivateChatEmptyViewRecentScreenLayoutBinding privateChatUnlockView,
      @NonNull CustomRecyclerView viewListContacts) {
    this.rootView = rootView;
    this.chatTagRecyclerview = chatTagRecyclerview;
    this.emptyList = emptyList;
    this.itemsSwipeToRefresh = itemsSwipeToRefresh;
    this.noMessageView = noMessageView;
    this.noSearchMessageView = noSearchMessageView;
    this.privateChatReleaseView = privateChatReleaseView;
    this.privateChatUnlockView = privateChatUnlockView;
    this.viewListContacts = viewListContacts;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRecentChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRecentChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_recent_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRecentChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chat_tag_recyclerview;
      CustomChatTagRecyclerView chatTagRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (chatTagRecyclerview == null) {
        break missingId;
      }

      id = R.id.empty_list;
      View emptyList = ViewBindings.findChildViewById(rootView, id);
      if (emptyList == null) {
        break missingId;
      }
      ViewEmptyDataBinding binding_emptyList = ViewEmptyDataBinding.bind(emptyList);

      SwipeRefreshLayout itemsSwipeToRefresh = (SwipeRefreshLayout) rootView;

      id = R.id.no_message_view;
      View noMessageView = ViewBindings.findChildViewById(rootView, id);
      if (noMessageView == null) {
        break missingId;
      }
      ViewNoMessagesBinding binding_noMessageView = ViewNoMessagesBinding.bind(noMessageView);

      id = R.id.no_search_message_view;
      View noSearchMessageView = ViewBindings.findChildViewById(rootView, id);
      if (noSearchMessageView == null) {
        break missingId;
      }
      ViewNoSearchMessageLayoutBinding binding_noSearchMessageView = ViewNoSearchMessageLayoutBinding.bind(noSearchMessageView);

      id = R.id.private_chat_release_view;
      View privateChatReleaseView = ViewBindings.findChildViewById(rootView, id);
      if (privateChatReleaseView == null) {
        break missingId;
      }
      PullRefreshPrivateChatViewLayoutBinding binding_privateChatReleaseView = PullRefreshPrivateChatViewLayoutBinding.bind(privateChatReleaseView);

      id = R.id.private_chat_unlock_view;
      View privateChatUnlockView = ViewBindings.findChildViewById(rootView, id);
      if (privateChatUnlockView == null) {
        break missingId;
      }
      PrivateChatEmptyViewRecentScreenLayoutBinding binding_privateChatUnlockView = PrivateChatEmptyViewRecentScreenLayoutBinding.bind(privateChatUnlockView);

      id = R.id.view_list_contacts;
      CustomRecyclerView viewListContacts = ViewBindings.findChildViewById(rootView, id);
      if (viewListContacts == null) {
        break missingId;
      }

      return new FragmentRecentChatBinding((SwipeRefreshLayout) rootView, chatTagRecyclerview,
          binding_emptyList, itemsSwipeToRefresh, binding_noMessageView,
          binding_noSearchMessageView, binding_privateChatReleaseView,
          binding_privateChatUnlockView, viewListContacts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
