// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddPeopleBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton addPeopleButtonView;

  @NonNull
  public final ViewEmptyDataBinding emptyList;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final CustomEditText searchEditText;

  @NonNull
  public final RecyclerView selectedRecyclerview;

  @NonNull
  public final ChatTagCommonToolbarBinding toolbarView;

  private ActivityAddPeopleBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton addPeopleButtonView, @NonNull ViewEmptyDataBinding emptyList,
      @NonNull RecyclerView recyclerview, @NonNull CustomEditText searchEditText,
      @NonNull RecyclerView selectedRecyclerview,
      @NonNull ChatTagCommonToolbarBinding toolbarView) {
    this.rootView = rootView;
    this.addPeopleButtonView = addPeopleButtonView;
    this.emptyList = emptyList;
    this.recyclerview = recyclerview;
    this.searchEditText = searchEditText;
    this.selectedRecyclerview = selectedRecyclerview;
    this.toolbarView = toolbarView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddPeopleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddPeopleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_people, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddPeopleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_people_button_view;
      AppCompatButton addPeopleButtonView = ViewBindings.findChildViewById(rootView, id);
      if (addPeopleButtonView == null) {
        break missingId;
      }

      id = R.id.empty_list;
      View emptyList = ViewBindings.findChildViewById(rootView, id);
      if (emptyList == null) {
        break missingId;
      }
      ViewEmptyDataBinding binding_emptyList = ViewEmptyDataBinding.bind(emptyList);

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.search_edit_text;
      CustomEditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.selected_recyclerview;
      RecyclerView selectedRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (selectedRecyclerview == null) {
        break missingId;
      }

      id = R.id.toolbar_view;
      View toolbarView = ViewBindings.findChildViewById(rootView, id);
      if (toolbarView == null) {
        break missingId;
      }
      ChatTagCommonToolbarBinding binding_toolbarView = ChatTagCommonToolbarBinding.bind(toolbarView);

      return new ActivityAddPeopleBinding((RelativeLayout) rootView, addPeopleButtonView,
          binding_emptyList, recyclerview, searchEditText, selectedRecyclerview,
          binding_toolbarView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
