// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BackupDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar backUpProgress;

  @NonNull
  public final AppCompatTextView backUpText;

  @NonNull
  public final AppCompatTextView dialogTitle;

  @NonNull
  public final LinearLayout linearLayout;

  private BackupDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar backUpProgress, @NonNull AppCompatTextView backUpText,
      @NonNull AppCompatTextView dialogTitle, @NonNull LinearLayout linearLayout) {
    this.rootView = rootView;
    this.backUpProgress = backUpProgress;
    this.backUpText = backUpText;
    this.dialogTitle = dialogTitle;
    this.linearLayout = linearLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BackupDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BackupDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.backup_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BackupDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_up_progress;
      ProgressBar backUpProgress = ViewBindings.findChildViewById(rootView, id);
      if (backUpProgress == null) {
        break missingId;
      }

      id = R.id.back_up_text;
      AppCompatTextView backUpText = ViewBindings.findChildViewById(rootView, id);
      if (backUpText == null) {
        break missingId;
      }

      id = R.id.dialog_title;
      AppCompatTextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      return new BackupDialogBinding((ConstraintLayout) rootView, backUpProgress, backUpText,
          dialogTitle, linearLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
