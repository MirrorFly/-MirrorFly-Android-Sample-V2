// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewStub;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.RoundRectCornerImageView;
import com.contusfly.views.RoundedCornerRelativeLayout;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatVideoReceiverItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar downloadProgressBuffer;

  @NonNull
  public final RowStarredMessageHeaderReceiverBinding headerStarredMessageSender;

  @NonNull
  public final ShapeableImageView icBalloon;

  @NonNull
  public final ImageView icStarRv;

  @NonNull
  public final ImageView imageReceiveChatType;

  @NonNull
  public final RoundRectCornerImageView imageReceiveItem;

  @NonNull
  public final ImageView imageReceivePlay;

  @NonNull
  public final ImageView imgDownloadCancel;

  @NonNull
  public final ProgressBar progressImageReceive;

  @NonNull
  public final ImageView receivedImgForward;

  @NonNull
  public final RelativeLayout rlHeaderReceiver;

  @NonNull
  public final RelativeLayout rowChatImage;

  @NonNull
  public final AppCompatTextView textChatDate;

  @NonNull
  public final AppCompatTextView textReceiveTime;

  @NonNull
  public final AppCompatTextView textReceiverRetry;

  @NonNull
  public final AppCompatTextView textVideoReceiveDuration;

  @NonNull
  public final LinearLayout viewChatRevImg;

  @NonNull
  public final View viewDivider;

  @NonNull
  public final ViewStub viewMessageDate;

  @NonNull
  public final LinearLayout viewReceiveDownload;

  @NonNull
  public final RoundedCornerRelativeLayout viewReceiveDownloadProgress;

  @NonNull
  public final RelativeLayout viewReceiveImage;

  @NonNull
  public final RowRevImageCaptionTextBinding viewRevImageCaption;

  @NonNull
  public final ViewStub viewSenderName;

  private RowChatVideoReceiverItemBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar downloadProgressBuffer,
      @NonNull RowStarredMessageHeaderReceiverBinding headerStarredMessageSender,
      @NonNull ShapeableImageView icBalloon, @NonNull ImageView icStarRv,
      @NonNull ImageView imageReceiveChatType, @NonNull RoundRectCornerImageView imageReceiveItem,
      @NonNull ImageView imageReceivePlay, @NonNull ImageView imgDownloadCancel,
      @NonNull ProgressBar progressImageReceive, @NonNull ImageView receivedImgForward,
      @NonNull RelativeLayout rlHeaderReceiver, @NonNull RelativeLayout rowChatImage,
      @NonNull AppCompatTextView textChatDate, @NonNull AppCompatTextView textReceiveTime,
      @NonNull AppCompatTextView textReceiverRetry,
      @NonNull AppCompatTextView textVideoReceiveDuration, @NonNull LinearLayout viewChatRevImg,
      @NonNull View viewDivider, @NonNull ViewStub viewMessageDate,
      @NonNull LinearLayout viewReceiveDownload,
      @NonNull RoundedCornerRelativeLayout viewReceiveDownloadProgress,
      @NonNull RelativeLayout viewReceiveImage,
      @NonNull RowRevImageCaptionTextBinding viewRevImageCaption,
      @NonNull ViewStub viewSenderName) {
    this.rootView = rootView;
    this.downloadProgressBuffer = downloadProgressBuffer;
    this.headerStarredMessageSender = headerStarredMessageSender;
    this.icBalloon = icBalloon;
    this.icStarRv = icStarRv;
    this.imageReceiveChatType = imageReceiveChatType;
    this.imageReceiveItem = imageReceiveItem;
    this.imageReceivePlay = imageReceivePlay;
    this.imgDownloadCancel = imgDownloadCancel;
    this.progressImageReceive = progressImageReceive;
    this.receivedImgForward = receivedImgForward;
    this.rlHeaderReceiver = rlHeaderReceiver;
    this.rowChatImage = rowChatImage;
    this.textChatDate = textChatDate;
    this.textReceiveTime = textReceiveTime;
    this.textReceiverRetry = textReceiverRetry;
    this.textVideoReceiveDuration = textVideoReceiveDuration;
    this.viewChatRevImg = viewChatRevImg;
    this.viewDivider = viewDivider;
    this.viewMessageDate = viewMessageDate;
    this.viewReceiveDownload = viewReceiveDownload;
    this.viewReceiveDownloadProgress = viewReceiveDownloadProgress;
    this.viewReceiveImage = viewReceiveImage;
    this.viewRevImageCaption = viewRevImageCaption;
    this.viewSenderName = viewSenderName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatVideoReceiverItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatVideoReceiverItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_video_receiver_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatVideoReceiverItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.download_progress_buffer;
      ProgressBar downloadProgressBuffer = ViewBindings.findChildViewById(rootView, id);
      if (downloadProgressBuffer == null) {
        break missingId;
      }

      id = R.id.header_starred_message_sender;
      View headerStarredMessageSender = ViewBindings.findChildViewById(rootView, id);
      if (headerStarredMessageSender == null) {
        break missingId;
      }
      RowStarredMessageHeaderReceiverBinding binding_headerStarredMessageSender = RowStarredMessageHeaderReceiverBinding.bind(headerStarredMessageSender);

      id = R.id.ic_balloon;
      ShapeableImageView icBalloon = ViewBindings.findChildViewById(rootView, id);
      if (icBalloon == null) {
        break missingId;
      }

      id = R.id.ic_star_rv;
      ImageView icStarRv = ViewBindings.findChildViewById(rootView, id);
      if (icStarRv == null) {
        break missingId;
      }

      id = R.id.image_receive_chat_type;
      ImageView imageReceiveChatType = ViewBindings.findChildViewById(rootView, id);
      if (imageReceiveChatType == null) {
        break missingId;
      }

      id = R.id.image_receive_item;
      RoundRectCornerImageView imageReceiveItem = ViewBindings.findChildViewById(rootView, id);
      if (imageReceiveItem == null) {
        break missingId;
      }

      id = R.id.image_receive_play;
      ImageView imageReceivePlay = ViewBindings.findChildViewById(rootView, id);
      if (imageReceivePlay == null) {
        break missingId;
      }

      id = R.id.img_download_cancel;
      ImageView imgDownloadCancel = ViewBindings.findChildViewById(rootView, id);
      if (imgDownloadCancel == null) {
        break missingId;
      }

      id = R.id.progress_image_receive;
      ProgressBar progressImageReceive = ViewBindings.findChildViewById(rootView, id);
      if (progressImageReceive == null) {
        break missingId;
      }

      id = R.id.received_img_forward;
      ImageView receivedImgForward = ViewBindings.findChildViewById(rootView, id);
      if (receivedImgForward == null) {
        break missingId;
      }

      id = R.id.rl_header_receiver;
      RelativeLayout rlHeaderReceiver = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderReceiver == null) {
        break missingId;
      }

      id = R.id.row_chat_image;
      RelativeLayout rowChatImage = ViewBindings.findChildViewById(rootView, id);
      if (rowChatImage == null) {
        break missingId;
      }

      id = R.id.text_chat_date;
      AppCompatTextView textChatDate = ViewBindings.findChildViewById(rootView, id);
      if (textChatDate == null) {
        break missingId;
      }

      id = R.id.text_receive_time;
      AppCompatTextView textReceiveTime = ViewBindings.findChildViewById(rootView, id);
      if (textReceiveTime == null) {
        break missingId;
      }

      id = R.id.text_receiver_retry;
      AppCompatTextView textReceiverRetry = ViewBindings.findChildViewById(rootView, id);
      if (textReceiverRetry == null) {
        break missingId;
      }

      id = R.id.text_video_receive_duration;
      AppCompatTextView textVideoReceiveDuration = ViewBindings.findChildViewById(rootView, id);
      if (textVideoReceiveDuration == null) {
        break missingId;
      }

      id = R.id.view_chat_rev_img;
      LinearLayout viewChatRevImg = ViewBindings.findChildViewById(rootView, id);
      if (viewChatRevImg == null) {
        break missingId;
      }

      id = R.id.view_divider;
      View viewDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewDivider == null) {
        break missingId;
      }

      id = R.id.view_message_date;
      ViewStub viewMessageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewMessageDate == null) {
        break missingId;
      }

      id = R.id.view_receive_download;
      LinearLayout viewReceiveDownload = ViewBindings.findChildViewById(rootView, id);
      if (viewReceiveDownload == null) {
        break missingId;
      }

      id = R.id.view_receive_download_progress;
      RoundedCornerRelativeLayout viewReceiveDownloadProgress = ViewBindings.findChildViewById(rootView, id);
      if (viewReceiveDownloadProgress == null) {
        break missingId;
      }

      id = R.id.view_receive_image;
      RelativeLayout viewReceiveImage = ViewBindings.findChildViewById(rootView, id);
      if (viewReceiveImage == null) {
        break missingId;
      }

      id = R.id.view_rev_image_caption;
      View viewRevImageCaption = ViewBindings.findChildViewById(rootView, id);
      if (viewRevImageCaption == null) {
        break missingId;
      }
      RowRevImageCaptionTextBinding binding_viewRevImageCaption = RowRevImageCaptionTextBinding.bind(viewRevImageCaption);

      id = R.id.view_sender_name;
      ViewStub viewSenderName = ViewBindings.findChildViewById(rootView, id);
      if (viewSenderName == null) {
        break missingId;
      }

      return new RowChatVideoReceiverItemBinding((LinearLayout) rootView, downloadProgressBuffer,
          binding_headerStarredMessageSender, icBalloon, icStarRv, imageReceiveChatType,
          imageReceiveItem, imageReceivePlay, imgDownloadCancel, progressImageReceive,
          receivedImgForward, rlHeaderReceiver, rowChatImage, textChatDate, textReceiveTime,
          textReceiverRetry, textVideoReceiveDuration, viewChatRevImg, viewDivider, viewMessageDate,
          viewReceiveDownload, viewReceiveDownloadProgress, viewReceiveImage,
          binding_viewRevImageCaption, viewSenderName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
