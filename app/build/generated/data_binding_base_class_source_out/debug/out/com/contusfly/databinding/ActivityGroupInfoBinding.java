// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.emoji.widget.EmojiAppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CustomRecyclerView;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.opacapp.multilinecollapsingtoolbar.CollapsingToolbarLayout;

public final class ActivityGroupInfoBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final EmojiAppCompatTextView addParticipant;

  @NonNull
  public final View addParticipantsDivider;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final AppCompatImageView editName;

  @NonNull
  public final RelativeLayout groupMute;

  @NonNull
  public final EmojiAppCompatTextView leaveGroup;

  @NonNull
  public final View leaveGroupDivider;

  @NonNull
  public final CustomRecyclerView membersListView;

  @NonNull
  public final View muteDivider;

  @NonNull
  public final SwitchCompat muteSwitch;

  @NonNull
  public final EmojiAppCompatTextView muteTitle;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final AppCompatImageView profileImage;

  @NonNull
  public final EmojiAppCompatTextView reportGroup;

  @NonNull
  public final View statusDivider;

  @NonNull
  public final EmojiAppCompatTextView subTitle;

  @NonNull
  public final EmojiAppCompatTextView textMedia;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final View viewAllMediaDivider;

  private ActivityGroupInfoBinding(@NonNull CoordinatorLayout rootView,
      @NonNull EmojiAppCompatTextView addParticipant, @NonNull View addParticipantsDivider,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull AppCompatImageView editName,
      @NonNull RelativeLayout groupMute, @NonNull EmojiAppCompatTextView leaveGroup,
      @NonNull View leaveGroupDivider, @NonNull CustomRecyclerView membersListView,
      @NonNull View muteDivider, @NonNull SwitchCompat muteSwitch,
      @NonNull EmojiAppCompatTextView muteTitle, @NonNull NestedScrollView nestedScrollView,
      @NonNull AppCompatImageView profileImage, @NonNull EmojiAppCompatTextView reportGroup,
      @NonNull View statusDivider, @NonNull EmojiAppCompatTextView subTitle,
      @NonNull EmojiAppCompatTextView textMedia, @NonNull Toolbar toolbar,
      @NonNull View viewAllMediaDivider) {
    this.rootView = rootView;
    this.addParticipant = addParticipant;
    this.addParticipantsDivider = addParticipantsDivider;
    this.appBarLayout = appBarLayout;
    this.collapsingToolbar = collapsingToolbar;
    this.coordinatorLayout = coordinatorLayout;
    this.editName = editName;
    this.groupMute = groupMute;
    this.leaveGroup = leaveGroup;
    this.leaveGroupDivider = leaveGroupDivider;
    this.membersListView = membersListView;
    this.muteDivider = muteDivider;
    this.muteSwitch = muteSwitch;
    this.muteTitle = muteTitle;
    this.nestedScrollView = nestedScrollView;
    this.profileImage = profileImage;
    this.reportGroup = reportGroup;
    this.statusDivider = statusDivider;
    this.subTitle = subTitle;
    this.textMedia = textMedia;
    this.toolbar = toolbar;
    this.viewAllMediaDivider = viewAllMediaDivider;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGroupInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGroupInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_group_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGroupInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_participant;
      EmojiAppCompatTextView addParticipant = ViewBindings.findChildViewById(rootView, id);
      if (addParticipant == null) {
        break missingId;
      }

      id = R.id.addParticipantsDivider;
      View addParticipantsDivider = ViewBindings.findChildViewById(rootView, id);
      if (addParticipantsDivider == null) {
        break missingId;
      }

      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.edit_name;
      AppCompatImageView editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.group_mute;
      RelativeLayout groupMute = ViewBindings.findChildViewById(rootView, id);
      if (groupMute == null) {
        break missingId;
      }

      id = R.id.leave_group;
      EmojiAppCompatTextView leaveGroup = ViewBindings.findChildViewById(rootView, id);
      if (leaveGroup == null) {
        break missingId;
      }

      id = R.id.leaveGroupDivider;
      View leaveGroupDivider = ViewBindings.findChildViewById(rootView, id);
      if (leaveGroupDivider == null) {
        break missingId;
      }

      id = R.id.members_list_view;
      CustomRecyclerView membersListView = ViewBindings.findChildViewById(rootView, id);
      if (membersListView == null) {
        break missingId;
      }

      id = R.id.muteDivider;
      View muteDivider = ViewBindings.findChildViewById(rootView, id);
      if (muteDivider == null) {
        break missingId;
      }

      id = R.id.muteSwitch;
      SwitchCompat muteSwitch = ViewBindings.findChildViewById(rootView, id);
      if (muteSwitch == null) {
        break missingId;
      }

      id = R.id.muteTitle;
      EmojiAppCompatTextView muteTitle = ViewBindings.findChildViewById(rootView, id);
      if (muteTitle == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.profileImage;
      AppCompatImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.report_group;
      EmojiAppCompatTextView reportGroup = ViewBindings.findChildViewById(rootView, id);
      if (reportGroup == null) {
        break missingId;
      }

      id = R.id.statusDivider;
      View statusDivider = ViewBindings.findChildViewById(rootView, id);
      if (statusDivider == null) {
        break missingId;
      }

      id = R.id.subTitle;
      EmojiAppCompatTextView subTitle = ViewBindings.findChildViewById(rootView, id);
      if (subTitle == null) {
        break missingId;
      }

      id = R.id.text_media;
      EmojiAppCompatTextView textMedia = ViewBindings.findChildViewById(rootView, id);
      if (textMedia == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.viewAllMediaDivider;
      View viewAllMediaDivider = ViewBindings.findChildViewById(rootView, id);
      if (viewAllMediaDivider == null) {
        break missingId;
      }

      return new ActivityGroupInfoBinding((CoordinatorLayout) rootView, addParticipant,
          addParticipantsDivider, appBarLayout, collapsingToolbar, coordinatorLayout, editName,
          groupMute, leaveGroup, leaveGroupDivider, membersListView, muteDivider, muteSwitch,
          muteTitle, nestedScrollView, profileImage, reportGroup, statusDivider, subTitle,
          textMedia, toolbar, viewAllMediaDivider);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
