// Generated by view binder compiler. Do not edit!
package com.contusfly.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contusfly.R;
import com.contusfly.views.CircularImageView;
import com.contusfly.views.CustomTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatInfoContactItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView icStar;

  @NonNull
  public final CircularImageView imageContactPicture;

  @NonNull
  public final ImageView imageRightArrow;

  @NonNull
  public final ImageView imgContactStatus;

  @NonNull
  public final LinearLayout rowChatContact;

  @NonNull
  public final CustomTextView textContactAction;

  @NonNull
  public final CustomTextView textContactSendName;

  @NonNull
  public final CustomTextView txtContactSendTime;

  @NonNull
  public final View viewContactSeparator;

  @NonNull
  public final LinearLayout viewSendContact;

  private ChatInfoContactItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView icStar,
      @NonNull CircularImageView imageContactPicture, @NonNull ImageView imageRightArrow,
      @NonNull ImageView imgContactStatus, @NonNull LinearLayout rowChatContact,
      @NonNull CustomTextView textContactAction, @NonNull CustomTextView textContactSendName,
      @NonNull CustomTextView txtContactSendTime, @NonNull View viewContactSeparator,
      @NonNull LinearLayout viewSendContact) {
    this.rootView = rootView;
    this.icStar = icStar;
    this.imageContactPicture = imageContactPicture;
    this.imageRightArrow = imageRightArrow;
    this.imgContactStatus = imgContactStatus;
    this.rowChatContact = rowChatContact;
    this.textContactAction = textContactAction;
    this.textContactSendName = textContactSendName;
    this.txtContactSendTime = txtContactSendTime;
    this.viewContactSeparator = viewContactSeparator;
    this.viewSendContact = viewSendContact;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatInfoContactItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatInfoContactItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_info_contact_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatInfoContactItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ic_star;
      ImageView icStar = ViewBindings.findChildViewById(rootView, id);
      if (icStar == null) {
        break missingId;
      }

      id = R.id.image_contact_picture;
      CircularImageView imageContactPicture = ViewBindings.findChildViewById(rootView, id);
      if (imageContactPicture == null) {
        break missingId;
      }

      id = R.id.image_right_arrow;
      ImageView imageRightArrow = ViewBindings.findChildViewById(rootView, id);
      if (imageRightArrow == null) {
        break missingId;
      }

      id = R.id.img_contact_status;
      ImageView imgContactStatus = ViewBindings.findChildViewById(rootView, id);
      if (imgContactStatus == null) {
        break missingId;
      }

      LinearLayout rowChatContact = (LinearLayout) rootView;

      id = R.id.text_contact_action;
      CustomTextView textContactAction = ViewBindings.findChildViewById(rootView, id);
      if (textContactAction == null) {
        break missingId;
      }

      id = R.id.text_contact_send_name;
      CustomTextView textContactSendName = ViewBindings.findChildViewById(rootView, id);
      if (textContactSendName == null) {
        break missingId;
      }

      id = R.id.txt_contact_send_time;
      CustomTextView txtContactSendTime = ViewBindings.findChildViewById(rootView, id);
      if (txtContactSendTime == null) {
        break missingId;
      }

      id = R.id.view_contact_separator;
      View viewContactSeparator = ViewBindings.findChildViewById(rootView, id);
      if (viewContactSeparator == null) {
        break missingId;
      }

      id = R.id.view_send_contact;
      LinearLayout viewSendContact = ViewBindings.findChildViewById(rootView, id);
      if (viewSendContact == null) {
        break missingId;
      }

      return new ChatInfoContactItemBinding((LinearLayout) rootView, icStar, imageContactPicture,
          imageRightArrow, imgContactStatus, rowChatContact, textContactAction, textContactSendName,
          txtContactSendTime, viewContactSeparator, viewSendContact);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
