// Generated by Dagger (https://dagger.dev).
package com.contusfly.di.modules;

import com.contusfly.chat.MessagingClient;
import com.contusfly.chat.ShareMessagesController;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UtilityModule_ProvideShareMessagesControllerFactory implements Factory<ShareMessagesController> {
  private final UtilityModule module;

  private final Provider<MessagingClient> messagingClientProvider;

  public UtilityModule_ProvideShareMessagesControllerFactory(UtilityModule module,
      Provider<MessagingClient> messagingClientProvider) {
    this.module = module;
    this.messagingClientProvider = messagingClientProvider;
  }

  @Override
  public ShareMessagesController get() {
    return provideShareMessagesController(module, messagingClientProvider.get());
  }

  public static UtilityModule_ProvideShareMessagesControllerFactory create(UtilityModule module,
      Provider<MessagingClient> messagingClientProvider) {
    return new UtilityModule_ProvideShareMessagesControllerFactory(module, messagingClientProvider);
  }

  public static ShareMessagesController provideShareMessagesController(UtilityModule instance,
      MessagingClient messagingClient) {
    return Preconditions.checkNotNullFromProvides(instance.provideShareMessagesController(messagingClient));
  }
}
