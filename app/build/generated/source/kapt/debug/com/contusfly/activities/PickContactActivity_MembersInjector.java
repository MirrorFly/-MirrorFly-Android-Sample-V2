// Generated by Dagger (https://dagger.dev).
package com.contusfly.activities;

import com.contusfly.chat.ShareMessagesController;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PickContactActivity_MembersInjector implements MembersInjector<PickContactActivity> {
  private final Provider<ShareMessagesController> shareMessagesControllerProvider;

  public PickContactActivity_MembersInjector(
      Provider<ShareMessagesController> shareMessagesControllerProvider) {
    this.shareMessagesControllerProvider = shareMessagesControllerProvider;
  }

  public static MembersInjector<PickContactActivity> create(
      Provider<ShareMessagesController> shareMessagesControllerProvider) {
    return new PickContactActivity_MembersInjector(shareMessagesControllerProvider);
  }

  @Override
  public void injectMembers(PickContactActivity instance) {
    injectShareMessagesController(instance, shareMessagesControllerProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.activities.PickContactActivity.shareMessagesController")
  public static void injectShareMessagesController(PickContactActivity instance,
      ShareMessagesController shareMessagesController) {
    instance.shareMessagesController = shareMessagesController;
  }
}
