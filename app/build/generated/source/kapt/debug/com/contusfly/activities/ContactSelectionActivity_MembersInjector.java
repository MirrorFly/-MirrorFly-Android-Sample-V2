// Generated by Dagger (https://dagger.dev).
package com.contusfly.activities;

import com.contusfly.chat.MessagingClient;
import com.contusfly.utils.FirebaseUtils;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ContactSelectionActivity_MembersInjector implements MembersInjector<ContactSelectionActivity> {
  private final Provider<FirebaseUtils> firebaseUtilsProvider;

  private final Provider<MessagingClient> messagingClientProvider;

  public ContactSelectionActivity_MembersInjector(Provider<FirebaseUtils> firebaseUtilsProvider,
      Provider<MessagingClient> messagingClientProvider) {
    this.firebaseUtilsProvider = firebaseUtilsProvider;
    this.messagingClientProvider = messagingClientProvider;
  }

  public static MembersInjector<ContactSelectionActivity> create(
      Provider<FirebaseUtils> firebaseUtilsProvider,
      Provider<MessagingClient> messagingClientProvider) {
    return new ContactSelectionActivity_MembersInjector(firebaseUtilsProvider, messagingClientProvider);
  }

  @Override
  public void injectMembers(ContactSelectionActivity instance) {
    BaseActivity_MembersInjector.injectFirebaseUtils(instance, firebaseUtilsProvider.get());
    injectMessagingClient(instance, messagingClientProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.activities.ContactSelectionActivity.messagingClient")
  public static void injectMessagingClient(ContactSelectionActivity instance,
      MessagingClient messagingClient) {
    instance.messagingClient = messagingClient;
  }
}
