// Generated by Dagger (https://dagger.dev).
package com.contusfly.di.components;

import android.app.Application;
import androidx.lifecycle.ViewModel;
import com.contusfly.MyFirebaseMessagingService;
import com.contusfly.MyFirebaseMessagingService_MembersInjector;
import com.contusfly.activities.ArchivedChatsActivity;
import com.contusfly.activities.ArchivedChatsActivity_MembersInjector;
import com.contusfly.activities.BaseActivity;
import com.contusfly.activities.BaseActivity_MembersInjector;
import com.contusfly.activities.ChatActivity;
import com.contusfly.activities.ChatActivity_MembersInjector;
import com.contusfly.activities.ContactSelectionActivity;
import com.contusfly.activities.ContactSelectionActivity_MembersInjector;
import com.contusfly.activities.DashboardActivity;
import com.contusfly.activities.ForwardMessageActivity;
import com.contusfly.activities.ImagePreviewActivity;
import com.contusfly.activities.ImagePreviewActivity_MembersInjector;
import com.contusfly.activities.MediaPreviewActivity;
import com.contusfly.activities.MediaPreviewActivity_MembersInjector;
import com.contusfly.activities.NewContactsActivity;
import com.contusfly.activities.OtpActivity;
import com.contusfly.activities.PickContactActivity;
import com.contusfly.activities.PickContactActivity_MembersInjector;
import com.contusfly.activities.PinActivity;
import com.contusfly.activities.PinActivity_MembersInjector;
import com.contusfly.activities.PinSetting;
import com.contusfly.activities.PinSetting_MembersInjector;
import com.contusfly.activities.ProfileStartActivity;
import com.contusfly.activities.SettingsActivity;
import com.contusfly.activities.StarredMessageActivity;
import com.contusfly.activities.StarredMessageActivity_MembersInjector;
import com.contusfly.activities.UserListActivity;
import com.contusfly.activities.parent.ChatParent;
import com.contusfly.activities.parent.ChatParent_MembersInjector;
import com.contusfly.activities.parent.DashboardParent_MembersInjector;
import com.contusfly.call.calllog.CallHistoryDetailActivity;
import com.contusfly.call.calllog.CallHistoryDetailActivity_MembersInjector;
import com.contusfly.call.calllog.CallHistoryFragment;
import com.contusfly.call.calllog.CallHistoryFragment_MembersInjector;
import com.contusfly.call.calllog.CallLogRepository;
import com.contusfly.call.calllog.CallLogRepository_Factory;
import com.contusfly.call.calllog.CallLogViewModel;
import com.contusfly.call.calllog.CallLogViewModel_Factory;
import com.contusfly.call.groupcall.AddParticipantFragment;
import com.contusfly.call.groupcall.AddParticipantFragment_MembersInjector;
import com.contusfly.call.groupcall.CallViewModel;
import com.contusfly.call.groupcall.CallViewModel_Factory;
import com.contusfly.call.groupcall.ParticipantsListFragment;
import com.contusfly.chat.MessagingClient;
import com.contusfly.chat.ShareMessagesController;
import com.contusfly.chatTag.activities.ChatTagActivity;
import com.contusfly.chatTag.activities.EditTagActivity;
import com.contusfly.constants.MobileApplication;
import com.contusfly.constants.MobileApplication_MembersInjector;
import com.contusfly.di.factory.AppViewModelFactory;
import com.contusfly.di.factory.AppViewModelFactory_Factory;
import com.contusfly.di.modules.ActivityModule_ContributeArchiveChatsActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeBaseActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeBottomSheetOtpFragment$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeCallHistoryDetailActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeChatActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeChatParent$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeChatTagActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeContactSelectionActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeDashBoardActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeEditTagActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeForwardMessageActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeImagePreviewActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeMediaPreviewActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeNewContactsActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeOtpActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributePickContactActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributePinActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributePinSetting$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeProfileStartActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeQuickShareActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeSettingsActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeStarredMessageActivity$app_debug;
import com.contusfly.di.modules.ActivityModule_ContributeUserListActivity$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeAddParticipantFragment$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeBlockedContactsFragment$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeCallHistoryFragment$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeChatsFragment$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeParticipantsListFragment$app_debug;
import com.contusfly.di.modules.FragmentModule_ContributeRecentChatListFragment$app_debug;
import com.contusfly.di.modules.RepoModule;
import com.contusfly.di.modules.RepoModule_ProvideMessageRepositoryFactory;
import com.contusfly.di.modules.ServiceModule_ContributesMyFirebaseMessagingService;
import com.contusfly.di.modules.UtilityModule;
import com.contusfly.di.modules.UtilityModule_ProvideChatViewUtilsFactory;
import com.contusfly.di.modules.UtilityModule_ProvideFirebaseUtilsFactory;
import com.contusfly.di.modules.UtilityModule_ProvideMessagingClientFactory;
import com.contusfly.di.modules.UtilityModule_ProvideShareMessagesControllerFactory;
import com.contusfly.di.modules.UtilityModule_ProvidesSharedPreferenceFactory;
import com.contusfly.fragments.BlockedContactsFragment;
import com.contusfly.fragments.BottomSheetOtpFragment;
import com.contusfly.fragments.BottomSheetOtpFragment_MembersInjector;
import com.contusfly.fragments.ChatsFragment;
import com.contusfly.fragments.RecentChatListFragment;
import com.contusfly.quickShare.QuickShareActivity;
import com.contusfly.quickShare.QuickShareActivity_MembersInjector;
import com.contusfly.repository.MessageRepository;
import com.contusfly.utils.ChatViewUtils;
import com.contusfly.utils.FirebaseUtils;
import com.contusfly.utils.SharedPreferenceManager;
import com.contusfly.viewmodels.ChatParentViewModel;
import com.contusfly.viewmodels.ChatParentViewModel_Factory;
import com.contusfly.viewmodels.ChatViewModel;
import com.contusfly.viewmodels.ChatViewModel_Factory;
import com.contusfly.viewmodels.ContactViewModel;
import com.contusfly.viewmodels.ContactViewModel_Factory;
import com.contusfly.viewmodels.DashboardViewModel;
import com.contusfly.viewmodels.DashboardViewModel_Factory;
import com.contusfly.viewmodels.ForwardMessageViewModel;
import com.contusfly.viewmodels.ForwardMessageViewModel_Factory;
import com.contusfly.viewmodels.MediaPreviewViewModel;
import com.contusfly.viewmodels.MediaPreviewViewModel_Factory;
import com.contusfly.viewmodels.MentionsViewModel;
import com.contusfly.viewmodels.MentionsViewModel_Factory;
import com.contusfly.viewmodels.UserListViewModel;
import com.contusfly.viewmodels.UserListViewModel_Factory;
import com.google.common.collect.ImmutableMap;
import com.google.errorprone.annotations.CanIgnoreReturnValue;
import com.mirrorflysdk.di.components.SdkComponent;
import com.mirrorflysdk.flynetwork.ApiCalls;
import dagger.android.AndroidInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.DispatchingAndroidInjector_Factory;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.InstanceFactory;
import dagger.internal.MapProviderFactory;
import dagger.internal.Preconditions;
import java.util.Map;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent implements AppComponent {
  private final Application application;

  private final SdkComponent sdkComponent;

  private final DaggerAppComponent appComponent = this;

  private Provider<ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent.Factory> dashboardActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent.Factory> newContactsActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent.Factory> userListActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent.Factory> otpActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent.Factory> profileStartActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent.Factory> chatActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent.Factory> chatParentSubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent.Factory> forwardMessageActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent.Factory> callHistoryDetailActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent.Factory> imagePreviewActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent.Factory> pickContactActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent.Factory> archivedChatsActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent.Factory> mediaPreviewActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent.Factory> pinActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent.Factory> pinSettingSubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent.Factory> bottomSheetOtpFragmentSubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent.Factory> settingsActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent.Factory> quickShareActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent.Factory> contactSelectionActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent.Factory> chatTagActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent.Factory> editTagActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent.Factory> starredMessageActivitySubcomponentFactoryProvider;

  private Provider<ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent.Factory> baseActivitySubcomponentFactoryProvider;

  private Provider<ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent.Factory> myFirebaseMessagingServiceSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent.Factory> recentChatListFragmentSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent.Factory> callHistoryFragmentSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent.Factory> addParticipantFragmentSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent.Factory> blockedContactsFragmentSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent.Factory> chatsFragmentSubcomponentFactoryProvider;

  private Provider<FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent.Factory> participantsListFragmentSubcomponentFactoryProvider;

  private Provider<FirebaseUtils> provideFirebaseUtilsProvider;

  private Provider<MessageRepository> provideMessageRepositoryProvider;

  private Provider<ChatParentViewModel> chatParentViewModelProvider;

  private Provider<ChatViewModel> chatViewModelProvider;

  private Provider<CallLogRepository> callLogRepositoryProvider;

  private Provider<ApiCalls> exposeApiCallsProvider;

  private Provider<CallLogViewModel> callLogViewModelProvider;

  private Provider<CallViewModel> callViewModelProvider;

  private Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> mapOfClassOfAndProviderOfViewModelProvider;

  private Provider<AppViewModelFactory> appViewModelFactoryProvider;

  private Provider<ChatViewUtils> provideChatViewUtilsProvider;

  private Provider<SharedPreferenceManager> providesSharedPreferenceProvider;

  private Provider<Application> applicationProvider;

  private Provider<MessagingClient> provideMessagingClientProvider;

  private Provider<ShareMessagesController> provideShareMessagesControllerProvider;

  private DaggerAppComponent(RepoModule repoModuleParam, UtilityModule utilityModuleParam,
      SdkComponent sdkComponentParam, Application applicationParam) {
    this.application = applicationParam;
    this.sdkComponent = sdkComponentParam;
    initialize(repoModuleParam, utilityModuleParam, sdkComponentParam, applicationParam);

  }

  public static AppComponent.Builder builder() {
    return new Builder();
  }

  private Map<Class<?>, Provider<AndroidInjector.Factory<?>>> mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(
      ) {
    return ImmutableMap.<Class<?>, Provider<AndroidInjector.Factory<?>>>builder().put(DashboardActivity.class, ((Provider) dashboardActivitySubcomponentFactoryProvider)).put(NewContactsActivity.class, ((Provider) newContactsActivitySubcomponentFactoryProvider)).put(UserListActivity.class, ((Provider) userListActivitySubcomponentFactoryProvider)).put(OtpActivity.class, ((Provider) otpActivitySubcomponentFactoryProvider)).put(ProfileStartActivity.class, ((Provider) profileStartActivitySubcomponentFactoryProvider)).put(ChatActivity.class, ((Provider) chatActivitySubcomponentFactoryProvider)).put(ChatParent.class, ((Provider) chatParentSubcomponentFactoryProvider)).put(ForwardMessageActivity.class, ((Provider) forwardMessageActivitySubcomponentFactoryProvider)).put(CallHistoryDetailActivity.class, ((Provider) callHistoryDetailActivitySubcomponentFactoryProvider)).put(ImagePreviewActivity.class, ((Provider) imagePreviewActivitySubcomponentFactoryProvider)).put(PickContactActivity.class, ((Provider) pickContactActivitySubcomponentFactoryProvider)).put(ArchivedChatsActivity.class, ((Provider) archivedChatsActivitySubcomponentFactoryProvider)).put(MediaPreviewActivity.class, ((Provider) mediaPreviewActivitySubcomponentFactoryProvider)).put(PinActivity.class, ((Provider) pinActivitySubcomponentFactoryProvider)).put(PinSetting.class, ((Provider) pinSettingSubcomponentFactoryProvider)).put(BottomSheetOtpFragment.class, ((Provider) bottomSheetOtpFragmentSubcomponentFactoryProvider)).put(SettingsActivity.class, ((Provider) settingsActivitySubcomponentFactoryProvider)).put(QuickShareActivity.class, ((Provider) quickShareActivitySubcomponentFactoryProvider)).put(ContactSelectionActivity.class, ((Provider) contactSelectionActivitySubcomponentFactoryProvider)).put(ChatTagActivity.class, ((Provider) chatTagActivitySubcomponentFactoryProvider)).put(EditTagActivity.class, ((Provider) editTagActivitySubcomponentFactoryProvider)).put(StarredMessageActivity.class, ((Provider) starredMessageActivitySubcomponentFactoryProvider)).put(BaseActivity.class, ((Provider) baseActivitySubcomponentFactoryProvider)).put(MyFirebaseMessagingService.class, ((Provider) myFirebaseMessagingServiceSubcomponentFactoryProvider)).put(RecentChatListFragment.class, ((Provider) recentChatListFragmentSubcomponentFactoryProvider)).put(CallHistoryFragment.class, ((Provider) callHistoryFragmentSubcomponentFactoryProvider)).put(AddParticipantFragment.class, ((Provider) addParticipantFragmentSubcomponentFactoryProvider)).put(BlockedContactsFragment.class, ((Provider) blockedContactsFragmentSubcomponentFactoryProvider)).put(ChatsFragment.class, ((Provider) chatsFragmentSubcomponentFactoryProvider)).put(ParticipantsListFragment.class, ((Provider) participantsListFragmentSubcomponentFactoryProvider)).build();
  }

  private DispatchingAndroidInjector<Object> dispatchingAndroidInjectorOfObject() {
    return DispatchingAndroidInjector_Factory.newInstance(mapOfClassOfAndProviderOfAndroidInjectorFactoryOf(), ImmutableMap.<String, Provider<AndroidInjector.Factory<?>>>of());
  }

  @SuppressWarnings("unchecked")
  private void initialize(final RepoModule repoModuleParam, final UtilityModule utilityModuleParam,
      final SdkComponent sdkComponentParam, final Application applicationParam) {
    this.dashboardActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent.Factory get(
          ) {
        return new DashboardActivitySubcomponentFactory(appComponent);
      }
    };
    this.newContactsActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent.Factory get(
          ) {
        return new NewContactsActivitySubcomponentFactory(appComponent);
      }
    };
    this.userListActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent.Factory get(
          ) {
        return new UserListActivitySubcomponentFactory(appComponent);
      }
    };
    this.otpActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent.Factory get() {
        return new OtpActivitySubcomponentFactory(appComponent);
      }
    };
    this.profileStartActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent.Factory get(
          ) {
        return new ProfileStartActivitySubcomponentFactory(appComponent);
      }
    };
    this.chatActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent.Factory get(
          ) {
        return new ChatActivitySubcomponentFactory(appComponent);
      }
    };
    this.chatParentSubcomponentFactoryProvider = new Provider<ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent.Factory get() {
        return new ChatParentSubcomponentFactory(appComponent);
      }
    };
    this.forwardMessageActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent.Factory get(
          ) {
        return new ForwardMessageActivitySubcomponentFactory(appComponent);
      }
    };
    this.callHistoryDetailActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent.Factory get(
          ) {
        return new CallHistoryDetailActivitySubcomponentFactory(appComponent);
      }
    };
    this.imagePreviewActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent.Factory get(
          ) {
        return new ImagePreviewActivitySubcomponentFactory(appComponent);
      }
    };
    this.pickContactActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent.Factory get(
          ) {
        return new PickContactActivitySubcomponentFactory(appComponent);
      }
    };
    this.archivedChatsActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent.Factory get(
          ) {
        return new ArchivedChatsActivitySubcomponentFactory(appComponent);
      }
    };
    this.mediaPreviewActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent.Factory get(
          ) {
        return new MediaPreviewActivitySubcomponentFactory(appComponent);
      }
    };
    this.pinActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent.Factory get() {
        return new PinActivitySubcomponentFactory(appComponent);
      }
    };
    this.pinSettingSubcomponentFactoryProvider = new Provider<ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent.Factory get() {
        return new PinSettingSubcomponentFactory(appComponent);
      }
    };
    this.bottomSheetOtpFragmentSubcomponentFactoryProvider = new Provider<ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent.Factory get(
          ) {
        return new BottomSheetOtpFragmentSubcomponentFactory(appComponent);
      }
    };
    this.settingsActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent.Factory get(
          ) {
        return new SettingsActivitySubcomponentFactory(appComponent);
      }
    };
    this.quickShareActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent.Factory get(
          ) {
        return new QuickShareActivitySubcomponentFactory(appComponent);
      }
    };
    this.contactSelectionActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent.Factory get(
          ) {
        return new ContactSelectionActivitySubcomponentFactory(appComponent);
      }
    };
    this.chatTagActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent.Factory get(
          ) {
        return new ChatTagActivitySubcomponentFactory(appComponent);
      }
    };
    this.editTagActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent.Factory get(
          ) {
        return new EditTagActivitySubcomponentFactory(appComponent);
      }
    };
    this.starredMessageActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent.Factory get(
          ) {
        return new StarredMessageActivitySubcomponentFactory(appComponent);
      }
    };
    this.baseActivitySubcomponentFactoryProvider = new Provider<ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent.Factory>() {
      @Override
      public ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent.Factory get(
          ) {
        return new BaseActivitySubcomponentFactory(appComponent);
      }
    };
    this.myFirebaseMessagingServiceSubcomponentFactoryProvider = new Provider<ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent.Factory>() {
      @Override
      public ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent.Factory get(
          ) {
        return new MyFirebaseMessagingServiceSubcomponentFactory(appComponent);
      }
    };
    this.recentChatListFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent.Factory get(
          ) {
        return new RecentChatListFragmentSubcomponentFactory(appComponent);
      }
    };
    this.callHistoryFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent.Factory get(
          ) {
        return new CallHistoryFragmentSubcomponentFactory(appComponent);
      }
    };
    this.addParticipantFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent.Factory get(
          ) {
        return new AddParticipantFragmentSubcomponentFactory(appComponent);
      }
    };
    this.blockedContactsFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent.Factory get(
          ) {
        return new BlockedContactsFragmentSubcomponentFactory(appComponent);
      }
    };
    this.chatsFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent.Factory get(
          ) {
        return new ChatsFragmentSubcomponentFactory(appComponent);
      }
    };
    this.participantsListFragmentSubcomponentFactoryProvider = new Provider<FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent.Factory>() {
      @Override
      public FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent.Factory get(
          ) {
        return new ParticipantsListFragmentSubcomponentFactory(appComponent);
      }
    };
    this.provideFirebaseUtilsProvider = DoubleCheck.provider(UtilityModule_ProvideFirebaseUtilsFactory.create(utilityModuleParam));
    this.provideMessageRepositoryProvider = DoubleCheck.provider(RepoModule_ProvideMessageRepositoryFactory.create(repoModuleParam));
    this.chatParentViewModelProvider = ChatParentViewModel_Factory.create(provideMessageRepositoryProvider);
    this.chatViewModelProvider = ChatViewModel_Factory.create(provideMessageRepositoryProvider);
    this.callLogRepositoryProvider = DoubleCheck.provider(CallLogRepository_Factory.create());
    this.exposeApiCallsProvider = new com_mirrorflysdk_di_components_SdkComponent_exposeApiCalls(sdkComponentParam);
    this.callLogViewModelProvider = CallLogViewModel_Factory.create(callLogRepositoryProvider, exposeApiCallsProvider);
    this.callViewModelProvider = CallViewModel_Factory.create(callLogRepositoryProvider);
    this.mapOfClassOfAndProviderOfViewModelProvider = MapProviderFactory.<Class<? extends ViewModel>, ViewModel>builder(10).put(DashboardViewModel.class, ((Provider) DashboardViewModel_Factory.create())).put(ChatParentViewModel.class, ((Provider) chatParentViewModelProvider)).put(ContactViewModel.class, ((Provider) ContactViewModel_Factory.create())).put(ChatViewModel.class, ((Provider) chatViewModelProvider)).put(ForwardMessageViewModel.class, ((Provider) ForwardMessageViewModel_Factory.create())).put(CallLogViewModel.class, ((Provider) callLogViewModelProvider)).put(CallViewModel.class, ((Provider) callViewModelProvider)).put(MediaPreviewViewModel.class, ((Provider) MediaPreviewViewModel_Factory.create())).put(UserListViewModel.class, ((Provider) UserListViewModel_Factory.create())).put(MentionsViewModel.class, ((Provider) MentionsViewModel_Factory.create())).build();
    this.appViewModelFactoryProvider = DoubleCheck.provider(AppViewModelFactory_Factory.create(mapOfClassOfAndProviderOfViewModelProvider));
    this.provideChatViewUtilsProvider = DoubleCheck.provider(UtilityModule_ProvideChatViewUtilsFactory.create(utilityModuleParam));
    this.providesSharedPreferenceProvider = DoubleCheck.provider(UtilityModule_ProvidesSharedPreferenceFactory.create(utilityModuleParam));
    this.applicationProvider = InstanceFactory.create(applicationParam);
    this.provideMessagingClientProvider = DoubleCheck.provider(UtilityModule_ProvideMessagingClientFactory.create(utilityModuleParam, applicationProvider));
    this.provideShareMessagesControllerProvider = DoubleCheck.provider(UtilityModule_ProvideShareMessagesControllerFactory.create(utilityModuleParam, provideMessagingClientProvider));
  }

  @Override
  public void inject(MobileApplication instance) {
    injectMobileApplication(instance);
  }

  @CanIgnoreReturnValue
  private MobileApplication injectMobileApplication(MobileApplication instance) {
    MobileApplication_MembersInjector.injectActivityInjector(instance, dispatchingAndroidInjectorOfObject());
    return instance;
  }

  private static final class Builder implements AppComponent.Builder {
    private Application application;

    private SdkComponent sdkComponent;

    @Override
    public Builder application(Application application) {
      this.application = Preconditions.checkNotNull(application);
      return this;
    }

    @Override
    public Builder sdkComponent(SdkComponent sdkComponent) {
      this.sdkComponent = Preconditions.checkNotNull(sdkComponent);
      return this;
    }

    @Override
    public AppComponent build() {
      Preconditions.checkBuilderRequirement(application, Application.class);
      Preconditions.checkBuilderRequirement(sdkComponent, SdkComponent.class);
      return new DaggerAppComponent(new RepoModule(), new UtilityModule(), sdkComponent, application);
    }
  }

  private static final class DashboardActivitySubcomponentFactory implements ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private DashboardActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent create(
        DashboardActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new DashboardActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class NewContactsActivitySubcomponentFactory implements ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private NewContactsActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent create(
        NewContactsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new NewContactsActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class UserListActivitySubcomponentFactory implements ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private UserListActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent create(
        UserListActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new UserListActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class OtpActivitySubcomponentFactory implements ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private OtpActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent create(
        OtpActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new OtpActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ProfileStartActivitySubcomponentFactory implements ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ProfileStartActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent create(
        ProfileStartActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ProfileStartActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ChatActivitySubcomponentFactory implements ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ChatActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent create(
        ChatActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChatActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ChatParentSubcomponentFactory implements ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ChatParentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent create(
        ChatParent arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChatParentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ForwardMessageActivitySubcomponentFactory implements ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ForwardMessageActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent create(
        ForwardMessageActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ForwardMessageActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class CallHistoryDetailActivitySubcomponentFactory implements ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private CallHistoryDetailActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent create(
        CallHistoryDetailActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new CallHistoryDetailActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ImagePreviewActivitySubcomponentFactory implements ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ImagePreviewActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent create(
        ImagePreviewActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ImagePreviewActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class PickContactActivitySubcomponentFactory implements ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private PickContactActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent create(
        PickContactActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PickContactActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ArchivedChatsActivitySubcomponentFactory implements ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ArchivedChatsActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent create(
        ArchivedChatsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ArchivedChatsActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class MediaPreviewActivitySubcomponentFactory implements ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private MediaPreviewActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent create(
        MediaPreviewActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new MediaPreviewActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class PinActivitySubcomponentFactory implements ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private PinActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent create(
        PinActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new PinActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class PinSettingSubcomponentFactory implements ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private PinSettingSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent create(
        PinSetting arg0) {
      Preconditions.checkNotNull(arg0);
      return new PinSettingSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class BottomSheetOtpFragmentSubcomponentFactory implements ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private BottomSheetOtpFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent create(
        BottomSheetOtpFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new BottomSheetOtpFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class SettingsActivitySubcomponentFactory implements ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private SettingsActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent create(
        SettingsActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new SettingsActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class QuickShareActivitySubcomponentFactory implements ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private QuickShareActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent create(
        QuickShareActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new QuickShareActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ContactSelectionActivitySubcomponentFactory implements ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ContactSelectionActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent create(
        ContactSelectionActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ContactSelectionActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ChatTagActivitySubcomponentFactory implements ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ChatTagActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent create(
        ChatTagActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChatTagActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class EditTagActivitySubcomponentFactory implements ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private EditTagActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent create(
        EditTagActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new EditTagActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class StarredMessageActivitySubcomponentFactory implements ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private StarredMessageActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent create(
        StarredMessageActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new StarredMessageActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class BaseActivitySubcomponentFactory implements ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private BaseActivitySubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent create(
        BaseActivity arg0) {
      Preconditions.checkNotNull(arg0);
      return new BaseActivitySubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class MyFirebaseMessagingServiceSubcomponentFactory implements ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private MyFirebaseMessagingServiceSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent create(
        MyFirebaseMessagingService arg0) {
      Preconditions.checkNotNull(arg0);
      return new MyFirebaseMessagingServiceSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class RecentChatListFragmentSubcomponentFactory implements FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private RecentChatListFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent create(
        RecentChatListFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new RecentChatListFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class CallHistoryFragmentSubcomponentFactory implements FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private CallHistoryFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent create(
        CallHistoryFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new CallHistoryFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class AddParticipantFragmentSubcomponentFactory implements FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private AddParticipantFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent create(
        AddParticipantFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new AddParticipantFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class BlockedContactsFragmentSubcomponentFactory implements FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private BlockedContactsFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent create(
        BlockedContactsFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new BlockedContactsFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ChatsFragmentSubcomponentFactory implements FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ChatsFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent create(
        ChatsFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ChatsFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class ParticipantsListFragmentSubcomponentFactory implements FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent.Factory {
    private final DaggerAppComponent appComponent;

    private ParticipantsListFragmentSubcomponentFactory(DaggerAppComponent appComponent) {
      this.appComponent = appComponent;
    }

    @Override
    public FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent create(
        ParticipantsListFragment arg0) {
      Preconditions.checkNotNull(arg0);
      return new ParticipantsListFragmentSubcomponentImpl(appComponent, arg0);
    }
  }

  private static final class com_mirrorflysdk_di_components_SdkComponent_exposeApiCalls implements Provider<ApiCalls> {
    private final SdkComponent sdkComponent;

    com_mirrorflysdk_di_components_SdkComponent_exposeApiCalls(SdkComponent sdkComponent) {
      this.sdkComponent = sdkComponent;
    }

    @Override
    public ApiCalls get() {
      return Preconditions.checkNotNullFromComponent(sdkComponent.exposeApiCalls());
    }
  }

  private static final class DashboardActivitySubcomponentImpl implements ActivityModule_ContributeDashBoardActivity$app_debug.DashboardActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final DashboardActivitySubcomponentImpl dashboardActivitySubcomponentImpl = this;

    private DashboardActivitySubcomponentImpl(DaggerAppComponent appComponent,
        DashboardActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(DashboardActivity arg0) {
      injectDashboardActivity(arg0);
    }

    @CanIgnoreReturnValue
    private DashboardActivity injectDashboardActivity(DashboardActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      DashboardParent_MembersInjector.injectDashboardViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class NewContactsActivitySubcomponentImpl implements ActivityModule_ContributeNewContactsActivity$app_debug.NewContactsActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final NewContactsActivitySubcomponentImpl newContactsActivitySubcomponentImpl = this;

    private NewContactsActivitySubcomponentImpl(DaggerAppComponent appComponent,
        NewContactsActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(NewContactsActivity arg0) {
      injectNewContactsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private NewContactsActivity injectNewContactsActivity(NewContactsActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class UserListActivitySubcomponentImpl implements ActivityModule_ContributeUserListActivity$app_debug.UserListActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final UserListActivitySubcomponentImpl userListActivitySubcomponentImpl = this;

    private UserListActivitySubcomponentImpl(DaggerAppComponent appComponent,
        UserListActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(UserListActivity arg0) {
      injectUserListActivity(arg0);
    }

    @CanIgnoreReturnValue
    private UserListActivity injectUserListActivity(UserListActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class OtpActivitySubcomponentImpl implements ActivityModule_ContributeOtpActivity$app_debug.OtpActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final OtpActivitySubcomponentImpl otpActivitySubcomponentImpl = this;

    private OtpActivitySubcomponentImpl(DaggerAppComponent appComponent, OtpActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(OtpActivity arg0) {
      injectOtpActivity(arg0);
    }

    @CanIgnoreReturnValue
    private OtpActivity injectOtpActivity(OtpActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class ProfileStartActivitySubcomponentImpl implements ActivityModule_ContributeProfileStartActivity$app_debug.ProfileStartActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ProfileStartActivitySubcomponentImpl profileStartActivitySubcomponentImpl = this;

    private ProfileStartActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ProfileStartActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ProfileStartActivity arg0) {
      injectProfileStartActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ProfileStartActivity injectProfileStartActivity(ProfileStartActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class ChatActivitySubcomponentImpl implements ActivityModule_ContributeChatActivity$app_debug.ChatActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ChatActivitySubcomponentImpl chatActivitySubcomponentImpl = this;

    private ChatActivitySubcomponentImpl(DaggerAppComponent appComponent, ChatActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ChatActivity arg0) {
      injectChatActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ChatActivity injectChatActivity(ChatActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ChatParent_MembersInjector.injectChatViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      ChatParent_MembersInjector.injectChatViewUtils(instance, appComponent.provideChatViewUtilsProvider.get());
      ChatParent_MembersInjector.injectSharedPreferenceManager(instance, appComponent.providesSharedPreferenceProvider.get());
      ChatParent_MembersInjector.injectMessagingClient(instance, appComponent.provideMessagingClientProvider.get());
      ChatParent_MembersInjector.injectViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      ChatActivity_MembersInjector.injectMainApplication(instance, appComponent.application);
      return instance;
    }
  }

  private static final class ChatParentSubcomponentImpl implements ActivityModule_ContributeChatParent$app_debug.ChatParentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final ChatParentSubcomponentImpl chatParentSubcomponentImpl = this;

    private ChatParentSubcomponentImpl(DaggerAppComponent appComponent, ChatParent arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ChatParent arg0) {
      injectChatParent(arg0);
    }

    @CanIgnoreReturnValue
    private ChatParent injectChatParent(ChatParent instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ChatParent_MembersInjector.injectChatViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      ChatParent_MembersInjector.injectChatViewUtils(instance, appComponent.provideChatViewUtilsProvider.get());
      ChatParent_MembersInjector.injectSharedPreferenceManager(instance, appComponent.providesSharedPreferenceProvider.get());
      ChatParent_MembersInjector.injectMessagingClient(instance, appComponent.provideMessagingClientProvider.get());
      ChatParent_MembersInjector.injectViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class ForwardMessageActivitySubcomponentImpl implements ActivityModule_ContributeForwardMessageActivity$app_debug.ForwardMessageActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ForwardMessageActivitySubcomponentImpl forwardMessageActivitySubcomponentImpl = this;

    private ForwardMessageActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ForwardMessageActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ForwardMessageActivity arg0) {
      injectForwardMessageActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ForwardMessageActivity injectForwardMessageActivity(ForwardMessageActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class CallHistoryDetailActivitySubcomponentImpl implements ActivityModule_ContributeCallHistoryDetailActivity$app_debug.CallHistoryDetailActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final CallHistoryDetailActivitySubcomponentImpl callHistoryDetailActivitySubcomponentImpl = this;

    private CallHistoryDetailActivitySubcomponentImpl(DaggerAppComponent appComponent,
        CallHistoryDetailActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(CallHistoryDetailActivity arg0) {
      injectCallHistoryDetailActivity(arg0);
    }

    @CanIgnoreReturnValue
    private CallHistoryDetailActivity injectCallHistoryDetailActivity(
        CallHistoryDetailActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      CallHistoryDetailActivity_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      CallHistoryDetailActivity_MembersInjector.injectDashboardViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class ImagePreviewActivitySubcomponentImpl implements ActivityModule_ContributeImagePreviewActivity$app_debug.ImagePreviewActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ImagePreviewActivitySubcomponentImpl imagePreviewActivitySubcomponentImpl = this;

    private ImagePreviewActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ImagePreviewActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ImagePreviewActivity arg0) {
      injectImagePreviewActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ImagePreviewActivity injectImagePreviewActivity(ImagePreviewActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ImagePreviewActivity_MembersInjector.injectShareMessagesController(instance, appComponent.provideShareMessagesControllerProvider.get());
      return instance;
    }
  }

  private static final class PickContactActivitySubcomponentImpl implements ActivityModule_ContributePickContactActivity$app_debug.PickContactActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final PickContactActivitySubcomponentImpl pickContactActivitySubcomponentImpl = this;

    private PickContactActivitySubcomponentImpl(DaggerAppComponent appComponent,
        PickContactActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(PickContactActivity arg0) {
      injectPickContactActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PickContactActivity injectPickContactActivity(PickContactActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      PickContactActivity_MembersInjector.injectShareMessagesController(instance, appComponent.provideShareMessagesControllerProvider.get());
      return instance;
    }
  }

  private static final class ArchivedChatsActivitySubcomponentImpl implements ActivityModule_ContributeArchiveChatsActivity$app_debug.ArchivedChatsActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ArchivedChatsActivitySubcomponentImpl archivedChatsActivitySubcomponentImpl = this;

    private ArchivedChatsActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ArchivedChatsActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ArchivedChatsActivity arg0) {
      injectArchivedChatsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ArchivedChatsActivity injectArchivedChatsActivity(ArchivedChatsActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ArchivedChatsActivity_MembersInjector.injectViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class MediaPreviewActivitySubcomponentImpl implements ActivityModule_ContributeMediaPreviewActivity$app_debug.MediaPreviewActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final MediaPreviewActivitySubcomponentImpl mediaPreviewActivitySubcomponentImpl = this;

    private MediaPreviewActivitySubcomponentImpl(DaggerAppComponent appComponent,
        MediaPreviewActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(MediaPreviewActivity arg0) {
      injectMediaPreviewActivity(arg0);
    }

    @CanIgnoreReturnValue
    private MediaPreviewActivity injectMediaPreviewActivity(MediaPreviewActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      MediaPreviewActivity_MembersInjector.injectMediaPreviewViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      MediaPreviewActivity_MembersInjector.injectMessagingClient(instance, appComponent.provideMessagingClientProvider.get());
      MediaPreviewActivity_MembersInjector.injectShareMessagesController(instance, appComponent.provideShareMessagesControllerProvider.get());
      return instance;
    }
  }

  private static final class PinActivitySubcomponentImpl implements ActivityModule_ContributePinActivity$app_debug.PinActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final PinActivitySubcomponentImpl pinActivitySubcomponentImpl = this;

    private PinActivitySubcomponentImpl(DaggerAppComponent appComponent, PinActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(PinActivity arg0) {
      injectPinActivity(arg0);
    }

    @CanIgnoreReturnValue
    private PinActivity injectPinActivity(PinActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      PinActivity_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      return instance;
    }
  }

  private static final class PinSettingSubcomponentImpl implements ActivityModule_ContributePinSetting$app_debug.PinSettingSubcomponent {
    private final DaggerAppComponent appComponent;

    private final PinSettingSubcomponentImpl pinSettingSubcomponentImpl = this;

    private PinSettingSubcomponentImpl(DaggerAppComponent appComponent, PinSetting arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(PinSetting arg0) {
      injectPinSetting(arg0);
    }

    @CanIgnoreReturnValue
    private PinSetting injectPinSetting(PinSetting instance) {
      PinSetting_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      return instance;
    }
  }

  private static final class BottomSheetOtpFragmentSubcomponentImpl implements ActivityModule_ContributeBottomSheetOtpFragment$app_debug.BottomSheetOtpFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final BottomSheetOtpFragmentSubcomponentImpl bottomSheetOtpFragmentSubcomponentImpl = this;

    private BottomSheetOtpFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        BottomSheetOtpFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(BottomSheetOtpFragment arg0) {
      injectBottomSheetOtpFragment(arg0);
    }

    @CanIgnoreReturnValue
    private BottomSheetOtpFragment injectBottomSheetOtpFragment(BottomSheetOtpFragment instance) {
      BottomSheetOtpFragment_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      return instance;
    }
  }

  private static final class SettingsActivitySubcomponentImpl implements ActivityModule_ContributeSettingsActivity$app_debug.SettingsActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final SettingsActivitySubcomponentImpl settingsActivitySubcomponentImpl = this;

    private SettingsActivitySubcomponentImpl(DaggerAppComponent appComponent,
        SettingsActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(SettingsActivity arg0) {
      injectSettingsActivity(arg0);
    }

    @CanIgnoreReturnValue
    private SettingsActivity injectSettingsActivity(SettingsActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class QuickShareActivitySubcomponentImpl implements ActivityModule_ContributeQuickShareActivity$app_debug.QuickShareActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final QuickShareActivitySubcomponentImpl quickShareActivitySubcomponentImpl = this;

    private QuickShareActivitySubcomponentImpl(DaggerAppComponent appComponent,
        QuickShareActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(QuickShareActivity arg0) {
      injectQuickShareActivity(arg0);
    }

    @CanIgnoreReturnValue
    private QuickShareActivity injectQuickShareActivity(QuickShareActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      QuickShareActivity_MembersInjector.injectShareMessagesController(instance, appComponent.provideShareMessagesControllerProvider.get());
      return instance;
    }
  }

  private static final class ContactSelectionActivitySubcomponentImpl implements ActivityModule_ContributeContactSelectionActivity$app_debug.ContactSelectionActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ContactSelectionActivitySubcomponentImpl contactSelectionActivitySubcomponentImpl = this;

    private ContactSelectionActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ContactSelectionActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ContactSelectionActivity arg0) {
      injectContactSelectionActivity(arg0);
    }

    @CanIgnoreReturnValue
    private ContactSelectionActivity injectContactSelectionActivity(
        ContactSelectionActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ContactSelectionActivity_MembersInjector.injectMessagingClient(instance, appComponent.provideMessagingClientProvider.get());
      return instance;
    }
  }

  private static final class ChatTagActivitySubcomponentImpl implements ActivityModule_ContributeChatTagActivity$app_debug.ChatTagActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final ChatTagActivitySubcomponentImpl chatTagActivitySubcomponentImpl = this;

    private ChatTagActivitySubcomponentImpl(DaggerAppComponent appComponent,
        ChatTagActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ChatTagActivity arg0) {
    }
  }

  private static final class EditTagActivitySubcomponentImpl implements ActivityModule_ContributeEditTagActivity$app_debug.EditTagActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final EditTagActivitySubcomponentImpl editTagActivitySubcomponentImpl = this;

    private EditTagActivitySubcomponentImpl(DaggerAppComponent appComponent,
        EditTagActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(EditTagActivity arg0) {
    }
  }

  private static final class StarredMessageActivitySubcomponentImpl implements ActivityModule_ContributeStarredMessageActivity$app_debug.StarredMessageActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final StarredMessageActivitySubcomponentImpl starredMessageActivitySubcomponentImpl = this;

    private StarredMessageActivitySubcomponentImpl(DaggerAppComponent appComponent,
        StarredMessageActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(StarredMessageActivity arg0) {
      injectStarredMessageActivity(arg0);
    }

    @CanIgnoreReturnValue
    private StarredMessageActivity injectStarredMessageActivity(StarredMessageActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      ChatParent_MembersInjector.injectChatViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      ChatParent_MembersInjector.injectChatViewUtils(instance, appComponent.provideChatViewUtilsProvider.get());
      ChatParent_MembersInjector.injectSharedPreferenceManager(instance, appComponent.providesSharedPreferenceProvider.get());
      ChatParent_MembersInjector.injectMessagingClient(instance, appComponent.provideMessagingClientProvider.get());
      ChatParent_MembersInjector.injectViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      StarredMessageActivity_MembersInjector.injectDashboardViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class BaseActivitySubcomponentImpl implements ActivityModule_ContributeBaseActivity$app_debug.BaseActivitySubcomponent {
    private final DaggerAppComponent appComponent;

    private final BaseActivitySubcomponentImpl baseActivitySubcomponentImpl = this;

    private BaseActivitySubcomponentImpl(DaggerAppComponent appComponent, BaseActivity arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(BaseActivity arg0) {
      injectBaseActivity(arg0);
    }

    @CanIgnoreReturnValue
    private BaseActivity injectBaseActivity(BaseActivity instance) {
      BaseActivity_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class MyFirebaseMessagingServiceSubcomponentImpl implements ServiceModule_ContributesMyFirebaseMessagingService.MyFirebaseMessagingServiceSubcomponent {
    private final DaggerAppComponent appComponent;

    private final MyFirebaseMessagingServiceSubcomponentImpl myFirebaseMessagingServiceSubcomponentImpl = this;

    private MyFirebaseMessagingServiceSubcomponentImpl(DaggerAppComponent appComponent,
        MyFirebaseMessagingService arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(MyFirebaseMessagingService arg0) {
      injectMyFirebaseMessagingService(arg0);
    }

    @CanIgnoreReturnValue
    private MyFirebaseMessagingService injectMyFirebaseMessagingService(
        MyFirebaseMessagingService instance) {
      MyFirebaseMessagingService_MembersInjector.injectFirebaseUtils(instance, appComponent.provideFirebaseUtilsProvider.get());
      return instance;
    }
  }

  private static final class RecentChatListFragmentSubcomponentImpl implements FragmentModule_ContributeRecentChatListFragment$app_debug.RecentChatListFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final RecentChatListFragmentSubcomponentImpl recentChatListFragmentSubcomponentImpl = this;

    private RecentChatListFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        RecentChatListFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(RecentChatListFragment arg0) {
    }
  }

  private static final class CallHistoryFragmentSubcomponentImpl implements FragmentModule_ContributeCallHistoryFragment$app_debug.CallHistoryFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final CallHistoryFragmentSubcomponentImpl callHistoryFragmentSubcomponentImpl = this;

    private CallHistoryFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        CallHistoryFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(CallHistoryFragment arg0) {
      injectCallHistoryFragment(arg0);
    }

    @CanIgnoreReturnValue
    private CallHistoryFragment injectCallHistoryFragment(CallHistoryFragment instance) {
      CallHistoryFragment_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      CallHistoryFragment_MembersInjector.injectCallLogsViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      return instance;
    }
  }

  private static final class AddParticipantFragmentSubcomponentImpl implements FragmentModule_ContributeAddParticipantFragment$app_debug.AddParticipantFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final AddParticipantFragmentSubcomponentImpl addParticipantFragmentSubcomponentImpl = this;

    private AddParticipantFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        AddParticipantFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(AddParticipantFragment arg0) {
      injectAddParticipantFragment(arg0);
    }

    @CanIgnoreReturnValue
    private AddParticipantFragment injectAddParticipantFragment(AddParticipantFragment instance) {
      AddParticipantFragment_MembersInjector.injectCallViewModelFactory(instance, appComponent.appViewModelFactoryProvider.get());
      AddParticipantFragment_MembersInjector.injectApiCalls(instance, Preconditions.checkNotNullFromComponent(appComponent.sdkComponent.exposeApiCalls()));
      return instance;
    }
  }

  private static final class BlockedContactsFragmentSubcomponentImpl implements FragmentModule_ContributeBlockedContactsFragment$app_debug.BlockedContactsFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final BlockedContactsFragmentSubcomponentImpl blockedContactsFragmentSubcomponentImpl = this;

    private BlockedContactsFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        BlockedContactsFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(BlockedContactsFragment arg0) {
    }
  }

  private static final class ChatsFragmentSubcomponentImpl implements FragmentModule_ContributeChatsFragment$app_debug.ChatsFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final ChatsFragmentSubcomponentImpl chatsFragmentSubcomponentImpl = this;

    private ChatsFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        ChatsFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ChatsFragment arg0) {
    }
  }

  private static final class ParticipantsListFragmentSubcomponentImpl implements FragmentModule_ContributeParticipantsListFragment$app_debug.ParticipantsListFragmentSubcomponent {
    private final DaggerAppComponent appComponent;

    private final ParticipantsListFragmentSubcomponentImpl participantsListFragmentSubcomponentImpl = this;

    private ParticipantsListFragmentSubcomponentImpl(DaggerAppComponent appComponent,
        ParticipantsListFragment arg0Param) {
      this.appComponent = appComponent;


    }

    @Override
    public void inject(ParticipantsListFragment arg0) {
    }
  }
}
