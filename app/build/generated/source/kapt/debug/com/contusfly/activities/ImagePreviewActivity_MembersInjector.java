// Generated by Dagger (https://dagger.dev).
package com.contusfly.activities;

import com.contusfly.chat.ShareMessagesController;
import com.contusfly.utils.FirebaseUtils;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ImagePreviewActivity_MembersInjector implements MembersInjector<ImagePreviewActivity> {
  private final Provider<FirebaseUtils> firebaseUtilsProvider;

  private final Provider<ShareMessagesController> shareMessagesControllerProvider;

  public ImagePreviewActivity_MembersInjector(Provider<FirebaseUtils> firebaseUtilsProvider,
      Provider<ShareMessagesController> shareMessagesControllerProvider) {
    this.firebaseUtilsProvider = firebaseUtilsProvider;
    this.shareMessagesControllerProvider = shareMessagesControllerProvider;
  }

  public static MembersInjector<ImagePreviewActivity> create(
      Provider<FirebaseUtils> firebaseUtilsProvider,
      Provider<ShareMessagesController> shareMessagesControllerProvider) {
    return new ImagePreviewActivity_MembersInjector(firebaseUtilsProvider, shareMessagesControllerProvider);
  }

  @Override
  public void injectMembers(ImagePreviewActivity instance) {
    BaseActivity_MembersInjector.injectFirebaseUtils(instance, firebaseUtilsProvider.get());
    injectShareMessagesController(instance, shareMessagesControllerProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.activities.ImagePreviewActivity.shareMessagesController")
  public static void injectShareMessagesController(ImagePreviewActivity instance,
      ShareMessagesController shareMessagesController) {
    instance.shareMessagesController = shareMessagesController;
  }
}
