// Generated by Dagger (https://dagger.dev).
package com.contusfly.activities.parent;

import com.contusfly.di.factory.AppViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DashboardParent_MembersInjector implements MembersInjector<DashboardParent> {
  private final Provider<AppViewModelFactory> dashboardViewModelFactoryProvider;

  public DashboardParent_MembersInjector(
      Provider<AppViewModelFactory> dashboardViewModelFactoryProvider) {
    this.dashboardViewModelFactoryProvider = dashboardViewModelFactoryProvider;
  }

  public static MembersInjector<DashboardParent> create(
      Provider<AppViewModelFactory> dashboardViewModelFactoryProvider) {
    return new DashboardParent_MembersInjector(dashboardViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(DashboardParent instance) {
    injectDashboardViewModelFactory(instance, dashboardViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.activities.parent.DashboardParent.dashboardViewModelFactory")
  public static void injectDashboardViewModelFactory(DashboardParent instance,
      AppViewModelFactory dashboardViewModelFactory) {
    instance.dashboardViewModelFactory = dashboardViewModelFactory;
  }
}
