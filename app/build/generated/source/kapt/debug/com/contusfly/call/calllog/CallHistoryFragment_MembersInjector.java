// Generated by Dagger (https://dagger.dev).
package com.contusfly.call.calllog;

import com.contusfly.di.factory.AppViewModelFactory;
import com.mirrorflysdk.flynetwork.ApiCalls;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CallHistoryFragment_MembersInjector implements MembersInjector<CallHistoryFragment> {
  private final Provider<ApiCalls> apiCallsProvider;

  private final Provider<AppViewModelFactory> callLogsViewModelFactoryProvider;

  public CallHistoryFragment_MembersInjector(Provider<ApiCalls> apiCallsProvider,
      Provider<AppViewModelFactory> callLogsViewModelFactoryProvider) {
    this.apiCallsProvider = apiCallsProvider;
    this.callLogsViewModelFactoryProvider = callLogsViewModelFactoryProvider;
  }

  public static MembersInjector<CallHistoryFragment> create(Provider<ApiCalls> apiCallsProvider,
      Provider<AppViewModelFactory> callLogsViewModelFactoryProvider) {
    return new CallHistoryFragment_MembersInjector(apiCallsProvider, callLogsViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(CallHistoryFragment instance) {
    injectApiCalls(instance, apiCallsProvider.get());
    injectCallLogsViewModelFactory(instance, callLogsViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.call.calllog.CallHistoryFragment.apiCalls")
  public static void injectApiCalls(CallHistoryFragment instance, ApiCalls apiCalls) {
    instance.apiCalls = apiCalls;
  }

  @InjectedFieldSignature("com.contusfly.call.calllog.CallHistoryFragment.callLogsViewModelFactory")
  public static void injectCallLogsViewModelFactory(CallHistoryFragment instance,
      AppViewModelFactory callLogsViewModelFactory) {
    instance.callLogsViewModelFactory = callLogsViewModelFactory;
  }
}
