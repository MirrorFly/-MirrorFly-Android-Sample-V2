// Generated by Dagger (https://dagger.dev).
package com.contusfly.activities;

import com.contusfly.activities.parent.ChatParent_MembersInjector;
import com.contusfly.chat.MessagingClient;
import com.contusfly.di.factory.AppViewModelFactory;
import com.contusfly.utils.ChatViewUtils;
import com.contusfly.utils.SharedPreferenceManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StarredMessageActivity_MembersInjector implements MembersInjector<StarredMessageActivity> {
  private final Provider<AppViewModelFactory> chatViewModelFactoryProvider;

  private final Provider<ChatViewUtils> chatViewUtilsProvider;

  private final Provider<SharedPreferenceManager> sharedPreferenceManagerProvider;

  private final Provider<MessagingClient> messagingClientProvider;

  private final Provider<AppViewModelFactory> viewModelFactoryProvider;

  private final Provider<AppViewModelFactory> dashboardViewModelFactoryProvider;

  public StarredMessageActivity_MembersInjector(
      Provider<AppViewModelFactory> chatViewModelFactoryProvider,
      Provider<ChatViewUtils> chatViewUtilsProvider,
      Provider<SharedPreferenceManager> sharedPreferenceManagerProvider,
      Provider<MessagingClient> messagingClientProvider,
      Provider<AppViewModelFactory> viewModelFactoryProvider,
      Provider<AppViewModelFactory> dashboardViewModelFactoryProvider) {
    this.chatViewModelFactoryProvider = chatViewModelFactoryProvider;
    this.chatViewUtilsProvider = chatViewUtilsProvider;
    this.sharedPreferenceManagerProvider = sharedPreferenceManagerProvider;
    this.messagingClientProvider = messagingClientProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.dashboardViewModelFactoryProvider = dashboardViewModelFactoryProvider;
  }

  public static MembersInjector<StarredMessageActivity> create(
      Provider<AppViewModelFactory> chatViewModelFactoryProvider,
      Provider<ChatViewUtils> chatViewUtilsProvider,
      Provider<SharedPreferenceManager> sharedPreferenceManagerProvider,
      Provider<MessagingClient> messagingClientProvider,
      Provider<AppViewModelFactory> viewModelFactoryProvider,
      Provider<AppViewModelFactory> dashboardViewModelFactoryProvider) {
    return new StarredMessageActivity_MembersInjector(chatViewModelFactoryProvider, chatViewUtilsProvider, sharedPreferenceManagerProvider, messagingClientProvider, viewModelFactoryProvider, dashboardViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(StarredMessageActivity instance) {
    ChatParent_MembersInjector.injectChatViewModelFactory(instance, chatViewModelFactoryProvider.get());
    ChatParent_MembersInjector.injectChatViewUtils(instance, chatViewUtilsProvider.get());
    ChatParent_MembersInjector.injectSharedPreferenceManager(instance, sharedPreferenceManagerProvider.get());
    ChatParent_MembersInjector.injectMessagingClient(instance, messagingClientProvider.get());
    ChatParent_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectDashboardViewModelFactory(instance, dashboardViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.contusfly.activities.StarredMessageActivity.dashboardViewModelFactory")
  public static void injectDashboardViewModelFactory(StarredMessageActivity instance,
      AppViewModelFactory dashboardViewModelFactory) {
    instance.dashboardViewModelFactory = dashboardViewModelFactory;
  }
}
